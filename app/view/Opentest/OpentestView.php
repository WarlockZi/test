<?php


namespace app\view\OpenTest;


use app\model\Model;
use app\model\Opentest;
use app\view\components\CustomCatalogItem\CustomCatalogItem;

class OpentestView
{
	private $model;
	public $html;

	public function __construct(Opentest $model)
	{
		$this->model = $model;
	}

	public static function getUpdateView(Opentest $model)
	{
		$view = new self($model);
		if ($model) {
				$view->html = $view->getHtml($model->fillable, $model);
		} else {
				$view->html = $view->noElement();
		}
		return $view;
	}


	private function getHtml(array $item, \app\Model\Model $model)
	{
		$options = $this->getOptions($item, $model);
		$t = new CustomCatalogItem($options);
		return $t->html;
	}


	private function getOptions(array $item, Model $model)
	{
		return [
			'item' => $item,
			'modelName' => $model->model,
			'tableClassName' => $model->table,
			'pageTitle' => '',
//    'tabs' => [
//      ['title' => 'Права',
//        'html' => getRights($item),
//        'field' => 'rights'
//      ]
//    ],
			'fields' => [
				'ID' => [
					'field' => 'id',
					'contenteditable' => false,
				],

				'Имя' => [
					'field' => 'name',
					'contenteditable' => true,
				],
//			'isTest' => [
//				'className' => 'isTest',
//				'field' => 'isTest',
//				'name' => $item['isTest'],
//				'contenteditable' => false,
//				'data-type' => 'number',
//			],

				'Показывать пользователю' => [
					'field' => 'enable',
					'html' => $this->getEbabled($item),
				],
				'Лежит в папке' => [
					'field' => 'opentest_id',
					'html' => $this->getParent($item),
				],
			],
			'delBttn' => true,
			'saveBttn' => true,
//		'toListBttn' => true,
		];
	}

	private function getEbabled(array $item)
	{
		$enable = new \app\view\components\CustomSelect\CustomSelect([
			'title' => '',
			'field' => 'enable',
			'tree' => ['0' => 'не показывать', '1' => 'показывать'],
			'selected' => $item['enable'],
		]);
		return $enable->html;
	}

	private function getParent($item)
	{
		$r = new \app\model\Opentest();
		$s = $r::findAllWhere('isTest', '0');
		$r->data = $s;
		$tree = $r->tree('opentest_id');

		$parent = new \app\view\components\CustomSelect\CustomSelect([
//			'className' => 'value',
			'title' => '',
//			'field' => 'opentest_id',
			'optionName' => 'name',
			'initialOption' => true,
			'initialOptionLabel' => '',
			'initialOptionValue' => 0,
			'tree' => $tree,
			'selected' => $item['opentest_id'],
		]);
		return $parent->html;
	}


	private function noElement()
	{
		ob_start();
		?>
	  <div class="no-element">
		  <div class="error">Тест не найден</div>
	  </div>
		<?
		return ob_get_clean();
	}


}