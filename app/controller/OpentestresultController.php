<?php

namespace app\controller;

use app\model\Openquestion;
use app\model\Opentestresult;
use app\view\View;


class OpentestresultController Extends AppController
{

	public function __construct(array $route)
	{
		parent::__construct($route);
		$this->autorize();
		$this->layout = 'admin';
		View::setJs('admin.js');
		View::setCss('admin.css');
	}

	public function actionFinish()
	{
		if (!$this->ajax)$this->exitWith('Нет данных');
		if (Opentestresult::create($this->ajax)) {
			$this->exitWith('ok');
		}
	}
	public function actionGetAnswers()
	{
		$id = $this->ajax['id'];
		$questions= Openquestion::where('opentest_id', '=', $id)
			->with('openanswer')
			->orderBy('sort')
			->get();
//		$answers = $questions->answers();
		if ($questions->items) {
			$this->exitJson($questions->items);
		}
	}

	public function actionIndex()
	{
		$res = Opentestresult::findAll();
		$this->set(compact('res'));
	}

	public function actionResult()
	{
		$id = $this->route['id'];
		$res = Opentestresult::findOneWhere('id', $id);
		$this->set(compact('res'));
//		exit($res['html']);
	}


	public function actionDelete()
	{
		$q_id = $this->ajax['q_id'];

		$answers = Answer::findAllWhere('parent_question', $q_id);
		foreach ($answers as $answer) {
			Answer::delete($answer['id']);
		}
		Question::delete($q_id);
		exit(json_encode(['msg' => 'Вопрос и ответы удалены', 'q_id' => $q_id]));
	}

}
