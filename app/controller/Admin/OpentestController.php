<?php

namespace app\controller\Admin;

use app\controller\AppController;
use app\core\Response;
use app\core\Router;
use app\model\Openanswer;
use app\model\Openquestion;
use app\model\Opentest;
use app\model\User;
use app\view\OpenTest\OpentestView1;


class OpentestController extends AppController
{

	public function __construct()
	{
		parent::__construct();
	}

	public function actionDo()
	{
		$page_name = 'Прохождение открытых тестов';
		$this->set(compact('page_name'));
		$accordion = OpentestView1::oldDoAccordion();
		$this->set(compact('accordion'));

		$testId = isset($this->route['id']) ? (int)$this->route['id'] : '';
		$test = Opentest::where('id', $testId)->get()->toArray();
		if ($test) {
			$questions = Openquestion::where('opentest_id', '=', $testId)
				->orderBy('sort')->get();
			foreach ($questions as &$question) {
				$question['answers'] = Openanswer::where('openquestion_id', '=', $question['id'])
					->get();
			}
			$test['questions'] = $questions;

			$this->set(compact('test'));
		}
	}

	public function actionPathshow()
	{
		$this->view = 'edit_show';

		$page_name = 'Создание открытого теста';
		$this->set(compact('page_name'));

		$isTest = 0;
		$this->set(compact('isTest'));

		$id = $this->route['id'] ?? null;

		$test = new Opentest;
		$test->fillable['id'] = $id;

		$item = OpentestView1::getShowView($test);
		$this->set(compact('item'));
	}

	public function actionDelete()
	{
		if (User::can($this->user, ['test_delete'])) {
			if (Opentest::delete($this->ajax['id'])) {
				Response::exitWithPopup('ok');
			}
		}
		$this->ajax['test']['enable'] = 0;
		$this->ajax['test']['id'] = $this->ajax['id'];
		Opentest::update($this->ajax['test']);
		exit(json_encode(['notAdmin' => true]));
	}

	public function actionQuestions()
	{
		$testId = (int)$this->route['id'];
		$html = OpentestView1::getQuetionsView(Opentest::findOneModel($testId));
		$this->set(compact('html'));
	}

	public function actionEdit()
	{
		$id = Router::getRoute()->id;
		if ($id) {
			$test = Opentest::with('questions.answers')
				->find($id);
				$page_name = 'Редактирование открытых тестов';

				$test = Opentest::with('questions.answers')
					->orderBy('sort')
					->find($id);
				$item = OpentestView1::item($test);

				$parentSelector = \app\view\Test\OpentestView::questionParentSelector($test->id);

				$this->set(compact('test','parentSelector'));
			}

	}

	public function actionTests()
	{
		Response::exitJson(Opentest::findAllWhere('isTest', '1'));
	}

	public function actionPaths()
	{
		Response::exitJson(Opentest::findAllWhere('isTest', '0'));
	}

	public function actionGetCorrectAnswers()
	{
		Opentest::getCorrectAnswers();
	}
	public function actionIndex()
	{
	}

//	public function actionUpdate()
//	{
//		if ($this->ajax) {
//			$id = Opentest::update($this->ajax);
//			Response::exitJson(['id' => $id]);
//		}
//		$this->view = 'edit_update';
//
//		$id = $this->route['id'];
//		$item = OpentestView1::getUpdateView($id);
//		$this->set(compact('item'));
//	}

//	public function actionShow()
//	{
//		$this->view = 'edit_show';
//
//		$page_name = 'Создание открытого теста';
//		$this->set(compact('page_name'));
//
//		$isTest = 1;
//		$this->set(compact('isTest'));
//
//		$id = $this->route['id'] ?? null;
//
//		$test = new Opentest;
//		$test->fillable['id'] = $id;
//
//		$item = OpentestView::getShowView($test);
//		$this->set(compact('item'));
//
//	}

//	private function getQuestions($testId)
//	{
//		return Openquestion::where('opentest_id', '=', $testId)
//			->orderBy('sort')
//			->get();
//	}
}
