import"./admin-CzOAMboc.js";import{$ as i,p as n,d as c}from"./common-CcGxFVa3.js";import{a as o}from"./constants-Clh-pk9Y.js";import"./quill.snow-DpC92mTv.js";import"./Promotion-CfM6tpCt.js";import"./search-C9oSBwAd.js";/* empty css              */class h{constructor(t,e){return this.container=i(t).first(),this.container?(this.data={},this.setContext(e),this):null}getValue(){let t=[...i("input[type='checkbox']")].filter(e=>e.checked).map(e=>e.dataset.id);if(t)return t.join(",")}setContext(t){return this.model=t.model,this.data.id=t.id,this}onChange(t){this.container&&(this.container.onchange=function(){let e=this.getValue();this.container.dataset.value=e,this.data[this.container.dataset.field]=e,t.call(this)}.bind(this))}}function r(){return new h(...arguments)}class u{constructor(t,e){i("[my-checkbox]").on("change",this.changeHandle.bind(t))}async changeHandle({target:t}){let e=t?.dataset.field,s={id:this.id,[e]:+t.checked};await n(`/adminsc/${this.model}/updateOrCreate`,s)}}function f(){return new u(...arguments)}class x{constructor(t){if(!t)return!1;this.model=t.dataset.model,this.id=+t.dataset.id,r("[checkboxes]",this.dto()).onChange(this.update),f(this.dto()),t[o]("click",this.handleClick.bind(this)),t[o]("keyup",c(this.handleKeyup.bind(this)))}dto(){return{model:this.model,id:this.id}}async handleKeyup({target:t}){if(!t.hasAttribute("contenteditable")||!t.dataset.field)return!1;const e=t.dataset.field,s=t.dataset.relation,a=this.dto();a.relation=s??null,a.fields={[e]:t.innerText};const d=await n(`/adminsc/${this.model}/updateOrCreate`,a);d&&t.dispatchEvent(new CustomEvent("catalogItem.changed",{bubbles:!0,detail:{res:d}}))}async handleClick({target:t}){t.closest(".save")||t.closest(".detach")||(t.hasAttribute("soft-del")?softDel(this):t.classList.contains("tab")?this.handleTabClick(t):t.getAttribute("type"))}handleTabClick(t){const e=t.dataset.tabId;i("[data-tab].show").first().classList.toggle("show"),i(`[data-tab='${e}']`).first().classList.toggle("show"),i(".tab.active").first().classList.toggle("active"),t.classList.toggle("active")}async softDel(t){let e=`/adminsc/${t.model}/updateorcreate`,s=new Date().toLocaleString("ru-RU",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",hour12:!1,minute:"2-digit"});debugger;let a={deleted_at:s,id:t.id};await n(e,a)&&console.log("lk------")}async update(){await n(`/adminsc/${this.model}/updateorcreate`,this.data)}}export{x as default};
