import{$ as T,l as m,e as k,p as w,m as y}from"./common-BklKRznI.js";import{a as C,q as a,b as c,i as f}from"./constants-D_Ps4z6O.js";import{s as _}from"./shippableUnitsTable-C2hiT_PB.js";class S{constructor(){let t={get_cookie:function(s){let e=document.cookie.match("(^|;) ?"+s+"=([^;]*)(;|$)");return e?unescape(e[2]):null},delete_cookie:function(s){let e=new Date;e.setTime(e.getTime()-1),document.cookie=s+="=; expires="+e.toGMTString()},set_cookie:function(s,e,o,h,d,r,u,p){let n=s+"="+escape(e);if(o){let l=new Date(o,h,d);n+="; expires="+l.toGMTString()}r&&(n+="; path="+escape(r)),u&&(n+="; domain="+escape(u)),p&&(n+="; secure"),document.cookie=n}},i={get:(s,e)=>e in s?s[e]:t.get_cookie(e),set:(s,e,o)=>o?t.set_cookie(e,o):t.delete_cookie(e)};this.cookie=new Proxy(t,i)}}class E{constructor(){this.container=T(".user-content .cart .content").first(),this.container&&(this.container[C]("click",this.handleClick.bind(this)),this.container[C]("keyup",this.handleKeyUp.bind(this)),this.total=this.container[a](".total span"),this.$cartEmptyText=this.container[a](".empty-cart"),this.$cartCount=this.container[a](".cart .count"),this.rows=this.container[c](".row"),this.url="/cart",this.mapTables(),this.renderSums(),this.cookie=new S)}renderSums(){const t=[...this.container[c]("[shippable-table]")].reduce((i,s)=>{const e=+s.dataset.price,o=[...s[c]("[unit-row]")].reduce(function(d,r){const u=+r.dataset.multiplier,p=+r[a]("input").value,n=u*e*p,l=r[a](".subSum");return l&&(l[f]=m.format(n)),d+n}.bind(e),0),h=s.closest(".row")[a](".sub-sum");return h[f]=m.format(o),i+o},0);this.total[f]=m.format(t)}mapTables(){[...this.container[c](".shippable-table")].forEach(t=>{new _(t)})}async dropCart(){const t=k();(await w("/cart/drop",{cartToken:t}))?.arr?.ok&&this.showEmptyCart()}rowUnitIds(t){return[...t[c]("[unit-row]")].map(i=>i.dataset.unitid)}cartRowDTO(t){const i=t.closest(".row");return{sess:k(),product_id:i.dataset.productId,unit_ids:this.rowUnitIds(i)}}async handleClick({target:t}){t.classList.contains("del")?(await this.deleteCartRow(t),this.renderSums()):(t.classList.contains("plus")||t.classList.contains("minus"))&&(this.rowTotalCount(t.closest(".row"))?this.renderSums():this.renderSums())}async handleKeyUp({target:t}){if(t.classList.contains("input")&&t.tagName==="INPUT"){this.renderSums();const i=+t.value;this.updateOrCreate(t,i)}}rowTotalCount(t){return[...t[c]("input")].reduce((i,s)=>i+ +s.value,0)}updateOrCreate(t,i){const s=t.closest("[shippable-table]").dataset["1sid"],e=t.closest("[unit-row]").dataset.unitid;w(`${this.url}/updateOrCreate`,{product_id:s,unit_id:e,count:i})}async deleteCartRow(t){(await w(`${this.url}/deleteRow`,this.cartRowDTO(t)))?.arr?.ok&&(t.closest(".row").remove(),this.rows.length<1&&this.showEmptyCart(),this.renderSums())}showEmptyCart(){this.container.innerHTML="",this.$cartEmptyText.classList.remove("none"),this.$cartCount.classList.add("none")}counterCallback(){y("cartDeadline"),this.dropCart().then()}}export{E as default};
