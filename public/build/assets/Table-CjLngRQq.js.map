{"version":3,"file":"Table-CjLngRQq.js","sources":["../../src/Admin/TableDTO.js","../../src/components/table/Table.js"],"sourcesContent":["export default class TableDTO {\r\n  constructor(target, prev) {\r\n    if (!target) return;\r\n    this.target = target;\r\n    //model\r\n    this.id =\r\n      target?.closest(\".item-wrap\")?.dataset?.id ??\r\n      target?.dataset?.id ??\r\n      target?.parentNode?.dataset?.id;\r\n\r\n    this.fields = target?.dataset?.field ?? false;\r\n\r\n    this.relation =\r\n      target?.dataset?.relation ??\r\n      target?.closest(\"[data-relation]\")?.dataset?.relation ??\r\n      false;\r\n\r\n    this.pivot =\r\n      target?.dataset?.pivot ?? target?.parentNode?.dataset?.pivot ?? false;\r\n    this.attach =\r\n      !!this.target?.closest(\"[custom-table]\")?.dataset?.relationtype;\r\n\r\n    if (this.fields) {\r\n      this.fields = {\r\n        [target?.dataset?.field]:\r\n          target?.dataset?.value ?? target?.checked ?? target?.innerText,\r\n      };\r\n    }\r\n\r\n    if (this.relation) {\r\n      const name = this.relation;\r\n      this.relation = {};\r\n      this.relation.name = name;\r\n      this.relation.id =\r\n        target?.dataset?.value ??\r\n        target?.dataset?.id ??\r\n        0 ??\r\n        target?.closest(\"[data-relation]\")?.dataset?.relation ??\r\n        0;\r\n\r\n      if (this.attach && !this.pivot) {\r\n        this.relation.attach =\r\n          this.target?.dataset?.id ?? this.target?.dataset.value;\r\n        this.relation.detach = prev ?? null;\r\n      } else if (this.pivot) {\r\n        delete this.attach;\r\n        this.relation.pivot = {};\r\n        this.relation.pivot[target?.dataset?.pivot] =\r\n          target?.dataset?.value ?? target?.checked ?? target?.innerText;\r\n      } else {\r\n        this.relation.field = {};\r\n        const fieldName = target?.dataset?.field ?? target?.dataset.pivot;\r\n        this.relation.field[fieldName] =\r\n          target?.dataset?.value ?? target?.checked ?? target?.innerText;\r\n      }\r\n    }\r\n    if (!this.fields) delete this.fields;\r\n    if (!this.relation) delete this.relation;\r\n    delete this.attach;\r\n    delete this.pivot;\r\n    delete this.target;\r\n  }\r\n}\r\n","import \"./table.scss\";\r\n// import '../select/selectNew.scss';\r\nimport { $, debounce, post } from \"../../common\";\r\nimport { ael, qa, qs } from \"@src/constants.js\";\r\nimport SelectNew from \"../../components/select/SelectNew.js\";\r\nimport TableDTO from \"@src/Admin/TableDTO.js\";\r\n\r\nexport default class Table {\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.model =\r\n      table.dataset.model ?? table.closest(\"[data-model]\")?.dataset.model;\r\n    this.modelId =\r\n      table.dataset.id ?? table.closest(\"[data-model]\")?.dataset.id;\r\n    this.relation = table.dataset.relation ?? null;\r\n    this.relationType = table.dataset.relationtype ?? null;\r\n    this.headers = $(\".head\");\r\n    this.inputs = $(\"[data-search]\");\r\n    this.hidden = this.table[qa](\"[hidden]\");\r\n    this.delUrl = `/adminsc/${this.model}/del`;\r\n    this.updateOrCreateUrl = `/adminsc/${this.model}/updateOrCreate`;\r\n\r\n    this.table[ael](\"click\", this.handleClick.bind(this), true);\r\n    this.table[ael](\"keyup\", debounce(this.handleKeyup.bind(this)).bind(this));\r\n    this.table[ael](\"paste\", this.handlePaste.bind(this));\r\n    this.table[ael](\"customSelect.changed\", this.selectChange.bind(this));\r\n\r\n    if (!this.relation) {\r\n      // this.table[ael]('customSelect.changed', this.selectChange.bind(this));\r\n      this.table[ael](\"checkbox.changed\", this.checkboxChange.bind(this));\r\n    }\r\n    this.setCheckboxes();\r\n    this.setSelects();\r\n    this.setSortables();\r\n  }\r\n\r\n  setDelUrl(delUrl) {\r\n    this.delUrl = delUrl;\r\n  }\r\n\r\n  async checkboxChange(e) {\r\n    const dto = new TableDTO(e.target);\r\n    await post(this.updateOrCreateUrl, dto);\r\n  }\r\n\r\n  async selectChange({ detail }) {\r\n    const target = detail.target;\r\n    const dto = new TableDTO(target, detail?.prev?.value);\r\n    const res = await post(`/adminsc/${this.model}/updateorcreate`, dto);\r\n    if (res?.arr?.detach) {\r\n      const prevCells = this.table[qa](`[data-id='${detail.prev.value}']`);\r\n      for (let prevCell of prevCells) {\r\n        prevCell.dataset.id = detail.next.value;\r\n      }\r\n    } else {\r\n      const prevCells = this.table[qa](`[data-id='0']:not([hidden])`);\r\n      for (let prevCell of prevCells) {\r\n        prevCell.dataset.id = detail.next.value;\r\n      }\r\n    }\r\n  }\r\n\r\n  async update(modelId, target) {\r\n    const dto = new TableDTO(target);\r\n    const res = await post(`/adminsc/${this.model}/updateorcreate`, dto);\r\n  }\r\n\r\n  async handleClick(e) {\r\n    const target = e.target;\r\n\r\n    /// create\r\n    if (target.className === \"add-model\") {\r\n      this.copyEmptyRow();\r\n\r\n      /// edit\r\n    } else if (target.classList.contains(\"edit\")) {\r\n      this.edit(target);\r\n\r\n      /// delete\r\n    } else if (\r\n      target.classList.contains(\"del\") &&\r\n      !target.classList.contains(\"head\")\r\n    ) {\r\n      this.modelDel(target);\r\n    } else if (\r\n      target.classList.contains(\"head\") ||\r\n      target.classList.contains(\"icon\")\r\n    ) {\r\n      const header = target.closest(\".head\");\r\n      if (header.hasAttribute(\"data-sort\")) {\r\n        const index = [].findIndex.call(this.sortables, (el, i, inputs) => {\r\n          return el === header;\r\n        });\r\n        this.sortColumn(index);\r\n      }\r\n    }\r\n  }\r\n\r\n  edit(target) {\r\n    if (target.classList.contains(\"head\")) return false;\r\n    const model = this.relation ? this.relationModel : this.model;\r\n    const id = this.relation\r\n      ? target.dataset.id\r\n      : (this.modelId ?? target.dataset.id);\r\n    window.location = `/adminsc/${model}/edit/${id}`;\r\n  }\r\n\r\n  getIds() {\r\n    const els = $(this.table)[0].querySelectorAll(\"[data-id]\");\r\n    return [].filter.call(els, function (el) {\r\n      return el.dataset.id !== \"0\";\r\n    });\r\n  }\r\n\r\n  handlePaste(e) {\r\n    e.target.innerText = e.clipboardData.getData(\"text/plain\");\r\n    this.handleInput(e.target);\r\n    e.target.innerText = \"\";\r\n  }\r\n\r\n  /// INPUT\r\n  async handleKeyup({ target }) {\r\n    if (target.hasAttribute(\"data-search\")) {\r\n      this.search(target);\r\n    } else if (target.hasAttribute(\"contenteditable\")) {\r\n      const res = await post(this.updateOrCreateUrl, new TableDTO(target));\r\n      if (res?.arr?.id) {\r\n        this.newRow(res?.arr.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  // DELETE\r\n  async modelDel(target) {\r\n    if (!confirm(\"Удалить?\")) return;\r\n    const dto = new TableDTO(target);\r\n    const res = await post(this.delUrl, dto);\r\n    if (res?.arr?.id) {\r\n      this.delRow(res?.arr?.id);\r\n    }\r\n  }\r\n\r\n  // UPDATE OR CREATE\r\n  async updateOrcreate(target) {\r\n    const res = await post(this.updateOrCreateUrl, new TableDTO(target));\r\n    if (res?.arr?.success) {\r\n      this.copyEmptyRow(target);\r\n    } else {\r\n      this.newRow(res?.arr.id);\r\n    }\r\n  }\r\n\r\n  copyEmptyRow() {\r\n    [].forEach.call(this.hidden, (cell) => {\r\n      const cloneCell = cell.cloneNode(true);\r\n      cloneCell.removeAttribute(\"hidden\");\r\n      this.addSelectInNewRow(cloneCell);\r\n      const table = this.table[qa](\".custom-table\")[0];\r\n      table.append(cloneCell);\r\n    });\r\n  }\r\n\r\n  newRow(id) {\r\n    [].forEach.call(\r\n      this.hidden,\r\n      function (el) {\r\n        const newEl = el.cloneNode(true);\r\n        newEl.removeAttribute(\"hidden\");\r\n\r\n        this.addSelectInNewRow(newEl);\r\n        const tableContent = $(this.table).find(\".custom-table\");\r\n        tableContent.appendChild(newEl);\r\n\r\n        if ([\"id\"].includes(newEl.dataset.field)) {\r\n          newEl.innerText = id;\r\n        } else if (\r\n          !(\r\n            [\"del\", \"edit\", \"save\"].includes(newEl.className) ||\r\n            newEl.hasChildNodes(\"select\")\r\n          )\r\n        ) {\r\n          newEl.innerText = \"\";\r\n        }\r\n        newEl.dataset[\"id\"] = id;\r\n      }.bind(this),\r\n    );\r\n  }\r\n\r\n  addSelectInNewRow(newEl) {\r\n    if (newEl[qs](\"[select-new]\")) {\r\n      const select = newEl[qs](\"[select-new]\");\r\n      this.removeUsedSelectOptions(select);\r\n      new SelectNew(select);\r\n    }\r\n  }\r\n\r\n  removeUsedSelectOptions(select) {\r\n    const usedSelects = this.table[qa](\"[data-attach]\");\r\n    [].forEach.call(usedSelects, (usedSelects) => {\r\n      [].forEach.call(select.options, (option) => {\r\n        if (option.value === usedSelects.dataset.id) option.remove();\r\n      });\r\n    });\r\n  }\r\n\r\n  /// SEARCH\r\n  search(target, iddex) {\r\n    const rows = this.fillRows();\r\n    [].forEach.call(rows, (row) => {\r\n      [].forEach.call(row, (el) => (el.style.display = \"flex\"));\r\n    });\r\n\r\n    [].forEach.call(this.inputs, (input) => {\r\n      if (input !== target) input.value = \"\";\r\n    });\r\n    const targetHead = target.closest(\".head\");\r\n    const index = [].findIndex.call(this.headers, (el) => {\r\n      return el === targetHead;\r\n    });\r\n    [].forEach.call(rows, function (row) {\r\n      const str = row[index].innerText;\r\n      const regexp = new RegExp(`${target.value}`, \"gi\");\r\n      if (!str.match(regexp)) {\r\n        [].forEach.call(row, (el) => {\r\n          el.style.display = \"none\";\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  fillRows() {\r\n    const rows = [];\r\n    const ids = this.getIds();\r\n    for (let i = 0; i < ids.length; i++) {\r\n      let id = ids[i].dataset.id;\r\n      let row = $(this.table)[0].querySelectorAll(`[data-id='${id}']`);\r\n      rows.push(row);\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  // SORT\r\n  sortColumn(index) {\r\n    const rows = this.fillRows();\r\n    const direction = this.directions[index] || \"asc\";\r\n    const multiplier = direction === \"asc\" ? 1 : -1;\r\n    const newRows = Array.from(rows);\r\n\r\n    newRows.sort(\r\n      function (rowA, rowB) {\r\n        const cellA = rowA[index].innerHTML;\r\n        const cellB = rowB[index].innerHTML;\r\n\r\n        const a = this.transform(index, cellA);\r\n        const b = this.transform(index, cellB);\r\n\r\n        switch (true) {\r\n          case a > b:\r\n            return 1 * multiplier;\r\n          case a < b:\r\n            return -1 * multiplier;\r\n          case a === b:\r\n            return 0;\r\n        }\r\n      }.bind(this),\r\n    );\r\n\r\n    // Удалить старые строки\r\n    [].forEach.call(rows, function (nodeList) {\r\n      [].forEach.call(nodeList, (el) => {\r\n        el.remove();\r\n      });\r\n    });\r\n\r\n    // Поменять направление\r\n    this.directions[index] = direction === \"asc\" ? \"desc\" : \"asc\";\r\n\r\n    // Добавить новую строку\r\n    newRows.forEach(\r\n      function (newRow) {\r\n        newRow = Array.from(newRow);\r\n        newRow.reverse();\r\n        [].forEach.call(newRow, (el) => {\r\n          this.headers[this.headers.length - 1].after(el);\r\n        });\r\n      }.bind(this),\r\n    );\r\n  }\r\n\r\n  transform(index, content) {\r\n    // Преобразовать содержимое данной ячейки в заданном столбце\r\n    if (!this.sortables[index]) return;\r\n    const type = this.sortables[index].getAttribute(\"data-type\");\r\n    return type === \"number\" ? parseFloat(content) : content;\r\n  }\r\n\r\n  delRow(id) {\r\n    const cells = $(`[data-id='${id}']`);\r\n    [].forEach.call(cells, function (cell) {\r\n      cell.remove();\r\n    });\r\n  }\r\n\r\n  setSortables() {\r\n    this.sortables = $(\"[data-sort]\");\r\n    this.directions = Array.from(this.sortables).map(function (sortable) {\r\n      return \"\";\r\n    });\r\n  }\r\n\r\n  setSelects() {\r\n    const selects = $(\"[select-new]:has(option)\");\r\n    [].forEach.call(selects, (select) => {\r\n      if (!select.parentNode.hasAttribute(\"hidden\")) new SelectNew(select);\r\n    });\r\n  }\r\n\r\n  setCheckboxes() {\r\n    const checkboxes = this.table[qa](\"[my-checkbox]\");\r\n    [].forEach.call(checkboxes, (checkbox) => {\r\n      checkbox[ael](\"change\", this.checkboxChange.bind(this));\r\n    });\r\n  }\r\n}\r\n"],"names":["TableDTO","target","prev","name","fieldName","Table","table","$","qa","ael","debounce","delUrl","e","dto","post","detail","prevCells","prevCell","modelId","header","index","el","i","inputs","model","id","els","res","cell","cloneCell","newEl","qs","select","SelectNew","usedSelects","option","iddex","rows","row","input","targetHead","str","regexp","ids","direction","multiplier","newRows","rowA","rowB","cellA","cellB","a","b","nodeList","newRow","content","cells","sortable","selects","checkboxes","checkbox"],"mappings":"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"}