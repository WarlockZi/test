{"version":3,"mappings":"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","names":["Cache","$","e","post","Sync","$sync","target","res","adminScroll","adminPanel","handle","Navigation","str","Pages","tabs","tab","id","quils","quil","MyQuill","change","x","create","picocolors_browserModule","__viteBrowserExternal","_picocolors","_interopRequireDefault","_terminalHighlight","require$$1","CssSyntaxError","message","line","column","source","file","plugin","_this","_Error","name","reason","setMessage","Error","captureStackTrace","_assertThisInitialized","showSourceCode","color","_this2","css","terminalHighlight","pico","isColorSupported","lines","split","start","Math","max","end","min","length","maxWidth","String","mark","text","red","bold","aside","gray","slice","map","index","number","gutter","spacing","replace","join","toString","code","exports","DEFAULT_RAW","capitalize","Stringifier","builder","_proto","node","semicolon","left","right","between","string","params","last","i","child","before","after","own","detect","value","parent","root","method","p","parts","buf","depth","indent","step","prop","raw","_default","module","_stringifier","require$$0","obj","stringify","_cssSyntaxError","_stringify","require$$2","cloneNode","cloned","constructor","hasOwnProperty","type","Array","j","Node","defaults","raws","error","opts","pos","positionBy","input","warn","result","data","remove","removeChild","undefined","stringifier","clone","overrides","cloneBefore","insertBefore","cloneAfter","insertAfter","replaceWith","_len","nodes","_key","_i","_nodes","next","prev","add","toJSON","fixed","defaultType","cleanRaws","keepBetween","positionInside","word","indexOf","_node","_inheritsLoose","subClass","superClass","Declaration","_Node","intToCharMap","base64","charCode","bigA","bigZ","littleA","littleZ","zero","nine","plus","slash","littleOffset","numberOffset","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","base64Vlq","encoded","digit","vlq","aStr","aIndex","aOutParam","strLen","shift","continuation","getArg","aArgs","aName","aDefaultValue","urlRegexp","dataUrlRegexp","urlParse","aUrl","match","urlGenerate","aParsedUrl","url","normalize","aPath","path","isAbsolute","part","up","aRoot","aPathUrl","aRootUrl","joined","relative","level","supportsNullProto","identity","s","toSetString","isProtoString","fromSetString","compareByOriginalPositions","mappingA","mappingB","onlyCompareOriginal","cmp","strcmp","compareByGeneratedPositionsDeflated","onlyCompareGenerated","aStr1","aStr2","compareByGeneratedPositionsInflated","parseSourceMapInput","computeSourceURL","sourceRoot","sourceURL","sourceMapURL","parsed","util","has","hasNativeMap","ArraySet","aArray","aAllowDuplicates","set","len","sStr","isDuplicate","idx","aIdx","arraySet","generatedPositionAfter","lineA","lineB","columnA","columnB","MappingList","aCallback","aThisArg","aMapping","mappingList","base64VLQ","require$$3","SourceMapGenerator","aSourceMapConsumer","generator","mapping","newMapping","sourceFile","sourceRelative","content","generated","original","aSourceFile","aSourceContent","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","aSource","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","nameIdx","sourceIdx","mappings","aSources","aSourceRoot","key","sourceMapGenerator","recursiveSearch","aLow","aHigh","aNeedle","aHaystack","aCompare","aBias","mid","swap","ary","y","temp","randomIntInRange","low","high","doQuickSort","comparator","r","pivotIndex","pivot","q","quickSort","binarySearch","require$$4","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","IndexedSourceMapConsumer","BasicSourceMapConsumer","c","aContext","aOrder","context","order","needle","originalLine","originalColumn","sourceMapConsumer","version","sources","names","sourcesContent","relativeSource","smc","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","Mapping","generatedLine","cachedSegments","originalMappings","segment","aMappings","aLineName","aColumnName","aComparator","nextMapping","sc","nullOnMissing","fileUriAbsPath","sections","lastOffset","offset","offsetLine","offsetColumn","sectionIndex","section","generatedPosition","ret","sectionMappings","adjustedMapping","REGEX_NEWLINE","NEWLINE_CODE","isSourceNode","SourceNode","aLine","aColumn","aChunks","aGeneratedCode","aRelativePath","remainingLines","remainingLinesIndex","shiftNextLine","lineContents","getNextLine","newLine","lastGeneratedLine","lastGeneratedColumn","lastMapping","addMappingWithCode","nextLine","aChunk","chunk","aFn","aSep","newChildren","aPattern","aReplacement","lastChild","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","sourceNode","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","sep","pathObject","dir","base","posix","resolvedPath","resolvedAbsolute","cwd","trailingSeparator","arg","from","to","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toCode","out","hasRoot","matchedSlash","ext","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","pathBrowserify","_sourceMap","_path","_createForOfIteratorHelperLoose","o","allowArrayLike","it","_unsupportedIterableToArray","minLen","_arrayLikeToArray","arr","arr2","MapGenerator","annotation","already","_iterator","_step","eol","_this3","warnOnce","printed","Warning","opt","_warning","_defineProperties","props","descriptor","_createClass","Constructor","protoProps","staticProps","Result","processor","warning","tokenizer","SINGLE_QUOTE","DOUBLE_QUOTE","BACKSLASH","SLASH","NEWLINE","SPACE","FEED","TAB","CR","OPEN_SQUARE","CLOSE_SQUARE","OPEN_PARENTHESES","CLOSE_PARENTHESES","OPEN_CURLY","CLOSE_CURLY","SEMICOLON","ASTERISK","COLON","AT","RE_AT_END","RE_WORD_END","RE_BAD_BRACKET","RE_HEX_ESCAPE","options","ignore","quote","escape","nextOffset","escaped","escapePos","n","currentToken","buffer","returned","position","unclosed","what","endOfFile","nextToken","ignoreUnclosed","controlChar","back","token","Comment","list","separators","array","current","func","letter","spaces","_container","_list","Rule","_Container","values","_declaration","_comment","cleanSource","Container","callback","selector","children","_children","_len2","_key2","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","exist","_iterator5","_step5","_iterator6","_step6","_iterator7","_step7","pattern","decl","condition","sample","parse","_iterator8","_step8","_iterator9","_step9","_i2","AtRule","require$$5","processed","_Container$prototype$","_Container$prototype$2","Root","LazyResult","Processor","lazy","_tokenize","_atRule","_root","_rule","Parser","colon","bracket","brackets","tokens","cache","_type","open","clean","all","lastTokenType","founded","_fs","fromBase64","PreviousMap","sourceMapString","annotations","lastAnnotation","baseCharsetUri","baseUri","uri","encoding","prevPath","_previousMap","sequence","Input","origin","consumer","_parser","_input","parser","_mapGenerator","_stringify2","_result","_parse","isPromise","then","stringified","inline","syntax","warnings","sync","onFulfilled","onRejected","async","catch","finally","onFinally","handleError","postcssPlugin","postcssVersion","pluginName","pluginVer","runtimeVer","a","b","err","console","asyncTick","resolve","reject","plugins","promise","run","Promise","processing","lastPlugin","generate","messages","_lazyResult","use","concat","process","normalized","postcss","isArray","push","vendor","_processor","_vendor","require$$6","require$$7","require$$8","require$$9","initializer","creator","transformer","processOpts","pluginOpts","AdminSidebar","sidebar","ael","li","opened","qs","arrow","Tables","__vitePreload","Search","adminSidebar","Test","MyChart","ProductFilter","Promotion","Modal","Card_panel","Product","Order","catalogItem","CatalogItem","category","Category"],"ignoreList":[6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"sources":["../../src/Admin/cache/Cache.js","../../src/Admin/sync1c/Sync.js","../../src/Admin/sync1c/sync1c.js","../../src/components/scroll/adminScroll.js","../../src/Admin/components/Navigation.js","../../src/Admin/Pages/pages.js","../../../node_modules/postcss/node_modules/picocolors/picocolors.browser.js","../../../__vite-browser-external","../../../node_modules/postcss/lib/css-syntax-error.js","../../../node_modules/postcss/lib/stringifier.js","../../../node_modules/postcss/lib/stringify.js","../../../node_modules/postcss/lib/node.js","../../../node_modules/postcss/lib/declaration.js","../../../node_modules/source-map/lib/base64.js","../../../node_modules/source-map/lib/base64-vlq.js","../../../node_modules/source-map/lib/util.js","../../../node_modules/source-map/lib/array-set.js","../../../node_modules/source-map/lib/mapping-list.js","../../../node_modules/source-map/lib/source-map-generator.js","../../../node_modules/source-map/lib/binary-search.js","../../../node_modules/source-map/lib/quick-sort.js","../../../node_modules/source-map/lib/source-map-consumer.js","../../../node_modules/source-map/lib/source-node.js","../../../node_modules/source-map/source-map.js","../../../node_modules/path-browserify/index.js","../../../node_modules/postcss/lib/map-generator.js","../../../node_modules/postcss/lib/warn-once.js","../../../node_modules/postcss/lib/warning.js","../../../node_modules/postcss/lib/result.js","../../../node_modules/postcss/lib/tokenize.js","../../../node_modules/postcss/lib/comment.js","../../../node_modules/postcss/lib/list.js","../../../node_modules/postcss/lib/rule.js","../../../node_modules/postcss/lib/container.js","../../../node_modules/postcss/lib/at-rule.js","../../../node_modules/postcss/lib/root.js","../../../node_modules/postcss/lib/parser.js","../../../node_modules/postcss/lib/previous-map.js","../../../node_modules/postcss/lib/input.js","../../../node_modules/postcss/lib/parse.js","../../../node_modules/postcss/lib/lazy-result.js","../../../node_modules/postcss/lib/processor.js","../../../node_modules/postcss/lib/vendor.js","../../../node_modules/postcss/lib/postcss.js","../../src/Admin/components/AdminSidebar/AdminSidebar.js","../../src/Admin/admin.js"],"sourcesContent":["import { $, post } from \"../../common.js\";\r\n\r\nexport default class Cache {\r\n  constructor() {\r\n    this.linkCacheClear = $(\"#cache-clear\").first();\r\n    this.linkCacheClear.addEventListener(\"click\", this.clear);\r\n  }\r\n\r\n  async clear(e) {\r\n    e.preventDefault();\r\n    const res = await post(\"/adminsc/cache/clear\", {});\r\n  }\r\n}\r\n","import { $, post } from \"../../common\";\n\nexport class Sync {\n  constructor($sync) {\n    this.$sync = $sync;\n    this.$log_content = $($sync).find(\"#log_content\");\n    this.$sync.onclick = this.handleClick.bind(this);\n  }\n\n  async handleClick({ target }) {\n    if (target.classList.contains(\"button\")) {\n      const res = await post(`/adminsc/sync/${target.id}`);\n\n      if (res?.success) {\n        this.$log_content.innerText = res.content;\n      }\n    }\n  }\n}\n","import \"./sync1c.scss\";\r\nimport { Sync } from \"./Sync\";\r\nimport { $ } from \"../../common\";\r\n\r\nlet $sync = $(\".sync\").first();\r\nif ($sync) {\r\n  new Sync($sync);\r\n}\r\n","import { $ } from \"../../common.js\";\r\n\r\nexport default function adminScroll() {\r\n  const adminPanel = $(\".admin-panel\").first();\r\n\r\n  document.addEventListener(\"scroll\", handle.bind(adminPanel), {\r\n    passive: true,\r\n  });\r\n\r\n  function handle() {\r\n    if (adminPanel)\r\n      window.scrollY > 40\r\n        ? adminPanel.classList.add(\"fixed\")\r\n        : adminPanel.classList.remove(\"fixed\");\r\n  }\r\n}\r\n","import { $ } from \"../../common.js\";\r\n\r\nexport default class Navigation {\r\n  constructor() {\r\n    const str = window.location.pathname;\r\n    if (\r\n      /\\/adminsc\\/settings/.test(str) ||\r\n      /\\/adminsc\\/right\\/list/.test(str) ||\r\n      /\\/adminsc\\/post\\/list/.test(str) ||\r\n      /\\/adminsc\\/todo\\/list/.test(str)\r\n    ) {\r\n      // rights()\r\n      $(\"[settings]\").addClass(\"current\");\r\n    } else if (/\\/auth\\/profile/.test(str)) {\r\n      // user()\r\n    } else if (/\\/adminsc\\/crm/.test(str)) {\r\n      $(\"[crm]\").addClass(\"current\");\r\n    } else if (/\\/adminsc\\/planning/.test(str)) {\r\n      $(\"[plan]\").addClass(\"current\");\r\n    } else if (\r\n      /\\/adminsc\\/category/.test(str) ||\r\n      /\\/adminsc\\/product/.test(str)\r\n    ) {\r\n      $(\"[catalog]\").addClass(\"current\");\r\n    } else if (\r\n      /\\/test/.test(str) ||\r\n      /\\/opentest/.test(str) ||\r\n      /\\/adminsc\\/opentest/.test(str) ||\r\n      /\\/adminsc\\/test/.test(str)\r\n    ) {\r\n      $(\"[test]\").addClass(\"current\");\r\n    } else {\r\n      $(\"[href='/adminsc']\").addClass(\"current\");\r\n    }\r\n  }\r\n}\r\n","import \"./pages.scss\";\r\nimport MyQuill from \"@src/components/quill/MyQuill.js\";\r\nimport { $ } from \"@src/common.js\";\r\n\r\nexport default class Pages {\r\n  constructor() {\r\n    this.setTabs();\r\n    this.setPages();\r\n    this.setQuils();\r\n  }\r\n\r\n  setTabs() {\r\n    const tabs = $(\".tab\");\r\n    tabs[0].classList.add(\"active\");\r\n    [].forEach.call(tabs, (tab) => {\r\n      tab.addEventListener(\"click\", (e) => {\r\n        const id = e.target.dataset.id;\r\n        $(`.page.active`).first().classList.remove(\"active\");\r\n        $(`.page[data-id='${id}']`).first().classList.add(\"active\");\r\n        $(\".tab.active\").first().classList.remove(\"active\");\r\n        e.target.classList.add(\"active\");\r\n      });\r\n    });\r\n  }\r\n\r\n  setPages() {\r\n    const pages = $(\".page\");\r\n    pages[0].classList.add(\"active\");\r\n  }\r\n\r\n  setQuils() {\r\n    const quils = $(\".quill[data-id]\");\r\n    quils[0].classList.add(\"active\");\r\n    [].forEach.call(quils, (quil) => {\r\n      this.id = quil.dataset.id;\r\n      new MyQuill(\r\n        `.quill[data-id='${this.id}']`,\r\n        true,\r\n        true,\r\n        true,\r\n        \"snow\",\r\n        this.dto.bind(this),\r\n      );\r\n    });\r\n  }\r\n\r\n  dto(change) {\r\n    return {\r\n      id: this.id,\r\n      model: \"pages\",\r\n      fields: {\r\n        content: change,\r\n      },\r\n    };\r\n  }\r\n}\r\n","var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n","export default {}","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _picocolors = _interopRequireDefault(require(\"picocolors\"));\n\nvar _terminalHighlight = _interopRequireDefault(require(\"./terminal-highlight\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * The CSS parser throws this error for broken CSS.\n *\n * Custom parsers can throw this error for broken custom syntax using\n * the {@link Node#error} method.\n *\n * PostCSS will use the input source map to detect the original error location.\n * If you wrote a Sass file, compiled it to CSS and then parsed it with PostCSS,\n * PostCSS will show the original position in the Sass file.\n *\n * If you need the position in the PostCSS input\n * (e.g., to debug the previous compiler), use `error.input.file`.\n *\n * @example\n * // Catching and checking syntax error\n * try {\n *   postcss.parse('a{')\n * } catch (error) {\n *   if (error.name === 'CssSyntaxError') {\n *     error //=> CssSyntaxError\n *   }\n * }\n *\n * @example\n * // Raising error from plugin\n * throw node.error('Unknown variable', { plugin: 'postcss-vars' })\n */\nvar CssSyntaxError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(CssSyntaxError, _Error);\n\n  /**\n   * @param {string} message  Error message.\n   * @param {number} [line]   Source line of the error.\n   * @param {number} [column] Source column of the error.\n   * @param {string} [source] Source code of the broken file.\n   * @param {string} [file]   Absolute path to the broken file.\n   * @param {string} [plugin] PostCSS plugin name, if error came from plugin.\n   */\n  function CssSyntaxError(message, line, column, source, file, plugin) {\n    var _this;\n\n    _this = _Error.call(this, message) || this;\n    /**\n     * Always equal to `'CssSyntaxError'`. You should always check error type\n     * by `error.name === 'CssSyntaxError'`\n     * instead of `error instanceof CssSyntaxError`,\n     * because npm could have several PostCSS versions.\n     *\n     * @type {string}\n     *\n     * @example\n     * if (error.name === 'CssSyntaxError') {\n     *   error //=> CssSyntaxError\n     * }\n     */\n\n    _this.name = 'CssSyntaxError';\n    /**\n     * Error message.\n     *\n     * @type {string}\n     *\n     * @example\n     * error.message //=> 'Unclosed block'\n     */\n\n    _this.reason = message;\n\n    if (file) {\n      /**\n       * Absolute path to the broken file.\n       *\n       * @type {string}\n       *\n       * @example\n       * error.file       //=> 'a.sass'\n       * error.input.file //=> 'a.css'\n       */\n      _this.file = file;\n    }\n\n    if (source) {\n      /**\n       * Source code of the broken file.\n       *\n       * @type {string}\n       *\n       * @example\n       * error.source       //=> 'a { b {} }'\n       * error.input.column //=> 'a b { }'\n       */\n      _this.source = source;\n    }\n\n    if (plugin) {\n      /**\n       * Plugin name, if error came from plugin.\n       *\n       * @type {string}\n       *\n       * @example\n       * error.plugin //=> 'postcss-vars'\n       */\n      _this.plugin = plugin;\n    }\n\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      /**\n       * Source line of the error.\n       *\n       * @type {number}\n       *\n       * @example\n       * error.line       //=> 2\n       * error.input.line //=> 4\n       */\n      _this.line = line;\n      /**\n       * Source column of the error.\n       *\n       * @type {number}\n       *\n       * @example\n       * error.column       //=> 1\n       * error.input.column //=> 4\n       */\n\n      _this.column = column;\n    }\n\n    _this.setMessage();\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), CssSyntaxError);\n    }\n\n    return _this;\n  }\n\n  var _proto = CssSyntaxError.prototype;\n\n  _proto.setMessage = function setMessage() {\n    /**\n     * Full error text in the GNU error format\n     * with plugin, file, line and column.\n     *\n     * @type {string}\n     *\n     * @example\n     * error.message //=> 'a.css:1:1: Unclosed block'\n     */\n    this.message = this.plugin ? this.plugin + ': ' : '';\n    this.message += this.file ? this.file : '<css input>';\n\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column;\n    }\n\n    this.message += ': ' + this.reason;\n  }\n  /**\n   * Returns a few lines of CSS source that caused the error.\n   *\n   * If the CSS has an input source map without `sourceContent`,\n   * this method will return an empty string.\n   *\n   * @param {boolean} [color] Whether arrow will be colored red by terminal\n   *                          color codes. By default, PostCSS will detect\n   *                          color support by `process.stdout.isTTY`\n   *                          and `process.env.NODE_DISABLE_COLORS`.\n   *\n   * @example\n   * error.showSourceCode() //=> \"  4 | }\n   *                        //      5 | a {\n   *                        //    > 6 |   bad\n   *                        //        |   ^\n   *                        //      7 | }\n   *                        //      8 | b {\"\n   *\n   * @return {string} Few lines of CSS source that caused the error.\n   */\n  ;\n\n  _proto.showSourceCode = function showSourceCode(color) {\n    var _this2 = this;\n\n    if (!this.source) return '';\n    var css = this.source;\n\n    if (_terminalHighlight.default) {\n      if (typeof color === 'undefined') color = _picocolors.default.isColorSupported;\n      if (color) css = (0, _terminalHighlight.default)(css);\n    }\n\n    var lines = css.split(/\\r?\\n/);\n    var start = Math.max(this.line - 3, 0);\n    var end = Math.min(this.line + 2, lines.length);\n    var maxWidth = String(end).length;\n\n    function mark(text) {\n      if (color && _picocolors.default.red) {\n        return _picocolors.default.red(_picocolors.default.bold(text));\n      }\n\n      return text;\n    }\n\n    function aside(text) {\n      if (color && _picocolors.default.gray) {\n        return _picocolors.default.gray(text);\n      }\n\n      return text;\n    }\n\n    return lines.slice(start, end).map(function (line, index) {\n      var number = start + 1 + index;\n      var gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\n\n      if (number === _this2.line) {\n        var spacing = aside(gutter.replace(/\\d/g, ' ')) + line.slice(0, _this2.column - 1).replace(/[^\\t]/g, ' ');\n        return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^');\n      }\n\n      return ' ' + aside(gutter) + line;\n    }).join('\\n');\n  }\n  /**\n   * Returns error position, message and source code of the broken part.\n   *\n   * @example\n   * error.toString() //=> \"CssSyntaxError: app.css:1:1: Unclosed block\n   *                  //    > 1 | a {\n   *                  //        | ^\"\n   *\n   * @return {string} Error position, message and source code.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    var code = this.showSourceCode();\n\n    if (code) {\n      code = '\\n\\n' + code + '\\n';\n    }\n\n    return this.name + ': ' + this.message + code;\n  }\n  /**\n   * @memberof CssSyntaxError#\n   * @member {Input} input Input object with PostCSS internal information\n   *                       about input file. If input has source map\n   *                       from previous tool, PostCSS will use origin\n   *                       (for example, Sass) source. You can use this\n   *                       object to get PostCSS input source.\n   *\n   * @example\n   * error.input.file //=> 'a.css'\n   * error.file       //=> 'a.sass'\n   */\n  ;\n\n  return CssSyntaxError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar _default = CssSyntaxError;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n};\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nvar Stringifier = /*#__PURE__*/function () {\n  function Stringifier(builder) {\n    this.builder = builder;\n  }\n\n  var _proto = Stringifier.prototype;\n\n  _proto.stringify = function stringify(node, semicolon) {\n    this[node.type](node, semicolon);\n  };\n\n  _proto.root = function root(node) {\n    this.body(node);\n    if (node.raws.after) this.builder(node.raws.after);\n  };\n\n  _proto.comment = function comment(node) {\n    var left = this.raw(node, 'left', 'commentLeft');\n    var right = this.raw(node, 'right', 'commentRight');\n    this.builder('/*' + left + node.text + right + '*/', node);\n  };\n\n  _proto.decl = function decl(node, semicolon) {\n    var between = this.raw(node, 'between', 'colon');\n    var string = node.prop + between + this.rawValue(node, 'value');\n\n    if (node.important) {\n      string += node.raws.important || ' !important';\n    }\n\n    if (semicolon) string += ';';\n    this.builder(string, node);\n  };\n\n  _proto.rule = function rule(node) {\n    this.block(node, this.rawValue(node, 'selector'));\n\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end');\n    }\n  };\n\n  _proto.atrule = function atrule(node, semicolon) {\n    var name = '@' + node.name;\n    var params = node.params ? this.rawValue(node, 'params') : '';\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName;\n    } else if (params) {\n      name += ' ';\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params);\n    } else {\n      var end = (node.raws.between || '') + (semicolon ? ';' : '');\n      this.builder(name + params + end, node);\n    }\n  };\n\n  _proto.body = function body(node) {\n    var last = node.nodes.length - 1;\n\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break;\n      last -= 1;\n    }\n\n    var semicolon = this.raw(node, 'semicolon');\n\n    for (var i = 0; i < node.nodes.length; i++) {\n      var child = node.nodes[i];\n      var before = this.raw(child, 'before');\n      if (before) this.builder(before);\n      this.stringify(child, last !== i || semicolon);\n    }\n  };\n\n  _proto.block = function block(node, start) {\n    var between = this.raw(node, 'between', 'beforeOpen');\n    this.builder(start + between + '{', node, 'start');\n    var after;\n\n    if (node.nodes && node.nodes.length) {\n      this.body(node);\n      after = this.raw(node, 'after');\n    } else {\n      after = this.raw(node, 'after', 'emptyBody');\n    }\n\n    if (after) this.builder(after);\n    this.builder('}', node, 'end');\n  };\n\n  _proto.raw = function raw(node, own, detect) {\n    var value;\n    if (!detect) detect = own; // Already had\n\n    if (own) {\n      value = node.raws[own];\n      if (typeof value !== 'undefined') return value;\n    }\n\n    var parent = node.parent; // Hack for first rule in CSS\n\n    if (detect === 'before') {\n      if (!parent || parent.type === 'root' && parent.first === node) {\n        return '';\n      }\n    } // Floating child without parent\n\n\n    if (!parent) return DEFAULT_RAW[detect]; // Detect style by other nodes\n\n    var root = node.root();\n    if (!root.rawCache) root.rawCache = {};\n\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect];\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect);\n    } else {\n      var method = 'raw' + capitalize(detect);\n\n      if (this[method]) {\n        value = this[method](root, node);\n      } else {\n        root.walk(function (i) {\n          value = i.raws[own];\n          if (typeof value !== 'undefined') return false;\n        });\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\n    root.rawCache[detect] = value;\n    return value;\n  };\n\n  _proto.rawSemicolon = function rawSemicolon(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon;\n        if (typeof value !== 'undefined') return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.rawEmptyBody = function rawEmptyBody(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after;\n        if (typeof value !== 'undefined') return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.rawIndent = function rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent;\n    var value;\n    root.walk(function (i) {\n      var p = i.parent;\n\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          var parts = i.raws.before.split('\\n');\n          value = parts[parts.length - 1];\n          value = value.replace(/[^\\s]/g, '');\n          return false;\n        }\n      }\n    });\n    return value;\n  };\n\n  _proto.rawBeforeComment = function rawBeforeComment(root, node) {\n    var value;\n    root.walkComments(function (i) {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n\n        return false;\n      }\n    });\n\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '');\n    }\n\n    return value;\n  };\n\n  _proto.rawBeforeDecl = function rawBeforeDecl(root, node) {\n    var value;\n    root.walkDecls(function (i) {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n\n        return false;\n      }\n    });\n\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule');\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '');\n    }\n\n    return value;\n  };\n\n  _proto.rawBeforeRule = function rawBeforeRule(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before;\n\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/[^\\s]/g, '');\n    return value;\n  };\n\n  _proto.rawBeforeClose = function rawBeforeClose(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after;\n\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/[^\\s]/g, '');\n    return value;\n  };\n\n  _proto.rawBeforeOpen = function rawBeforeOpen(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.type !== 'decl') {\n        value = i.raws.between;\n        if (typeof value !== 'undefined') return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.rawColon = function rawColon(root) {\n    var value;\n    root.walkDecls(function (i) {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '');\n        return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.beforeAfter = function beforeAfter(node, detect) {\n    var value;\n\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment');\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule');\n    } else {\n      value = this.raw(node, null, 'beforeClose');\n    }\n\n    var buf = node.parent;\n    var depth = 0;\n\n    while (buf && buf.type !== 'root') {\n      depth += 1;\n      buf = buf.parent;\n    }\n\n    if (value.indexOf('\\n') !== -1) {\n      var indent = this.raw(node, null, 'indent');\n\n      if (indent.length) {\n        for (var step = 0; step < depth; step++) {\n          value += indent;\n        }\n      }\n    }\n\n    return value;\n  };\n\n  _proto.rawValue = function rawValue(node, prop) {\n    var value = node[prop];\n    var raw = node.raws[prop];\n\n    if (raw && raw.value === value) {\n      return raw.raw;\n    }\n\n    return value;\n  };\n\n  return Stringifier;\n}();\n\nvar _default = Stringifier;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _stringifier = _interopRequireDefault(require(\"./stringifier\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringify(node, builder) {\n  var str = new _stringifier.default(builder);\n  str.stringify(node);\n}\n\nvar _default = stringify;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0cmluZ2lmeS5lczYiXSwibmFtZXMiOlsic3RyaW5naWZ5Iiwibm9kZSIsImJ1aWxkZXIiLCJzdHIiLCJTdHJpbmdpZmllciJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztBQUVBLFNBQVNBLFNBQVQsQ0FBb0JDLElBQXBCLEVBQTBCQyxPQUExQixFQUFtQztBQUNqQyxNQUFJQyxHQUFHLEdBQUcsSUFBSUMsb0JBQUosQ0FBZ0JGLE9BQWhCLENBQVY7QUFDQUMsRUFBQUEsR0FBRyxDQUFDSCxTQUFKLENBQWNDLElBQWQ7QUFDRDs7ZUFFY0QsUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJpbmdpZmllciBmcm9tICcuL3N0cmluZ2lmaWVyJ1xuXG5mdW5jdGlvbiBzdHJpbmdpZnkgKG5vZGUsIGJ1aWxkZXIpIHtcbiAgbGV0IHN0ciA9IG5ldyBTdHJpbmdpZmllcihidWlsZGVyKVxuICBzdHIuc3RyaW5naWZ5KG5vZGUpXG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0cmluZ2lmeVxuIl0sImZpbGUiOiJzdHJpbmdpZnkuanMifQ==\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _cssSyntaxError = _interopRequireDefault(require(\"./css-syntax-error\"));\n\nvar _stringifier = _interopRequireDefault(require(\"./stringifier\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction cloneNode(obj, parent) {\n  var cloned = new obj.constructor();\n\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) continue;\n    var value = obj[i];\n    var type = typeof value;\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent;\n    } else if (i === 'source') {\n      cloned[i] = value;\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n\n  return cloned;\n}\n/**\n * All node classes inherit the following common methods.\n *\n * @abstract\n */\n\n\nvar Node = /*#__PURE__*/function () {\n  /**\n   * @param {object} [defaults] Value for node properties.\n   */\n  function Node(defaults) {\n    if (defaults === void 0) {\n      defaults = {};\n    }\n\n    this.raws = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof defaults !== 'object' && typeof defaults !== 'undefined') {\n        throw new Error('PostCSS nodes constructor accepts object, not ' + JSON.stringify(defaults));\n      }\n    }\n\n    for (var name in defaults) {\n      this[name] = defaults[name];\n    }\n  }\n  /**\n   * Returns a `CssSyntaxError` instance containing the original position\n   * of the node in the source, showing line and column numbers and also\n   * a small excerpt to facilitate debugging.\n   *\n   * If present, an input source map will be used to get the original position\n   * of the source, even from a previous compilation step\n   * (e.g., from Sass compilation).\n   *\n   * This method produces very useful error messages.\n   *\n   * @param {string} message     Error description.\n   * @param {object} [opts]      Options.\n   * @param {string} opts.plugin Plugin name that created this error.\n   *                             PostCSS will set it automatically.\n   * @param {string} opts.word   A word inside a node’s string that should\n   *                             be highlighted as the source of the error.\n   * @param {number} opts.index  An index inside a node’s string that should\n   *                             be highlighted as the source of the error.\n   *\n   * @return {CssSyntaxError} Error object to throw it.\n   *\n   * @example\n   * if (!variables[name]) {\n   *   throw decl.error('Unknown variable ' + name, { word: name })\n   *   // CssSyntaxError: postcss-vars:a.sass:4:3: Unknown variable $black\n   *   //   color: $black\n   *   // a\n   *   //          ^\n   *   //   background: white\n   * }\n   */\n\n\n  var _proto = Node.prototype;\n\n  _proto.error = function error(message, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (this.source) {\n      var pos = this.positionBy(opts);\n      return this.source.input.error(message, pos.line, pos.column, opts);\n    }\n\n    return new _cssSyntaxError.default(message);\n  }\n  /**\n   * This method is provided as a convenience wrapper for {@link Result#warn}.\n   *\n   * @param {Result} result      The {@link Result} instance\n   *                             that will receive the warning.\n   * @param {string} text        Warning message.\n   * @param {object} [opts]      Options\n   * @param {string} opts.plugin Plugin name that created this warning.\n   *                             PostCSS will set it automatically.\n   * @param {string} opts.word   A word inside a node’s string that should\n   *                             be highlighted as the source of the warning.\n   * @param {number} opts.index  An index inside a node’s string that should\n   *                             be highlighted as the source of the warning.\n   *\n   * @return {Warning} Created warning object.\n   *\n   * @example\n   * const plugin = postcss.plugin('postcss-deprecated', () => {\n   *   return (root, result) => {\n   *     root.walkDecls('bad', decl => {\n   *       decl.warn(result, 'Deprecated property bad')\n   *     })\n   *   }\n   * })\n   */\n  ;\n\n  _proto.warn = function warn(result, text, opts) {\n    var data = {\n      node: this\n    };\n\n    for (var i in opts) {\n      data[i] = opts[i];\n    }\n\n    return result.warn(text, data);\n  }\n  /**\n   * Removes the node from its parent and cleans the parent properties\n   * from the node and its children.\n   *\n   * @example\n   * if (decl.prop.match(/^-webkit-/)) {\n   *   decl.remove()\n   * }\n   *\n   * @return {Node} Node to make calls chain.\n   */\n  ;\n\n  _proto.remove = function remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    this.parent = undefined;\n    return this;\n  }\n  /**\n   * Returns a CSS string representing the node.\n   *\n   * @param {stringifier|syntax} [stringifier] A syntax to use\n   *                                           in string generation.\n   *\n   * @return {string} CSS string of this node.\n   *\n   * @example\n   * postcss.rule({ selector: 'a' }).toString() //=> \"a {}\"\n   */\n  ;\n\n  _proto.toString = function toString(stringifier) {\n    if (stringifier === void 0) {\n      stringifier = _stringify.default;\n    }\n\n    if (stringifier.stringify) stringifier = stringifier.stringify;\n    var result = '';\n    stringifier(this, function (i) {\n      result += i;\n    });\n    return result;\n  }\n  /**\n   * Returns an exact clone of the node.\n   *\n   * The resulting cloned node and its (cloned) children will retain\n   * code style properties.\n   *\n   * @param {object} [overrides] New properties to override in the clone.\n   *\n   * @example\n   * decl.raws.before    //=> \"\\n  \"\n   * const cloned = decl.clone({ prop: '-moz-' + decl.prop })\n   * cloned.raws.before  //=> \"\\n  \"\n   * cloned.toString()   //=> -moz-transform: scale(0)\n   *\n   * @return {Node} Clone of the node.\n   */\n  ;\n\n  _proto.clone = function clone(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    var cloned = cloneNode(this);\n\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n\n    return cloned;\n  }\n  /**\n   * Shortcut to clone the node and insert the resulting cloned node\n   * before the current node.\n   *\n   * @param {object} [overrides] Mew properties to override in the clone.\n   *\n   * @example\n   * decl.cloneBefore({ prop: '-moz-' + decl.prop })\n   *\n   * @return {Node} New node\n   */\n  ;\n\n  _proto.cloneBefore = function cloneBefore(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    var cloned = this.clone(overrides);\n    this.parent.insertBefore(this, cloned);\n    return cloned;\n  }\n  /**\n   * Shortcut to clone the node and insert the resulting cloned node\n   * after the current node.\n   *\n   * @param {object} [overrides] New properties to override in the clone.\n   *\n   * @return {Node} New node.\n   */\n  ;\n\n  _proto.cloneAfter = function cloneAfter(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    var cloned = this.clone(overrides);\n    this.parent.insertAfter(this, cloned);\n    return cloned;\n  }\n  /**\n   * Inserts node(s) before the current node and removes the current node.\n   *\n   * @param {...Node} nodes Mode(s) to replace current one.\n   *\n   * @example\n   * if (atrule.name === 'mixin') {\n   *   atrule.replaceWith(mixinRules[atrule.params])\n   * }\n   *\n   * @return {Node} Current node to methods chain.\n   */\n  ;\n\n  _proto.replaceWith = function replaceWith() {\n    if (this.parent) {\n      for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n        nodes[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _nodes = nodes; _i < _nodes.length; _i++) {\n        var node = _nodes[_i];\n        this.parent.insertBefore(this, node);\n      }\n\n      this.remove();\n    }\n\n    return this;\n  }\n  /**\n   * Returns the next child of the node’s parent.\n   * Returns `undefined` if the current node is the last child.\n   *\n   * @return {Node|undefined} Next node.\n   *\n   * @example\n   * if (comment.text === 'delete next') {\n   *   const next = comment.next()\n   *   if (next) {\n   *     next.remove()\n   *   }\n   * }\n   */\n  ;\n\n  _proto.next = function next() {\n    if (!this.parent) return undefined;\n    var index = this.parent.index(this);\n    return this.parent.nodes[index + 1];\n  }\n  /**\n   * Returns the previous child of the node’s parent.\n   * Returns `undefined` if the current node is the first child.\n   *\n   * @return {Node|undefined} Previous node.\n   *\n   * @example\n   * const annotation = decl.prev()\n   * if (annotation.type === 'comment') {\n   *   readAnnotation(annotation.text)\n   * }\n   */\n  ;\n\n  _proto.prev = function prev() {\n    if (!this.parent) return undefined;\n    var index = this.parent.index(this);\n    return this.parent.nodes[index - 1];\n  }\n  /**\n   * Insert new node before current node to current node’s parent.\n   *\n   * Just alias for `node.parent.insertBefore(node, add)`.\n   *\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * decl.before('content: \"\"')\n   */\n  ;\n\n  _proto.before = function before(add) {\n    this.parent.insertBefore(this, add);\n    return this;\n  }\n  /**\n   * Insert new node after current node to current node’s parent.\n   *\n   * Just alias for `node.parent.insertAfter(node, add)`.\n   *\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * decl.after('color: black')\n   */\n  ;\n\n  _proto.after = function after(add) {\n    this.parent.insertAfter(this, add);\n    return this;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var fixed = {};\n\n    for (var name in this) {\n      if (!this.hasOwnProperty(name)) continue;\n      if (name === 'parent') continue;\n      var value = this[name];\n\n      if (value instanceof Array) {\n        fixed[name] = value.map(function (i) {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON();\n          } else {\n            return i;\n          }\n        });\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON();\n      } else {\n        fixed[name] = value;\n      }\n    }\n\n    return fixed;\n  }\n  /**\n   * Returns a {@link Node#raws} value. If the node is missing\n   * the code style property (because the node was manually built or cloned),\n   * PostCSS will try to autodetect the code style property by looking\n   * at other nodes in the tree.\n   *\n   * @param {string} prop          Name of code style property.\n   * @param {string} [defaultType] Name of default value, it can be missed\n   *                               if the value is the same as prop.\n   *\n   * @example\n   * const root = postcss.parse('a { background: white }')\n   * root.nodes[0].append({ prop: 'color', value: 'black' })\n   * root.nodes[0].nodes[1].raws.before   //=> undefined\n   * root.nodes[0].nodes[1].raw('before') //=> ' '\n   *\n   * @return {string} Code style value.\n   */\n  ;\n\n  _proto.raw = function raw(prop, defaultType) {\n    var str = new _stringifier.default();\n    return str.raw(this, prop, defaultType);\n  }\n  /**\n   * Finds the Root instance of the node’s tree.\n   *\n   * @example\n   * root.nodes[0].nodes[0].root() === root\n   *\n   * @return {Root} Root parent.\n   */\n  ;\n\n  _proto.root = function root() {\n    var result = this;\n\n    while (result.parent) {\n      result = result.parent;\n    }\n\n    return result;\n  }\n  /**\n   * Clear the code style properties for the node and its children.\n   *\n   * @param {boolean} [keepBetween] Keep the raws.between symbols.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * node.raws.before  //=> ' '\n   * node.cleanRaws()\n   * node.raws.before  //=> undefined\n   */\n  ;\n\n  _proto.cleanRaws = function cleanRaws(keepBetween) {\n    delete this.raws.before;\n    delete this.raws.after;\n    if (!keepBetween) delete this.raws.between;\n  };\n\n  _proto.positionInside = function positionInside(index) {\n    var string = this.toString();\n    var column = this.source.start.column;\n    var line = this.source.start.line;\n\n    for (var i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n\n    return {\n      line: line,\n      column: column\n    };\n  };\n\n  _proto.positionBy = function positionBy(opts) {\n    var pos = this.source.start;\n\n    if (opts.index) {\n      pos = this.positionInside(opts.index);\n    } else if (opts.word) {\n      var index = this.toString().indexOf(opts.word);\n      if (index !== -1) pos = this.positionInside(index);\n    }\n\n    return pos;\n  }\n  /**\n   * @memberof Node#\n   * @member {string} type String representing the node’s type.\n   *                       Possible values are `root`, `atrule`, `rule`,\n   *                       `decl`, or `comment`.\n   *\n   * @example\n   * postcss.decl({ prop: 'color', value: 'black' }).type //=> 'decl'\n   */\n\n  /**\n   * @memberof Node#\n   * @member {Container} parent The node’s parent node.\n   *\n   * @example\n   * root.nodes[0].parent === root\n   */\n\n  /**\n   * @memberof Node#\n   * @member {source} source The input source of the node.\n   *\n   * The property is used in source map generation.\n   *\n   * If you create a node manually (e.g., with `postcss.decl()`),\n   * that node will not have a `source` property and will be absent\n   * from the source map. For this reason, the plugin developer should\n   * consider cloning nodes to create new ones (in which case the new node’s\n   * source will reference the original, cloned node) or setting\n   * the `source` property manually.\n   *\n   * ```js\n   * // Bad\n   * const prefixed = postcss.decl({\n   *   prop: '-moz-' + decl.prop,\n   *   value: decl.value\n   * })\n   *\n   * // Good\n   * const prefixed = decl.clone({ prop: '-moz-' + decl.prop })\n   * ```\n   *\n   * ```js\n   * if (atrule.name === 'add-link') {\n   *   const rule = postcss.rule({ selector: 'a', source: atrule.source })\n   *   atrule.parent.insertBefore(atrule, rule)\n   * }\n   * ```\n   *\n   * @example\n   * decl.source.input.from //=> '/home/ai/a.sass'\n   * decl.source.start      //=> { line: 10, column: 2 }\n   * decl.source.end        //=> { line: 10, column: 12 }\n   */\n\n  /**\n   * @memberof Node#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `after`: the space symbols after the last child of the node\n   *   to the end of the node.\n   * * `between`: the symbols between the property and value\n   *   for declarations, selector and `{` for rules, or last parameter\n   *   and `{` for at-rules.\n   * * `semicolon`: contains true if the last child has\n   *   an (optional) semicolon.\n   * * `afterName`: the space between the at-rule name and its parameters.\n   * * `left`: the space symbols between `/*` and the comment’s text.\n   * * `right`: the space symbols between the comment’s text\n   *   and <code>*&#47;</code>.\n   * * `important`: the content of the important statement,\n   *   if it is not just `!important`.\n   *\n   * PostCSS cleans selectors, declaration values and at-rule parameters\n   * from comments and extra spaces, but it stores origin content in raws\n   * properties. As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('a {\\n  color:black\\n}')\n   * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n   */\n  ;\n\n  return Node;\n}();\n\nvar _default = Node;\n/**\n * @typedef {object} position\n * @property {number} line   Source line in file.\n * @property {number} column Source column in file.\n */\n\n/**\n * @typedef {object} source\n * @property {Input} input    {@link Input} with input file\n * @property {position} start The starting position of the node’s source.\n * @property {position} end   The ending position of the node’s source.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGUuZXM2Il0sIm5hbWVzIjpbImNsb25lTm9kZSIsIm9iaiIsInBhcmVudCIsImNsb25lZCIsImNvbnN0cnVjdG9yIiwiaSIsImhhc093blByb3BlcnR5IiwidmFsdWUiLCJ0eXBlIiwiQXJyYXkiLCJtYXAiLCJqIiwiTm9kZSIsImRlZmF1bHRzIiwicmF3cyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIkVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsIm5hbWUiLCJlcnJvciIsIm1lc3NhZ2UiLCJvcHRzIiwic291cmNlIiwicG9zIiwicG9zaXRpb25CeSIsImlucHV0IiwibGluZSIsImNvbHVtbiIsIkNzc1N5bnRheEVycm9yIiwid2FybiIsInJlc3VsdCIsInRleHQiLCJkYXRhIiwibm9kZSIsInJlbW92ZSIsInJlbW92ZUNoaWxkIiwidW5kZWZpbmVkIiwidG9TdHJpbmciLCJzdHJpbmdpZmllciIsImNsb25lIiwib3ZlcnJpZGVzIiwiY2xvbmVCZWZvcmUiLCJpbnNlcnRCZWZvcmUiLCJjbG9uZUFmdGVyIiwiaW5zZXJ0QWZ0ZXIiLCJyZXBsYWNlV2l0aCIsIm5vZGVzIiwibmV4dCIsImluZGV4IiwicHJldiIsImJlZm9yZSIsImFkZCIsImFmdGVyIiwidG9KU09OIiwiZml4ZWQiLCJyYXciLCJwcm9wIiwiZGVmYXVsdFR5cGUiLCJzdHIiLCJTdHJpbmdpZmllciIsInJvb3QiLCJjbGVhblJhd3MiLCJrZWVwQmV0d2VlbiIsImJldHdlZW4iLCJwb3NpdGlvbkluc2lkZSIsInN0cmluZyIsInN0YXJ0Iiwid29yZCIsImluZGV4T2YiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxTQUFTQSxTQUFULENBQW9CQyxHQUFwQixFQUF5QkMsTUFBekIsRUFBaUM7QUFDL0IsTUFBSUMsTUFBTSxHQUFHLElBQUlGLEdBQUcsQ0FBQ0csV0FBUixFQUFiOztBQUVBLE9BQUssSUFBSUMsQ0FBVCxJQUFjSixHQUFkLEVBQW1C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Y3NzLXN5bnRheC1lcnJvcidcbmltcG9ydCBTdHJpbmdpZmllciBmcm9tICcuL3N0cmluZ2lmaWVyJ1xuaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeSdcblxuZnVuY3Rpb24gY2xvbmVOb2RlIChvYmosIHBhcmVudCkge1xuICBsZXQgY2xvbmVkID0gbmV3IG9iai5jb25zdHJ1Y3RvcigpXG5cbiAgZm9yIChsZXQgaSBpbiBvYmopIHtcbiAgICBpZiAoIW9iai5oYXNPd25Qcm9wZXJ0eShpKSkgY29udGludWVcbiAgICBsZXQgdmFsdWUgPSBvYmpbaV1cbiAgICBsZXQgdHlwZSA9IHR5cGVvZiB2YWx1ZVxuXG4gICAgaWYgKGkgPT09ICdwYXJlbnQnICYmIHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgICBpZiAocGFyZW50KSBjbG9uZWRbaV0gPSBwYXJlbnRcbiAgICB9IGVsc2UgaWYgKGkgPT09ICdzb3VyY2UnKSB7XG4gICAgICBjbG9uZWRbaV0gPSB2YWx1ZVxuICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgY2xvbmVkW2ldID0gdmFsdWUubWFwKGogPT4gY2xvbmVOb2RlKGosIGNsb25lZCkpXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0eXBlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbCkgdmFsdWUgPSBjbG9uZU5vZGUodmFsdWUpXG4gICAgICBjbG9uZWRbaV0gPSB2YWx1ZVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjbG9uZWRcbn1cblxuLyoqXG4gKiBBbGwgbm9kZSBjbGFzc2VzIGluaGVyaXQgdGhlIGZvbGxvd2luZyBjb21tb24gbWV0aG9kcy5cbiAqXG4gKiBAYWJzdHJhY3RcbiAqL1xuY2xhc3MgTm9kZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge29iamVjdH0gW2RlZmF1bHRzXSBWYWx1ZSBmb3Igbm9kZSBwcm9wZXJ0aWVzLlxuICAgKi9cbiAgY29uc3RydWN0b3IgKGRlZmF1bHRzID0geyB9KSB7XG4gICAgdGhpcy5yYXdzID0geyB9XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgZGVmYXVsdHMgIT09ICdvYmplY3QnICYmIHR5cGVvZiBkZWZhdWx0cyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdQb3N0Q1NTIG5vZGVzIGNvbnN0cnVjdG9yIGFjY2VwdHMgb2JqZWN0LCBub3QgJyArXG4gICAgICAgICAgSlNPTi5zdHJpbmdpZnkoZGVmYXVsdHMpXG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9XG4gICAgZm9yIChsZXQgbmFtZSBpbiBkZWZhdWx0cykge1xuICAgICAgdGhpc1tuYW1lXSA9IGRlZmF1bHRzW25hbWVdXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBgQ3NzU3ludGF4RXJyb3JgIGluc3RhbmNlIGNvbnRhaW5pbmcgdGhlIG9yaWdpbmFsIHBvc2l0aW9uXG4gICAqIG9mIHRoZSBub2RlIGluIHRoZSBzb3VyY2UsIHNob3dpbmcgbGluZSBhbmQgY29sdW1uIG51bWJlcnMgYW5kIGFsc29cbiAgICogYSBzbWFsbCBleGNlcnB0IHRvIGZhY2lsaXRhdGUgZGVidWdnaW5nLlxuICAgKlxuICAgKiBJZiBwcmVzZW50LCBhbiBpbnB1dCBzb3VyY2UgbWFwIHdpbGwgYmUgdXNlZCB0byBnZXQgdGhlIG9yaWdpbmFsIHBvc2l0aW9uXG4gICAqIG9mIHRoZSBzb3VyY2UsIGV2ZW4gZnJvbSBhIHByZXZpb3VzIGNvbXBpbGF0aW9uIHN0ZXBcbiAgICogKGUuZy4sIGZyb20gU2FzcyBjb21waWxhdGlvbikuXG4gICAqXG4gICAqIFRoaXMgbWV0aG9kIHByb2R1Y2VzIHZlcnkgdXNlZnVsIGVycm9yIG1lc3NhZ2VzLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSAgICAgRXJyb3IgZGVzY3JpcHRpb24uXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0c10gICAgICBPcHRpb25zLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gb3B0cy5wbHVnaW4gUGx1Z2luIG5hbWUgdGhhdCBjcmVhdGVkIHRoaXMgZXJyb3IuXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQb3N0Q1NTIHdpbGwgc2V0IGl0IGF1dG9tYXRpY2FsbHkuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBvcHRzLndvcmQgICBBIHdvcmQgaW5zaWRlIGEgbm9kZeKAmXMgc3RyaW5nIHRoYXQgc2hvdWxkXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBoaWdobGlnaHRlZCBhcyB0aGUgc291cmNlIG9mIHRoZSBlcnJvci5cbiAgICogQHBhcmFtIHtudW1iZXJ9IG9wdHMuaW5kZXggIEFuIGluZGV4IGluc2lkZSBhIG5vZGXigJlzIHN0cmluZyB0aGF0IHNob3VsZFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgaGlnaGxpZ2h0ZWQgYXMgdGhlIHNvdXJjZSBvZiB0aGUgZXJyb3IuXG4gICAqXG4gICAqIEByZXR1cm4ge0Nzc1N5bnRheEVycm9yfSBFcnJvciBvYmplY3QgdG8gdGhyb3cgaXQuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGlmICghdmFyaWFibGVzW25hbWVdKSB7XG4gICAqICAgdGhyb3cgZGVjbC5lcnJvcignVW5rbm93biB2YXJpYWJsZSAnICsgbmFtZSwgeyB3b3JkOiBuYW1lIH0pXG4gICAqICAgLy8gQ3NzU3ludGF4RXJyb3I6IHBvc3Rjc3MtdmFyczphLnNhc3M6NDozOiBVbmtub3duIHZhcmlhYmxlICRibGFja1xuICAgKiAgIC8vICAgY29sb3I6ICRibGFja1xuICAgKiAgIC8vIGFcbiAgICogICAvLyAgICAgICAgICBeXG4gICAqICAgLy8gICBiYWNrZ3JvdW5kOiB3aGl0ZVxuICAgKiB9XG4gICAqL1xuICBlcnJvciAobWVzc2FnZSwgb3B0cyA9IHsgfSkge1xuICAgIGlmICh0aGlzLnNvdXJjZSkge1xuICAgICAgbGV0IHBvcyA9IHRoaXMucG9zaXRpb25CeShvcHRzKVxuICAgICAgcmV0dXJuIHRoaXMuc291cmNlLmlucHV0LmVycm9yKG1lc3NhZ2UsIHBvcy5saW5lLCBwb3MuY29sdW1uLCBvcHRzKVxuICAgIH1cbiAgICByZXR1cm4gbmV3IENzc1N5bnRheEVycm9yKG1lc3NhZ2UpXG4gIH1cblxuICAvKipcbiAgICogVGhpcyBtZXRob2QgaXMgcHJvdmlkZWQgYXMgYSBjb252ZW5pZW5jZSB3cmFwcGVyIGZvciB7QGxpbmsgUmVzdWx0I3dhcm59LlxuICAgKlxuICAgKiBAcGFyYW0ge1Jlc3VsdH0gcmVzdWx0ICAgICAgVGhlIHtAbGluayBSZXN1bHR9IGluc3RhbmNlXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGF0IHdpbGwgcmVjZWl2ZSB0aGUgd2FybmluZy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgICAgICAgIFdhcm5pbmcgbWVzc2FnZS5cbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRzXSAgICAgIE9wdGlvbnNcbiAgICogQHBhcmFtIHtzdHJpbmd9IG9wdHMucGx1Z2luIFBsdWdpbiBuYW1lIHRoYXQgY3JlYXRlZCB0aGlzIHdhcm5pbmcuXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQb3N0Q1NTIHdpbGwgc2V0IGl0IGF1dG9tYXRpY2FsbHkuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBvcHRzLndvcmQgICBBIHdvcmQgaW5zaWRlIGEgbm9kZeKAmXMgc3RyaW5nIHRoYXQgc2hvdWxkXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBoaWdobGlnaHRlZCBhcyB0aGUgc291cmNlIG9mIHRoZSB3YXJuaW5nLlxuICAgKiBAcGFyYW0ge251bWJlcn0gb3B0cy5pbmRleCAgQW4gaW5kZXggaW5zaWRlIGEgbm9kZeKAmXMgc3RyaW5nIHRoYXQgc2hvdWxkXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBoaWdobGlnaHRlZCBhcyB0aGUgc291cmNlIG9mIHRoZSB3YXJuaW5nLlxuICAgKlxuICAgKiBAcmV0dXJuIHtXYXJuaW5nfSBDcmVhdGVkIHdhcm5pbmcgb2JqZWN0LlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCBwbHVnaW4gPSBwb3N0Y3NzLnBsdWdpbigncG9zdGNzcy1kZXByZWNhdGVkJywgKCkgPT4ge1xuICAgKiAgIHJldHVybiAocm9vdCwgcmVzdWx0KSA9PiB7XG4gICAqICAgICByb290LndhbGtEZWNscygnYmFkJywgZGVjbCA9PiB7XG4gICAqICAgICAgIGRlY2wud2FybihyZXN1bHQsICdEZXByZWNhdGVkIHByb3BlcnR5IGJhZCcpXG4gICAqICAgICB9KVxuICAgKiAgIH1cbiAgICogfSlcbiAgICovXG4gIHdhcm4gKHJlc3VsdCwgdGV4dCwgb3B0cykge1xuICAgIGxldCBkYXRhID0geyBub2RlOiB0aGlzIH1cbiAgICBmb3IgKGxldCBpIGluIG9wdHMpIGRhdGFbaV0gPSBvcHRzW2ldXG4gICAgcmV0dXJuIHJlc3VsdC53YXJuKHRleHQsIGRhdGEpXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyB0aGUgbm9kZSBmcm9tIGl0cyBwYXJlbnQgYW5kIGNsZWFucyB0aGUgcGFyZW50IHByb3BlcnRpZXNcbiAgICogZnJvbSB0aGUgbm9kZSBhbmQgaXRzIGNoaWxkcmVuLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBpZiAoZGVjbC5wcm9wLm1hdGNoKC9eLXdlYmtpdC0vKSkge1xuICAgKiAgIGRlY2wucmVtb3ZlKClcbiAgICogfVxuICAgKlxuICAgKiBAcmV0dXJuIHtOb2RlfSBOb2RlIHRvIG1ha2UgY2FsbHMgY2hhaW4uXG4gICAqL1xuICByZW1vdmUgKCkge1xuICAgIGlmICh0aGlzLnBhcmVudCkge1xuICAgICAgdGhpcy5wYXJlbnQucmVtb3ZlQ2hpbGQodGhpcylcbiAgICB9XG4gICAgdGhpcy5wYXJlbnQgPSB1bmRlZmluZWRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBDU1Mgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgbm9kZS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmdpZmllcnxzeW50YXh9IFtzdHJpbmdpZmllcl0gQSBzeW50YXggdG8gdXNlXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluIHN0cmluZyBnZW5lcmF0aW9uLlxuICAgKlxuICAgKiBAcmV0dXJuIHtzdHJpbmd9IENTUyBzdHJpbmcgb2YgdGhpcyBub2RlLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBwb3N0Y3NzLnJ1bGUoeyBzZWxlY3RvcjogJ2EnIH0pLnRvU3RyaW5nKCkgLy89PiBcImEge31cIlxuICAgKi9cbiAgdG9TdHJpbmcgKHN0cmluZ2lmaWVyID0gc3RyaW5naWZ5KSB7XG4gICAgaWYgKHN0cmluZ2lmaWVyLnN0cmluZ2lmeSkgc3RyaW5naWZpZXIgPSBzdHJpbmdpZmllci5zdHJpbmdpZnlcbiAgICBsZXQgcmVzdWx0ID0gJydcbiAgICBzdHJpbmdpZmllcih0aGlzLCBpID0+IHtcbiAgICAgIHJlc3VsdCArPSBpXG4gICAgfSlcbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhbiBleGFjdCBjbG9uZSBvZiB0aGUgbm9kZS5cbiAgICpcbiAgICogVGhlIHJlc3VsdGluZyBjbG9uZWQgbm9kZSBhbmQgaXRzIChjbG9uZWQpIGNoaWxkcmVuIHdpbGwgcmV0YWluXG4gICAqIGNvZGUgc3R5bGUgcHJvcGVydGllcy5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvdmVycmlkZXNdIE5ldyBwcm9wZXJ0aWVzIHRvIG92ZXJyaWRlIGluIHRoZSBjbG9uZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogZGVjbC5yYXdzLmJlZm9yZSAgICAvLz0+IFwiXFxuICBcIlxuICAgKiBjb25zdCBjbG9uZWQgPSBkZWNsLmNsb25lKHsgcHJvcDogJy1tb3otJyArIGRlY2wucHJvcCB9KVxuICAgKiBjbG9uZWQucmF3cy5iZWZvcmUgIC8vPT4gXCJcXG4gIFwiXG4gICAqIGNsb25lZC50b1N0cmluZygpICAgLy89PiAtbW96LXRyYW5zZm9ybTogc2NhbGUoMClcbiAgICpcbiAgICogQHJldHVybiB7Tm9kZX0gQ2xvbmUgb2YgdGhlIG5vZGUuXG4gICAqL1xuICBjbG9uZSAob3ZlcnJpZGVzID0geyB9KSB7XG4gICAgbGV0IGNsb25lZCA9IGNsb25lTm9kZSh0aGlzKVxuICAgIGZvciAobGV0IG5hbWUgaW4gb3ZlcnJpZGVzKSB7XG4gICAgICBjbG9uZWRbbmFtZV0gPSBvdmVycmlkZXNbbmFtZV1cbiAgICB9XG4gICAgcmV0dXJuIGNsb25lZFxuICB9XG5cbiAgLyoqXG4gICAqIFNob3J0Y3V0IHRvIGNsb25lIHRoZSBub2RlIGFuZCBpbnNlcnQgdGhlIHJlc3VsdGluZyBjbG9uZWQgbm9kZVxuICAgKiBiZWZvcmUgdGhlIGN1cnJlbnQgbm9kZS5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvdmVycmlkZXNdIE1ldyBwcm9wZXJ0aWVzIHRvIG92ZXJyaWRlIGluIHRoZSBjbG9uZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogZGVjbC5jbG9uZUJlZm9yZSh7IHByb3A6ICctbW96LScgKyBkZWNsLnByb3AgfSlcbiAgICpcbiAgICogQHJldHVybiB7Tm9kZX0gTmV3IG5vZGVcbiAgICovXG4gIGNsb25lQmVmb3JlIChvdmVycmlkZXMgPSB7IH0pIHtcbiAgICBsZXQgY2xvbmVkID0gdGhpcy5jbG9uZShvdmVycmlkZXMpXG4gICAgdGhpcy5wYXJlbnQuaW5zZXJ0QmVmb3JlKHRoaXMsIGNsb25lZClcbiAgICByZXR1cm4gY2xvbmVkXG4gIH1cblxuICAvKipcbiAgICogU2hvcnRjdXQgdG8gY2xvbmUgdGhlIG5vZGUgYW5kIGluc2VydCB0aGUgcmVzdWx0aW5nIGNsb25lZCBub2RlXG4gICAqIGFmdGVyIHRoZSBjdXJyZW50IG5vZGUuXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3ZlcnJpZGVzXSBOZXcgcHJvcGVydGllcyB0byBvdmVycmlkZSBpbiB0aGUgY2xvbmUuXG4gICAqXG4gICAqIEByZXR1cm4ge05vZGV9IE5ldyBub2RlLlxuICAgKi9cbiAgY2xvbmVBZnRlciAob3ZlcnJpZGVzID0geyB9KSB7XG4gICAgbGV0IGNsb25lZCA9IHRoaXMuY2xvbmUob3ZlcnJpZGVzKVxuICAgIHRoaXMucGFyZW50Lmluc2VydEFmdGVyKHRoaXMsIGNsb25lZClcbiAgICByZXR1cm4gY2xvbmVkXG4gIH1cblxuICAvKipcbiAgICogSW5zZXJ0cyBub2RlKHMpIGJlZm9yZSB0aGUgY3VycmVudCBub2RlIGFuZCByZW1vdmVzIHRoZSBjdXJyZW50IG5vZGUuXG4gICAqXG4gICAqIEBwYXJhbSB7Li4uTm9kZX0gbm9kZXMgTW9kZShzKSB0byByZXBsYWNlIGN1cnJlbnQgb25lLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBpZiAoYXRydWxlLm5hbWUgPT09ICdtaXhpbicpIHtcbiAgICogICBhdHJ1bGUucmVwbGFjZVdpdGgobWl4aW5SdWxlc1thdHJ1bGUucGFyYW1zXSlcbiAgICogfVxuICAgKlxuICAgKiBAcmV0dXJuIHtOb2RlfSBDdXJyZW50IG5vZGUgdG8gbWV0aG9kcyBjaGFpbi5cbiAgICovXG4gIHJlcGxhY2VXaXRoICguLi5ub2Rlcykge1xuICAgIGlmICh0aGlzLnBhcmVudCkge1xuICAgICAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xuICAgICAgICB0aGlzLnBhcmVudC5pbnNlcnRCZWZvcmUodGhpcywgbm9kZSlcbiAgICAgIH1cblxuICAgICAgdGhpcy5yZW1vdmUoKVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgbmV4dCBjaGlsZCBvZiB0aGUgbm9kZeKAmXMgcGFyZW50LlxuICAgKiBSZXR1cm5zIGB1bmRlZmluZWRgIGlmIHRoZSBjdXJyZW50IG5vZGUgaXMgdGhlIGxhc3QgY2hpbGQuXG4gICAqXG4gICAqIEByZXR1cm4ge05vZGV8dW5kZWZpbmVkfSBOZXh0IG5vZGUuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGlmIChjb21tZW50LnRleHQgPT09ICdkZWxldGUgbmV4dCcpIHtcbiAgICogICBjb25zdCBuZXh0ID0gY29tbWVudC5uZXh0KClcbiAgICogICBpZiAobmV4dCkge1xuICAgKiAgICAgbmV4dC5yZW1vdmUoKVxuICAgKiAgIH1cbiAgICogfVxuICAgKi9cbiAgbmV4dCAoKSB7XG4gICAgaWYgKCF0aGlzLnBhcmVudCkgcmV0dXJuIHVuZGVmaW5lZFxuICAgIGxldCBpbmRleCA9IHRoaXMucGFyZW50LmluZGV4KHRoaXMpXG4gICAgcmV0dXJuIHRoaXMucGFyZW50Lm5vZGVzW2luZGV4ICsgMV1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBwcmV2aW91cyBjaGlsZCBvZiB0aGUgbm9kZeKAmXMgcGFyZW50LlxuICAgKiBSZXR1cm5zIGB1bmRlZmluZWRgIGlmIHRoZSBjdXJyZW50IG5vZGUgaXMgdGhlIGZpcnN0IGNoaWxkLlxuICAgKlxuICAgKiBAcmV0dXJuIHtOb2RlfHVuZGVmaW5lZH0gUHJldmlvdXMgbm9kZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3QgYW5ub3RhdGlvbiA9IGRlY2wucHJldigpXG4gICAqIGlmIChhbm5vdGF0aW9uLnR5cGUgPT09ICdjb21tZW50Jykge1xuICAgKiAgIHJlYWRBbm5vdGF0aW9uKGFubm90YXRpb24udGV4dClcbiAgICogfVxuICAgKi9cbiAgcHJldiAoKSB7XG4gICAgaWYgKCF0aGlzLnBhcmVudCkgcmV0dXJuIHVuZGVmaW5lZFxuICAgIGxldCBpbmRleCA9IHRoaXMucGFyZW50LmluZGV4KHRoaXMpXG4gICAgcmV0dXJuIHRoaXMucGFyZW50Lm5vZGVzW2luZGV4IC0gMV1cbiAgfVxuXG4gIC8qKlxuICAgKiBJbnNlcnQgbmV3IG5vZGUgYmVmb3JlIGN1cnJlbnQgbm9kZSB0byBjdXJyZW50IG5vZGXigJlzIHBhcmVudC5cbiAgICpcbiAgICogSnVzdCBhbGlhcyBmb3IgYG5vZGUucGFyZW50Lmluc2VydEJlZm9yZShub2RlLCBhZGQpYC5cbiAgICpcbiAgICogQHBhcmFtIHtOb2RlfG9iamVjdHxzdHJpbmd8Tm9kZVtdfSBhZGQgTmV3IG5vZGUuXG4gICAqXG4gICAqIEByZXR1cm4ge05vZGV9IFRoaXMgbm9kZSBmb3IgbWV0aG9kcyBjaGFpbi5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogZGVjbC5iZWZvcmUoJ2NvbnRlbnQ6IFwiXCInKVxuICAgKi9cbiAgYmVmb3JlIChhZGQpIHtcbiAgICB0aGlzLnBhcmVudC5pbnNlcnRCZWZvcmUodGhpcywgYWRkKVxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICAvKipcbiAgICogSW5zZXJ0IG5ldyBub2RlIGFmdGVyIGN1cnJlbnQgbm9kZSB0byBjdXJyZW50IG5vZGXigJlzIHBhcmVudC5cbiAgICpcbiAgICogSnVzdCBhbGlhcyBmb3IgYG5vZGUucGFyZW50Lmluc2VydEFmdGVyKG5vZGUsIGFkZClgLlxuICAgKlxuICAgKiBAcGFyYW0ge05vZGV8b2JqZWN0fHN0cmluZ3xOb2RlW119IGFkZCBOZXcgbm9kZS5cbiAgICpcbiAgICogQHJldHVybiB7Tm9kZX0gVGhpcyBub2RlIGZvciBtZXRob2RzIGNoYWluLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBkZWNsLmFmdGVyKCdjb2xvcjogYmxhY2snKVxuICAgKi9cbiAgYWZ0ZXIgKGFkZCkge1xuICAgIHRoaXMucGFyZW50Lmluc2VydEFmdGVyKHRoaXMsIGFkZClcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgdG9KU09OICgpIHtcbiAgICBsZXQgZml4ZWQgPSB7IH1cblxuICAgIGZvciAobGV0IG5hbWUgaW4gdGhpcykge1xuICAgICAgaWYgKCF0aGlzLmhhc093blByb3BlcnR5KG5hbWUpKSBjb250aW51ZVxuICAgICAgaWYgKG5hbWUgPT09ICdwYXJlbnQnKSBjb250aW51ZVxuICAgICAgbGV0IHZhbHVlID0gdGhpc1tuYW1lXVxuXG4gICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICBmaXhlZFtuYW1lXSA9IHZhbHVlLm1hcChpID0+IHtcbiAgICAgICAgICBpZiAodHlwZW9mIGkgPT09ICdvYmplY3QnICYmIGkudG9KU09OKSB7XG4gICAgICAgICAgICByZXR1cm4gaS50b0pTT04oKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gaVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZS50b0pTT04pIHtcbiAgICAgICAgZml4ZWRbbmFtZV0gPSB2YWx1ZS50b0pTT04oKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZml4ZWRbbmFtZV0gPSB2YWx1ZVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmaXhlZFxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSB7QGxpbmsgTm9kZSNyYXdzfSB2YWx1ZS4gSWYgdGhlIG5vZGUgaXMgbWlzc2luZ1xuICAgKiB0aGUgY29kZSBzdHlsZSBwcm9wZXJ0eSAoYmVjYXVzZSB0aGUgbm9kZSB3YXMgbWFudWFsbHkgYnVpbHQgb3IgY2xvbmVkKSxcbiAgICogUG9zdENTUyB3aWxsIHRyeSB0byBhdXRvZGV0ZWN0IHRoZSBjb2RlIHN0eWxlIHByb3BlcnR5IGJ5IGxvb2tpbmdcbiAgICogYXQgb3RoZXIgbm9kZXMgaW4gdGhlIHRyZWUuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wICAgICAgICAgIE5hbWUgb2YgY29kZSBzdHlsZSBwcm9wZXJ0eS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IFtkZWZhdWx0VHlwZV0gTmFtZSBvZiBkZWZhdWx0IHZhbHVlLCBpdCBjYW4gYmUgbWlzc2VkXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHRoZSB2YWx1ZSBpcyB0aGUgc2FtZSBhcyBwcm9wLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7IGJhY2tncm91bmQ6IHdoaXRlIH0nKVxuICAgKiByb290Lm5vZGVzWzBdLmFwcGVuZCh7IHByb3A6ICdjb2xvcicsIHZhbHVlOiAnYmxhY2snIH0pXG4gICAqIHJvb3Qubm9kZXNbMF0ubm9kZXNbMV0ucmF3cy5iZWZvcmUgICAvLz0+IHVuZGVmaW5lZFxuICAgKiByb290Lm5vZGVzWzBdLm5vZGVzWzFdLnJhdygnYmVmb3JlJykgLy89PiAnICdcbiAgICpcbiAgICogQHJldHVybiB7c3RyaW5nfSBDb2RlIHN0eWxlIHZhbHVlLlxuICAgKi9cbiAgcmF3IChwcm9wLCBkZWZhdWx0VHlwZSkge1xuICAgIGxldCBzdHIgPSBuZXcgU3RyaW5naWZpZXIoKVxuICAgIHJldHVybiBzdHIucmF3KHRoaXMsIHByb3AsIGRlZmF1bHRUeXBlKVxuICB9XG5cbiAgLyoqXG4gICAqIEZpbmRzIHRoZSBSb290IGluc3RhbmNlIG9mIHRoZSBub2Rl4oCZcyB0cmVlLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiByb290Lm5vZGVzWzBdLm5vZGVzWzBdLnJvb3QoKSA9PT0gcm9vdFxuICAgKlxuICAgKiBAcmV0dXJuIHtSb290fSBSb290IHBhcmVudC5cbiAgICovXG4gIHJvb3QgKCkge1xuICAgIGxldCByZXN1bHQgPSB0aGlzXG4gICAgd2hpbGUgKHJlc3VsdC5wYXJlbnQpIHJlc3VsdCA9IHJlc3VsdC5wYXJlbnRcbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXIgdGhlIGNvZGUgc3R5bGUgcHJvcGVydGllcyBmb3IgdGhlIG5vZGUgYW5kIGl0cyBjaGlsZHJlbi5cbiAgICpcbiAgICogQHBhcmFtIHtib29sZWFufSBba2VlcEJldHdlZW5dIEtlZXAgdGhlIHJhd3MuYmV0d2VlbiBzeW1ib2xzLlxuICAgKlxuICAgKiBAcmV0dXJuIHt1bmRlZmluZWR9XG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIG5vZGUucmF3cy5iZWZvcmUgIC8vPT4gJyAnXG4gICAqIG5vZGUuY2xlYW5SYXdzKClcbiAgICogbm9kZS5yYXdzLmJlZm9yZSAgLy89PiB1bmRlZmluZWRcbiAgICovXG4gIGNsZWFuUmF3cyAoa2VlcEJldHdlZW4pIHtcbiAgICBkZWxldGUgdGhpcy5yYXdzLmJlZm9yZVxuICAgIGRlbGV0ZSB0aGlzLnJhd3MuYWZ0ZXJcbiAgICBpZiAoIWtlZXBCZXR3ZWVuKSBkZWxldGUgdGhpcy5yYXdzLmJldHdlZW5cbiAgfVxuXG4gIHBvc2l0aW9uSW5zaWRlIChpbmRleCkge1xuICAgIGxldCBzdHJpbmcgPSB0aGlzLnRvU3RyaW5nKClcbiAgICBsZXQgY29sdW1uID0gdGhpcy5zb3VyY2Uuc3RhcnQuY29sdW1uXG4gICAgbGV0IGxpbmUgPSB0aGlzLnNvdXJjZS5zdGFydC5saW5lXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGluZGV4OyBpKyspIHtcbiAgICAgIGlmIChzdHJpbmdbaV0gPT09ICdcXG4nKSB7XG4gICAgICAgIGNvbHVtbiA9IDFcbiAgICAgICAgbGluZSArPSAxXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb2x1bW4gKz0gMVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7IGxpbmUsIGNvbHVtbiB9XG4gIH1cblxuICBwb3NpdGlvbkJ5IChvcHRzKSB7XG4gICAgbGV0IHBvcyA9IHRoaXMuc291cmNlLnN0YXJ0XG4gICAgaWYgKG9wdHMuaW5kZXgpIHtcbiAgICAgIHBvcyA9IHRoaXMucG9zaXRpb25JbnNpZGUob3B0cy5pbmRleClcbiAgICB9IGVsc2UgaWYgKG9wdHMud29yZCkge1xuICAgICAgbGV0IGluZGV4ID0gdGhpcy50b1N0cmluZygpLmluZGV4T2Yob3B0cy53b3JkKVxuICAgICAgaWYgKGluZGV4ICE9PSAtMSkgcG9zID0gdGhpcy5wb3NpdGlvbkluc2lkZShpbmRleClcbiAgICB9XG4gICAgcmV0dXJuIHBvc1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBOb2RlI1xuICAgKiBAbWVtYmVyIHtzdHJpbmd9IHR5cGUgU3RyaW5nIHJlcHJlc2VudGluZyB0aGUgbm9kZeKAmXMgdHlwZS5cbiAgICogICAgICAgICAgICAgICAgICAgICAgIFBvc3NpYmxlIHZhbHVlcyBhcmUgYHJvb3RgLCBgYXRydWxlYCwgYHJ1bGVgLFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgYGRlY2xgLCBvciBgY29tbWVudGAuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIHBvc3Rjc3MuZGVjbCh7IHByb3A6ICdjb2xvcicsIHZhbHVlOiAnYmxhY2snIH0pLnR5cGUgLy89PiAnZGVjbCdcbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBOb2RlI1xuICAgKiBAbWVtYmVyIHtDb250YWluZXJ9IHBhcmVudCBUaGUgbm9kZeKAmXMgcGFyZW50IG5vZGUuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIHJvb3Qubm9kZXNbMF0ucGFyZW50ID09PSByb290XG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgTm9kZSNcbiAgICogQG1lbWJlciB7c291cmNlfSBzb3VyY2UgVGhlIGlucHV0IHNvdXJjZSBvZiB0aGUgbm9kZS5cbiAgICpcbiAgICogVGhlIHByb3BlcnR5IGlzIHVzZWQgaW4gc291cmNlIG1hcCBnZW5lcmF0aW9uLlxuICAgKlxuICAgKiBJZiB5b3UgY3JlYXRlIGEgbm9kZSBtYW51YWxseSAoZS5nLiwgd2l0aCBgcG9zdGNzcy5kZWNsKClgKSxcbiAgICogdGhhdCBub2RlIHdpbGwgbm90IGhhdmUgYSBgc291cmNlYCBwcm9wZXJ0eSBhbmQgd2lsbCBiZSBhYnNlbnRcbiAgICogZnJvbSB0aGUgc291cmNlIG1hcC4gRm9yIHRoaXMgcmVhc29uLCB0aGUgcGx1Z2luIGRldmVsb3BlciBzaG91bGRcbiAgICogY29uc2lkZXIgY2xvbmluZyBub2RlcyB0byBjcmVhdGUgbmV3IG9uZXMgKGluIHdoaWNoIGNhc2UgdGhlIG5ldyBub2Rl4oCZc1xuICAgKiBzb3VyY2Ugd2lsbCByZWZlcmVuY2UgdGhlIG9yaWdpbmFsLCBjbG9uZWQgbm9kZSkgb3Igc2V0dGluZ1xuICAgKiB0aGUgYHNvdXJjZWAgcHJvcGVydHkgbWFudWFsbHkuXG4gICAqXG4gICAqIGBgYGpzXG4gICAqIC8vIEJhZFxuICAgKiBjb25zdCBwcmVmaXhlZCA9IHBvc3Rjc3MuZGVjbCh7XG4gICAqICAgcHJvcDogJy1tb3otJyArIGRlY2wucHJvcCxcbiAgICogICB2YWx1ZTogZGVjbC52YWx1ZVxuICAgKiB9KVxuICAgKlxuICAgKiAvLyBHb29kXG4gICAqIGNvbnN0IHByZWZpeGVkID0gZGVjbC5jbG9uZSh7IHByb3A6ICctbW96LScgKyBkZWNsLnByb3AgfSlcbiAgICogYGBgXG4gICAqXG4gICAqIGBgYGpzXG4gICAqIGlmIChhdHJ1bGUubmFtZSA9PT0gJ2FkZC1saW5rJykge1xuICAgKiAgIGNvbnN0IHJ1bGUgPSBwb3N0Y3NzLnJ1bGUoeyBzZWxlY3RvcjogJ2EnLCBzb3VyY2U6IGF0cnVsZS5zb3VyY2UgfSlcbiAgICogICBhdHJ1bGUucGFyZW50Lmluc2VydEJlZm9yZShhdHJ1bGUsIHJ1bGUpXG4gICAqIH1cbiAgICogYGBgXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGRlY2wuc291cmNlLmlucHV0LmZyb20gLy89PiAnL2hvbWUvYWkvYS5zYXNzJ1xuICAgKiBkZWNsLnNvdXJjZS5zdGFydCAgICAgIC8vPT4geyBsaW5lOiAxMCwgY29sdW1uOiAyIH1cbiAgICogZGVjbC5zb3VyY2UuZW5kICAgICAgICAvLz0+IHsgbGluZTogMTAsIGNvbHVtbjogMTIgfVxuICAgKi9cblxuICAvKipcbiAgICogQG1lbWJlcm9mIE5vZGUjXG4gICAqIEBtZW1iZXIge29iamVjdH0gcmF3cyBJbmZvcm1hdGlvbiB0byBnZW5lcmF0ZSBieXRlLXRvLWJ5dGUgZXF1YWxcbiAgICogICAgICAgICAgICAgICAgICAgICAgIG5vZGUgc3RyaW5nIGFzIGl0IHdhcyBpbiB0aGUgb3JpZ2luIGlucHV0LlxuICAgKlxuICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgKiBidXQgdGhlIGRlZmF1bHQgQ1NTIHBhcnNlciB1c2VzOlxuICAgKlxuICAgKiAqIGBiZWZvcmVgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZWZvcmUgdGhlIG5vZGUuIEl0IGFsc28gc3RvcmVzIGAqYFxuICAgKiAgIGFuZCBgX2Agc3ltYm9scyBiZWZvcmUgdGhlIGRlY2xhcmF0aW9uIChJRSBoYWNrKS5cbiAgICogKiBgYWZ0ZXJgOiB0aGUgc3BhY2Ugc3ltYm9scyBhZnRlciB0aGUgbGFzdCBjaGlsZCBvZiB0aGUgbm9kZVxuICAgKiAgIHRvIHRoZSBlbmQgb2YgdGhlIG5vZGUuXG4gICAqICogYGJldHdlZW5gOiB0aGUgc3ltYm9scyBiZXR3ZWVuIHRoZSBwcm9wZXJ0eSBhbmQgdmFsdWVcbiAgICogICBmb3IgZGVjbGFyYXRpb25zLCBzZWxlY3RvciBhbmQgYHtgIGZvciBydWxlcywgb3IgbGFzdCBwYXJhbWV0ZXJcbiAgICogICBhbmQgYHtgIGZvciBhdC1ydWxlcy5cbiAgICogKiBgc2VtaWNvbG9uYDogY29udGFpbnMgdHJ1ZSBpZiB0aGUgbGFzdCBjaGlsZCBoYXNcbiAgICogICBhbiAob3B0aW9uYWwpIHNlbWljb2xvbi5cbiAgICogKiBgYWZ0ZXJOYW1lYDogdGhlIHNwYWNlIGJldHdlZW4gdGhlIGF0LXJ1bGUgbmFtZSBhbmQgaXRzIHBhcmFtZXRlcnMuXG4gICAqICogYGxlZnRgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZXR3ZWVuIGAvKmAgYW5kIHRoZSBjb21tZW504oCZcyB0ZXh0LlxuICAgKiAqIGByaWdodGA6IHRoZSBzcGFjZSBzeW1ib2xzIGJldHdlZW4gdGhlIGNvbW1lbnTigJlzIHRleHRcbiAgICogICBhbmQgPGNvZGU+KiYjNDc7PC9jb2RlPi5cbiAgICogKiBgaW1wb3J0YW50YDogdGhlIGNvbnRlbnQgb2YgdGhlIGltcG9ydGFudCBzdGF0ZW1lbnQsXG4gICAqICAgaWYgaXQgaXMgbm90IGp1c3QgYCFpbXBvcnRhbnRgLlxuICAgKlxuICAgKiBQb3N0Q1NTIGNsZWFucyBzZWxlY3RvcnMsIGRlY2xhcmF0aW9uIHZhbHVlcyBhbmQgYXQtcnVsZSBwYXJhbWV0ZXJzXG4gICAqIGZyb20gY29tbWVudHMgYW5kIGV4dHJhIHNwYWNlcywgYnV0IGl0IHN0b3JlcyBvcmlnaW4gY29udGVudCBpbiByYXdzXG4gICAqIHByb3BlcnRpZXMuIEFzIHN1Y2gsIGlmIHlvdSBkb27igJl0IGNoYW5nZSBhIGRlY2xhcmF0aW9u4oCZcyB2YWx1ZSxcbiAgICogUG9zdENTUyB3aWxsIHVzZSB0aGUgcmF3IHZhbHVlIHdpdGggY29tbWVudHMuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhIHtcXG4gIGNvbG9yOmJsYWNrXFxufScpXG4gICAqIHJvb3QuZmlyc3QuZmlyc3QucmF3cyAvLz0+IHsgYmVmb3JlOiAnXFxuICAnLCBiZXR3ZWVuOiAnOicgfVxuICAgKi9cbn1cblxuZXhwb3J0IGRlZmF1bHQgTm9kZVxuXG4vKipcbiAqIEB0eXBlZGVmIHtvYmplY3R9IHBvc2l0aW9uXG4gKiBAcHJvcGVydHkge251bWJlcn0gbGluZSAgIFNvdXJjZSBsaW5lIGluIGZpbGUuXG4gKiBAcHJvcGVydHkge251bWJlcn0gY29sdW1uIFNvdXJjZSBjb2x1bW4gaW4gZmlsZS5cbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtvYmplY3R9IHNvdXJjZVxuICogQHByb3BlcnR5IHtJbnB1dH0gaW5wdXQgICAge0BsaW5rIElucHV0fSB3aXRoIGlucHV0IGZpbGVcbiAqIEBwcm9wZXJ0eSB7cG9zaXRpb259IHN0YXJ0IFRoZSBzdGFydGluZyBwb3NpdGlvbiBvZiB0aGUgbm9kZeKAmXMgc291cmNlLlxuICogQHByb3BlcnR5IHtwb3NpdGlvbn0gZW5kICAgVGhlIGVuZGluZyBwb3NpdGlvbiBvZiB0aGUgbm9kZeKAmXMgc291cmNlLlxuICovXG4iXSwiZmlsZSI6Im5vZGUuanMifQ==\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents a CSS declaration.\n *\n * @extends Node\n *\n * @example\n * const root = postcss.parse('a { color: black }')\n * const decl = root.first.first\n * decl.type       //=> 'decl'\n * decl.toString() //=> ' color: black'\n */\nvar Declaration = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Declaration, _Node);\n\n  function Declaration(defaults) {\n    var _this;\n\n    _this = _Node.call(this, defaults) || this;\n    _this.type = 'decl';\n    return _this;\n  }\n  /**\n   * @memberof Declaration#\n   * @member {string} prop The declaration’s property name.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.prop //=> 'color'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {string} value The declaration’s value.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.value //=> 'black'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {boolean} important `true` if the declaration\n   *                             has an !important annotation.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black !important; color: red }')\n   * root.first.first.important //=> true\n   * root.first.last.important  //=> undefined\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `between`: the symbols between the property and value\n   *   for declarations.\n   * * `important`: the content of the important statement,\n   *   if it is not just `!important`.\n   *\n   * PostCSS cleans declaration from comments and extra spaces,\n   * but it stores origin content in raws properties.\n   * As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('a {\\n  color:black\\n}')\n   * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n   */\n\n\n  return Declaration;\n}(_node.default);\n\nvar _default = Declaration;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlY2xhcmF0aW9uLmVzNiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsImRlZmF1bHRzIiwidHlwZSIsIk5vZGUiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7OztBQUVBOzs7Ozs7Ozs7OztJQVdNQSxXOzs7QUFDSix1QkFBYUMsUUFBYixFQUF1QjtBQUFBOztBQUNyQiw2QkFBTUEsUUFBTjtBQUNBLFVBQUtDLElBQUwsR0FBWSxNQUFaO0FBRnFCO0FBR3RCO0FBRUQ7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7OztBQVdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFyQ3dCQyxhOztlQStEWEgsVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOb2RlIGZyb20gJy4vbm9kZSdcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgQ1NTIGRlY2xhcmF0aW9uLlxuICpcbiAqIEBleHRlbmRzIE5vZGVcbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EgeyBjb2xvcjogYmxhY2sgfScpXG4gKiBjb25zdCBkZWNsID0gcm9vdC5maXJzdC5maXJzdFxuICogZGVjbC50eXBlICAgICAgIC8vPT4gJ2RlY2wnXG4gKiBkZWNsLnRvU3RyaW5nKCkgLy89PiAnIGNvbG9yOiBibGFjaydcbiAqL1xuY2xhc3MgRGVjbGFyYXRpb24gZXh0ZW5kcyBOb2RlIHtcbiAgY29uc3RydWN0b3IgKGRlZmF1bHRzKSB7XG4gICAgc3VwZXIoZGVmYXVsdHMpXG4gICAgdGhpcy50eXBlID0gJ2RlY2wnXG4gIH1cblxuICAvKipcbiAgICogQG1lbWJlcm9mIERlY2xhcmF0aW9uI1xuICAgKiBAbWVtYmVyIHtzdHJpbmd9IHByb3AgVGhlIGRlY2xhcmF0aW9u4oCZcyBwcm9wZXJ0eSBuYW1lLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7IGNvbG9yOiBibGFjayB9JylcbiAgICogY29uc3QgZGVjbCA9IHJvb3QuZmlyc3QuZmlyc3RcbiAgICogZGVjbC5wcm9wIC8vPT4gJ2NvbG9yJ1xuICAgKi9cblxuICAvKipcbiAgICogQG1lbWJlcm9mIERlY2xhcmF0aW9uI1xuICAgKiBAbWVtYmVyIHtzdHJpbmd9IHZhbHVlIFRoZSBkZWNsYXJhdGlvbuKAmXMgdmFsdWUuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhIHsgY29sb3I6IGJsYWNrIH0nKVxuICAgKiBjb25zdCBkZWNsID0gcm9vdC5maXJzdC5maXJzdFxuICAgKiBkZWNsLnZhbHVlIC8vPT4gJ2JsYWNrJ1xuICAgKi9cblxuICAvKipcbiAgICogQG1lbWJlcm9mIERlY2xhcmF0aW9uI1xuICAgKiBAbWVtYmVyIHtib29sZWFufSBpbXBvcnRhbnQgYHRydWVgIGlmIHRoZSBkZWNsYXJhdGlvblxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzIGFuICFpbXBvcnRhbnQgYW5ub3RhdGlvbi5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EgeyBjb2xvcjogYmxhY2sgIWltcG9ydGFudDsgY29sb3I6IHJlZCB9JylcbiAgICogcm9vdC5maXJzdC5maXJzdC5pbXBvcnRhbnQgLy89PiB0cnVlXG4gICAqIHJvb3QuZmlyc3QubGFzdC5pbXBvcnRhbnQgIC8vPT4gdW5kZWZpbmVkXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgRGVjbGFyYXRpb24jXG4gICAqIEBtZW1iZXIge29iamVjdH0gcmF3cyBJbmZvcm1hdGlvbiB0byBnZW5lcmF0ZSBieXRlLXRvLWJ5dGUgZXF1YWxcbiAgICogICAgICAgICAgICAgICAgICAgICAgIG5vZGUgc3RyaW5nIGFzIGl0IHdhcyBpbiB0aGUgb3JpZ2luIGlucHV0LlxuICAgKlxuICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgKiBidXQgdGhlIGRlZmF1bHQgQ1NTIHBhcnNlciB1c2VzOlxuICAgKlxuICAgKiAqIGBiZWZvcmVgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZWZvcmUgdGhlIG5vZGUuIEl0IGFsc28gc3RvcmVzIGAqYFxuICAgKiAgIGFuZCBgX2Agc3ltYm9scyBiZWZvcmUgdGhlIGRlY2xhcmF0aW9uIChJRSBoYWNrKS5cbiAgICogKiBgYmV0d2VlbmA6IHRoZSBzeW1ib2xzIGJldHdlZW4gdGhlIHByb3BlcnR5IGFuZCB2YWx1ZVxuICAgKiAgIGZvciBkZWNsYXJhdGlvbnMuXG4gICAqICogYGltcG9ydGFudGA6IHRoZSBjb250ZW50IG9mIHRoZSBpbXBvcnRhbnQgc3RhdGVtZW50LFxuICAgKiAgIGlmIGl0IGlzIG5vdCBqdXN0IGAhaW1wb3J0YW50YC5cbiAgICpcbiAgICogUG9zdENTUyBjbGVhbnMgZGVjbGFyYXRpb24gZnJvbSBjb21tZW50cyBhbmQgZXh0cmEgc3BhY2VzLFxuICAgKiBidXQgaXQgc3RvcmVzIG9yaWdpbiBjb250ZW50IGluIHJhd3MgcHJvcGVydGllcy5cbiAgICogQXMgc3VjaCwgaWYgeW91IGRvbuKAmXQgY2hhbmdlIGEgZGVjbGFyYXRpb27igJlzIHZhbHVlLFxuICAgKiBQb3N0Q1NTIHdpbGwgdXNlIHRoZSByYXcgdmFsdWUgd2l0aCBjb21tZW50cy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2Ege1xcbiAgY29sb3I6YmxhY2tcXG59JylcbiAgICogcm9vdC5maXJzdC5maXJzdC5yYXdzIC8vPT4geyBiZWZvcmU6ICdcXG4gICcsIGJldHdlZW46ICc6JyB9XG4gICAqL1xufVxuXG5leHBvcnQgZGVmYXVsdCBEZWNsYXJhdGlvblxuIl0sImZpbGUiOiJkZWNsYXJhdGlvbi5qcyJ9\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar MapGenerator = /*#__PURE__*/function () {\n  function MapGenerator(stringify, root, opts) {\n    this.stringify = stringify;\n    this.mapOpts = opts.map || {};\n    this.root = root;\n    this.opts = opts;\n  }\n\n  var _proto = MapGenerator.prototype;\n\n  _proto.isMap = function isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map;\n    }\n\n    return this.previous().length > 0;\n  };\n\n  _proto.previous = function previous() {\n    var _this = this;\n\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n      this.root.walk(function (node) {\n        if (node.source && node.source.input.map) {\n          var map = node.source.input.map;\n\n          if (_this.previousMaps.indexOf(map) === -1) {\n            _this.previousMaps.push(map);\n          }\n        }\n      });\n    }\n\n    return this.previousMaps;\n  };\n\n  _proto.isInline = function isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline;\n    }\n\n    var annotation = this.mapOpts.annotation;\n\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(function (i) {\n        return i.inline;\n      });\n    }\n\n    return true;\n  };\n\n  _proto.isSourcesContent = function isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(function (i) {\n        return i.withContent();\n      });\n    }\n\n    return true;\n  };\n\n  _proto.clearAnnotation = function clearAnnotation() {\n    if (this.mapOpts.annotation === false) return;\n    var node;\n\n    for (var i = this.root.nodes.length - 1; i >= 0; i--) {\n      node = this.root.nodes[i];\n      if (node.type !== 'comment') continue;\n\n      if (node.text.indexOf('# sourceMappingURL=') === 0) {\n        this.root.removeChild(i);\n      }\n    }\n  };\n\n  _proto.setSourcesContent = function setSourcesContent() {\n    var _this2 = this;\n\n    var already = {};\n    this.root.walk(function (node) {\n      if (node.source) {\n        var from = node.source.input.from;\n\n        if (from && !already[from]) {\n          already[from] = true;\n\n          var relative = _this2.relative(from);\n\n          _this2.map.setSourceContent(relative, node.source.input.css);\n        }\n      }\n    });\n  };\n\n  _proto.applyPrevMaps = function applyPrevMaps() {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.previous()), _step; !(_step = _iterator()).done;) {\n      var prev = _step.value;\n      var from = this.relative(prev.file);\n\n      var root = prev.root || _path.default.dirname(prev.file);\n\n      var map = void 0;\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new _sourceMap.default.SourceMapConsumer(prev.text);\n\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(function () {\n            return null;\n          });\n        }\n      } else {\n        map = prev.consumer();\n      }\n\n      this.map.applySourceMap(map, from, this.relative(root));\n    }\n  };\n\n  _proto.isAnnotation = function isAnnotation() {\n    if (this.isInline()) {\n      return true;\n    }\n\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(function (i) {\n        return i.annotation;\n      });\n    }\n\n    return true;\n  };\n\n  _proto.toBase64 = function toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64');\n    }\n\n    return window.btoa(unescape(encodeURIComponent(str)));\n  };\n\n  _proto.addAnnotation = function addAnnotation() {\n    var content;\n\n    if (this.isInline()) {\n      content = 'data:application/json;base64,' + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation;\n    } else {\n      content = this.outputFile() + '.map';\n    }\n\n    var eol = '\\n';\n    if (this.css.indexOf('\\r\\n') !== -1) eol = '\\r\\n';\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n  };\n\n  _proto.outputFile = function outputFile() {\n    if (this.opts.to) {\n      return this.relative(this.opts.to);\n    }\n\n    if (this.opts.from) {\n      return this.relative(this.opts.from);\n    }\n\n    return 'to.css';\n  };\n\n  _proto.generateMap = function generateMap() {\n    this.generateString();\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n\n    if (this.isInline()) {\n      return [this.css];\n    }\n\n    return [this.css, this.map];\n  };\n\n  _proto.relative = function relative(file) {\n    if (file.indexOf('<') === 0) return file;\n    if (/^\\w+:\\/\\//.test(file)) return file;\n    var from = this.opts.to ? _path.default.dirname(this.opts.to) : '.';\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = _path.default.dirname(_path.default.resolve(from, this.mapOpts.annotation));\n    }\n\n    file = _path.default.relative(from, file);\n\n    if (_path.default.sep === '\\\\') {\n      return file.replace(/\\\\/g, '/');\n    }\n\n    return file;\n  };\n\n  _proto.sourcePath = function sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.mapOpts.from;\n    }\n\n    return this.relative(node.source.input.from);\n  };\n\n  _proto.generateString = function generateString() {\n    var _this3 = this;\n\n    this.css = '';\n    this.map = new _sourceMap.default.SourceMapGenerator({\n      file: this.outputFile()\n    });\n    var line = 1;\n    var column = 1;\n    var lines, last;\n    this.stringify(this.root, function (str, node, type) {\n      _this3.css += str;\n\n      if (node && type !== 'end') {\n        if (node.source && node.source.start) {\n          _this3.map.addMapping({\n            source: _this3.sourcePath(node),\n            generated: {\n              line: line,\n              column: column - 1\n            },\n            original: {\n              line: node.source.start.line,\n              column: node.source.start.column - 1\n            }\n          });\n        } else {\n          _this3.map.addMapping({\n            source: '<no source>',\n            original: {\n              line: 1,\n              column: 0\n            },\n            generated: {\n              line: line,\n              column: column - 1\n            }\n          });\n        }\n      }\n\n      lines = str.match(/\\n/g);\n\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf('\\n');\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n\n      if (node && type !== 'start') {\n        var p = node.parent || {\n          raws: {}\n        };\n\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            _this3.map.addMapping({\n              source: _this3.sourcePath(node),\n              generated: {\n                line: line,\n                column: column - 2\n              },\n              original: {\n                line: node.source.end.line,\n                column: node.source.end.column - 1\n              }\n            });\n          } else {\n            _this3.map.addMapping({\n              source: '<no source>',\n              original: {\n                line: 1,\n                column: 0\n              },\n              generated: {\n                line: line,\n                column: column - 1\n              }\n            });\n          }\n        }\n      }\n    });\n  };\n\n  _proto.generate = function generate() {\n    this.clearAnnotation();\n\n    if (this.isMap()) {\n      return this.generateMap();\n    }\n\n    var result = '';\n    this.stringify(this.root, function (i) {\n      result += i;\n    });\n    return [result];\n  };\n\n  return MapGenerator;\n}();\n\nvar _default = MapGenerator;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = warnOnce;\nvar printed = {};\n\nfunction warnOnce(message) {\n  if (printed[message]) return;\n  printed[message] = true;\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message);\n  }\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhcm4tb25jZS5lczYiXSwibmFtZXMiOlsicHJpbnRlZCIsIndhcm5PbmNlIiwibWVzc2FnZSIsImNvbnNvbGUiLCJ3YXJuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBSUEsT0FBTyxHQUFHLEVBQWQ7O0FBRWUsU0FBU0MsUUFBVCxDQUFtQkMsT0FBbkIsRUFBNEI7QUFDekMsTUFBSUYsT0FBTyxDQUFDRSxPQUFELENBQVgsRUFBc0I7QUFDdEJGLEVBQUFBLE9BQU8sQ0FBQ0UsT0FBRCxDQUFQLEdBQW1CLElBQW5COztBQUVBLE1BQUksT0FBT0MsT0FBUCxLQUFtQixXQUFuQixJQUFrQ0EsT0FBTyxDQUFDQyxJQUE5QyxFQUFvRDtBQUNsREQsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWFGLE9BQWI7QUFDRDtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsibGV0IHByaW50ZWQgPSB7IH1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2Fybk9uY2UgKG1lc3NhZ2UpIHtcbiAgaWYgKHByaW50ZWRbbWVzc2FnZV0pIHJldHVyblxuICBwcmludGVkW21lc3NhZ2VdID0gdHJ1ZVxuXG4gIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZS53YXJuKSB7XG4gICAgY29uc29sZS53YXJuKG1lc3NhZ2UpXG4gIH1cbn1cbiJdLCJmaWxlIjoid2Fybi1vbmNlLmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Represents a plugin’s warning. It can be created using {@link Node#warn}.\n *\n * @example\n * if (decl.important) {\n *   decl.warn(result, 'Avoid !important', { word: '!important' })\n * }\n */\nvar Warning = /*#__PURE__*/function () {\n  /**\n   * @param {string} text        Warning message.\n   * @param {Object} [opts]      Warning options.\n   * @param {Node}   opts.node   CSS node that caused the warning.\n   * @param {string} opts.word   Word in CSS source that caused the warning.\n   * @param {number} opts.index  Index in CSS node string that caused\n   *                             the warning.\n   * @param {string} opts.plugin Name of the plugin that created\n   *                             this warning. {@link Result#warn} fills\n   *                             this property automatically.\n   */\n  function Warning(text, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    /**\n     * Type to filter warnings from {@link Result#messages}.\n     * Always equal to `\"warning\"`.\n     *\n     * @type {string}\n     *\n     * @example\n     * const nonWarning = result.messages.filter(i => i.type !== 'warning')\n     */\n    this.type = 'warning';\n    /**\n     * The warning message.\n     *\n     * @type {string}\n     *\n     * @example\n     * warning.text //=> 'Try to avoid !important'\n     */\n\n    this.text = text;\n\n    if (opts.node && opts.node.source) {\n      var pos = opts.node.positionBy(opts);\n      /**\n       * Line in the input file with this warning’s source.\n       * @type {number}\n       *\n       * @example\n       * warning.line //=> 5\n       */\n\n      this.line = pos.line;\n      /**\n       * Column in the input file with this warning’s source.\n       *\n       * @type {number}\n       *\n       * @example\n       * warning.column //=> 6\n       */\n\n      this.column = pos.column;\n    }\n\n    for (var opt in opts) {\n      this[opt] = opts[opt];\n    }\n  }\n  /**\n   * Returns a warning position and message.\n   *\n   * @example\n   * warning.toString() //=> 'postcss-lint:a.css:10:14: Avoid !important'\n   *\n   * @return {string} Warning position and message.\n   */\n\n\n  var _proto = Warning.prototype;\n\n  _proto.toString = function toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message;\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text;\n    }\n\n    return this.text;\n  }\n  /**\n   * @memberof Warning#\n   * @member {string} plugin The name of the plugin that created\n   *                         it will fill this property automatically.\n   *                         this warning. When you call {@link Node#warn}\n   *\n   * @example\n   * warning.plugin //=> 'postcss-important'\n   */\n\n  /**\n   * @memberof Warning#\n   * @member {Node} node Contains the CSS node that caused the warning.\n   *\n   * @example\n   * warning.node.toString() //=> 'color: white !important'\n   */\n  ;\n\n  return Warning;\n}();\n\nvar _default = Warning;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhcm5pbmcuZXM2Il0sIm5hbWVzIjpbIldhcm5pbmciLCJ0ZXh0Iiwib3B0cyIsInR5cGUiLCJub2RlIiwic291cmNlIiwicG9zIiwicG9zaXRpb25CeSIsImxpbmUiLCJjb2x1bW4iLCJvcHQiLCJ0b1N0cmluZyIsImVycm9yIiwicGx1Z2luIiwiaW5kZXgiLCJ3b3JkIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7SUFRTUEsTztBQUNKOzs7Ozs7Ozs7OztBQVdBLG1CQUFhQyxJQUFiLEVBQW1CQyxJQUFuQixFQUErQjtBQUFBLFFBQVpBLElBQVk7QUFBWkEsTUFBQUEsSUFBWSxHQUFMLEVBQUs7QUFBQTs7QUFDN0I7Ozs7Ozs7OztBQVNBLFNBQUtDLElBQUwsR0FBWSxTQUFaO0FBQ0E7Ozs7Ozs7OztBQVFBLFNBQUtGLElBQUwsR0FBWUEsSUFBWjs7QUFFQSxRQUFJQyxJQUFJLENBQUNFLElBQUwsSUFBYUYsSUFBSSxDQUFDRSxJQUFMLENBQVVDLE1BQTNCLEVBQW1DO0FBQ2pDLFVBQUlDLEdBQUcsR0FBR0osSUFBSSxDQUFDRSxJQUFMLENBQVVHLFVBQVYsQ0FBcUJMLElBQXJCLENBQVY7QUFDQTs7Ozs7Ozs7QUFPQSxXQUFLTSxJQUFMLEdBQVlGLEdBQUcsQ0FBQ0UsSUFBaEI7QUFDQTs7Ozs7Ozs7O0FBUUEsV0FBS0MsTUFBTCxHQUFjSCxHQUFHLENBQUNHLE1BQWxCO0FBQ0Q7O0FBRUQsU0FBSyxJQUFJQyxHQUFULElBQWdCUixJQUFoQjtBQUFzQixXQUFLUSxHQUFMLElBQVlSLElBQUksQ0FBQ1EsR0FBRCxDQUFoQjtBQUF0QjtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7OztTQVFBQyxRLEdBQUEsb0JBQVk7QUFDVixRQUFJLEtBQUtQLElBQVQsRUFBZTtBQUNiLGFBQU8sS0FBS0EsSUFBTCxDQUFVUSxLQUFWLENBQWdCLEtBQUtYLElBQXJCLEVBQTJCO0FBQ2hDWSxRQUFBQSxNQUFNLEVBQUUsS0FBS0EsTUFEbUI7QUFFaENDLFFBQUFBLEtBQUssRUFBRSxLQUFLQSxLQUZvQjtBQUdoQ0MsUUFBQUEsSUFBSSxFQUFFLEtBQUtBO0FBSHFCLE9BQTNCLEVBSUpDLE9BSkg7QUFLRDs7QUFFRCxRQUFJLEtBQUtILE1BQVQsRUFBaUI7QUFDZixhQUFPLEtBQUtBLE1BQUwsR0FBYyxJQUFkLEdBQXFCLEtBQUtaLElBQWpDO0FBQ0Q7O0FBRUQsV0FBTyxLQUFLQSxJQUFaO0FBQ0Q7QUFFRDs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7Ozs7ZUFTYUQsTyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVwcmVzZW50cyBhIHBsdWdpbuKAmXMgd2FybmluZy4gSXQgY2FuIGJlIGNyZWF0ZWQgdXNpbmcge0BsaW5rIE5vZGUjd2Fybn0uXG4gKlxuICogQGV4YW1wbGVcbiAqIGlmIChkZWNsLmltcG9ydGFudCkge1xuICogICBkZWNsLndhcm4ocmVzdWx0LCAnQXZvaWQgIWltcG9ydGFudCcsIHsgd29yZDogJyFpbXBvcnRhbnQnIH0pXG4gKiB9XG4gKi9cbmNsYXNzIFdhcm5pbmcge1xuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgICAgICAgIFdhcm5pbmcgbWVzc2FnZS5cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRzXSAgICAgIFdhcm5pbmcgb3B0aW9ucy5cbiAgICogQHBhcmFtIHtOb2RlfSAgIG9wdHMubm9kZSAgIENTUyBub2RlIHRoYXQgY2F1c2VkIHRoZSB3YXJuaW5nLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gb3B0cy53b3JkICAgV29yZCBpbiBDU1Mgc291cmNlIHRoYXQgY2F1c2VkIHRoZSB3YXJuaW5nLlxuICAgKiBAcGFyYW0ge251bWJlcn0gb3B0cy5pbmRleCAgSW5kZXggaW4gQ1NTIG5vZGUgc3RyaW5nIHRoYXQgY2F1c2VkXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgd2FybmluZy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IG9wdHMucGx1Z2luIE5hbWUgb2YgdGhlIHBsdWdpbiB0aGF0IGNyZWF0ZWRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgd2FybmluZy4ge0BsaW5rIFJlc3VsdCN3YXJufSBmaWxsc1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcyBwcm9wZXJ0eSBhdXRvbWF0aWNhbGx5LlxuICAgKi9cbiAgY29uc3RydWN0b3IgKHRleHQsIG9wdHMgPSB7IH0pIHtcbiAgICAvKipcbiAgICAgKiBUeXBlIHRvIGZpbHRlciB3YXJuaW5ncyBmcm9tIHtAbGluayBSZXN1bHQjbWVzc2FnZXN9LlxuICAgICAqIEFsd2F5cyBlcXVhbCB0byBgXCJ3YXJuaW5nXCJgLlxuICAgICAqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgbm9uV2FybmluZyA9IHJlc3VsdC5tZXNzYWdlcy5maWx0ZXIoaSA9PiBpLnR5cGUgIT09ICd3YXJuaW5nJylcbiAgICAgKi9cbiAgICB0aGlzLnR5cGUgPSAnd2FybmluZydcbiAgICAvKipcbiAgICAgKiBUaGUgd2FybmluZyBtZXNzYWdlLlxuICAgICAqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogd2FybmluZy50ZXh0IC8vPT4gJ1RyeSB0byBhdm9pZCAhaW1wb3J0YW50J1xuICAgICAqL1xuICAgIHRoaXMudGV4dCA9IHRleHRcblxuICAgIGlmIChvcHRzLm5vZGUgJiYgb3B0cy5ub2RlLnNvdXJjZSkge1xuICAgICAgbGV0IHBvcyA9IG9wdHMubm9kZS5wb3NpdGlvbkJ5KG9wdHMpXG4gICAgICAvKipcbiAgICAgICAqIExpbmUgaW4gdGhlIGlucHV0IGZpbGUgd2l0aCB0aGlzIHdhcm5pbmfigJlzIHNvdXJjZS5cbiAgICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICAgKlxuICAgICAgICogQGV4YW1wbGVcbiAgICAgICAqIHdhcm5pbmcubGluZSAvLz0+IDVcbiAgICAgICAqL1xuICAgICAgdGhpcy5saW5lID0gcG9zLmxpbmVcbiAgICAgIC8qKlxuICAgICAgICogQ29sdW1uIGluIHRoZSBpbnB1dCBmaWxlIHdpdGggdGhpcyB3YXJuaW5n4oCZcyBzb3VyY2UuXG4gICAgICAgKlxuICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAqXG4gICAgICAgKiBAZXhhbXBsZVxuICAgICAgICogd2FybmluZy5jb2x1bW4gLy89PiA2XG4gICAgICAgKi9cbiAgICAgIHRoaXMuY29sdW1uID0gcG9zLmNvbHVtblxuICAgIH1cblxuICAgIGZvciAobGV0IG9wdCBpbiBvcHRzKSB0aGlzW29wdF0gPSBvcHRzW29wdF1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgd2FybmluZyBwb3NpdGlvbiBhbmQgbWVzc2FnZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogd2FybmluZy50b1N0cmluZygpIC8vPT4gJ3Bvc3Rjc3MtbGludDphLmNzczoxMDoxNDogQXZvaWQgIWltcG9ydGFudCdcbiAgICpcbiAgICogQHJldHVybiB7c3RyaW5nfSBXYXJuaW5nIHBvc2l0aW9uIGFuZCBtZXNzYWdlLlxuICAgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIGlmICh0aGlzLm5vZGUpIHtcbiAgICAgIHJldHVybiB0aGlzLm5vZGUuZXJyb3IodGhpcy50ZXh0LCB7XG4gICAgICAgIHBsdWdpbjogdGhpcy5wbHVnaW4sXG4gICAgICAgIGluZGV4OiB0aGlzLmluZGV4LFxuICAgICAgICB3b3JkOiB0aGlzLndvcmRcbiAgICAgIH0pLm1lc3NhZ2VcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wbHVnaW4pIHtcbiAgICAgIHJldHVybiB0aGlzLnBsdWdpbiArICc6ICcgKyB0aGlzLnRleHRcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy50ZXh0XG4gIH1cblxuICAvKipcbiAgICogQG1lbWJlcm9mIFdhcm5pbmcjXG4gICAqIEBtZW1iZXIge3N0cmluZ30gcGx1Z2luIFRoZSBuYW1lIG9mIHRoZSBwbHVnaW4gdGhhdCBjcmVhdGVkXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgIGl0IHdpbGwgZmlsbCB0aGlzIHByb3BlcnR5IGF1dG9tYXRpY2FsbHkuXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgd2FybmluZy4gV2hlbiB5b3UgY2FsbCB7QGxpbmsgTm9kZSN3YXJufVxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiB3YXJuaW5nLnBsdWdpbiAvLz0+ICdwb3N0Y3NzLWltcG9ydGFudCdcbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBXYXJuaW5nI1xuICAgKiBAbWVtYmVyIHtOb2RlfSBub2RlIENvbnRhaW5zIHRoZSBDU1Mgbm9kZSB0aGF0IGNhdXNlZCB0aGUgd2FybmluZy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogd2FybmluZy5ub2RlLnRvU3RyaW5nKCkgLy89PiAnY29sb3I6IHdoaXRlICFpbXBvcnRhbnQnXG4gICAqL1xufVxuXG5leHBvcnQgZGVmYXVsdCBXYXJuaW5nXG4iXSwiZmlsZSI6Indhcm5pbmcuanMifQ==\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _warning = _interopRequireDefault(require(\"./warning\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Provides the result of the PostCSS transformations.\n *\n * A Result instance is returned by {@link LazyResult#then}\n * or {@link Root#toResult} methods.\n *\n * @example\n * postcss([autoprefixer]).process(css).then(result => {\n *  console.log(result.css)\n * })\n *\n * @example\n * const result2 = postcss.parse(css).toResult()\n */\nvar Result = /*#__PURE__*/function () {\n  /**\n   * @param {Processor} processor Processor used for this transformation.\n   * @param {Root}      root      Root node after all transformations.\n   * @param {processOptions} opts Options from the {@link Processor#process}\n   *                              or {@link Root#toResult}.\n   */\n  function Result(processor, root, opts) {\n    /**\n     * The Processor instance used for this transformation.\n     *\n     * @type {Processor}\n     *\n     * @example\n     * for (const plugin of result.processor.plugins) {\n     *   if (plugin.postcssPlugin === 'postcss-bad') {\n     *     throw 'postcss-good is incompatible with postcss-bad'\n     *   }\n     * })\n     */\n    this.processor = processor;\n    /**\n     * Contains messages from plugins (e.g., warnings or custom messages).\n     * Each message should have type and plugin properties.\n     *\n     * @type {Message[]}\n     *\n     * @example\n     * postcss.plugin('postcss-min-browser', () => {\n     *   return (root, result) => {\n     *     const browsers = detectMinBrowsersByCanIUse(root)\n     *     result.messages.push({\n     *       type: 'min-browser',\n     *       plugin: 'postcss-min-browser',\n     *       browsers\n     *     })\n     *   }\n     * })\n     */\n\n    this.messages = [];\n    /**\n     * Root node after all transformations.\n     *\n     * @type {Root}\n     *\n     * @example\n     * root.toResult().root === root\n     */\n\n    this.root = root;\n    /**\n     * Options from the {@link Processor#process} or {@link Root#toResult} call\n     * that produced this Result instance.\n     *\n     * @type {processOptions}\n     *\n     * @example\n     * root.toResult(opts).opts === opts\n     */\n\n    this.opts = opts;\n    /**\n     * A CSS string representing of {@link Result#root}.\n     *\n     * @type {string}\n     *\n     * @example\n     * postcss.parse('a{}').toResult().css //=> \"a{}\"\n     */\n\n    this.css = undefined;\n    /**\n     * An instance of `SourceMapGenerator` class from the `source-map` library,\n     * representing changes to the {@link Result#root} instance.\n     *\n     * @type {SourceMapGenerator}\n     *\n     * @example\n     * result.map.toJSON() //=> { version: 3, file: 'a.css', … }\n     *\n     * @example\n     * if (result.map) {\n     *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())\n     * }\n     */\n\n    this.map = undefined;\n  }\n  /**\n   * Returns for @{link Result#css} content.\n   *\n   * @example\n   * result + '' === result.css\n   *\n   * @return {string} String representing of {@link Result#root}.\n   */\n\n\n  var _proto = Result.prototype;\n\n  _proto.toString = function toString() {\n    return this.css;\n  }\n  /**\n   * Creates an instance of {@link Warning} and adds it\n   * to {@link Result#messages}.\n   *\n   * @param {string} text        Warning message.\n   * @param {Object} [opts]      Warning options.\n   * @param {Node}   opts.node   CSS node that caused the warning.\n   * @param {string} opts.word   Word in CSS source that caused the warning.\n   * @param {number} opts.index  Index in CSS node string that caused\n   *                             the warning.\n   * @param {string} opts.plugin Name of the plugin that created\n   *                             this warning. {@link Result#warn} fills\n   *                             this property automatically.\n   *\n   * @return {Warning} Created warning.\n   */\n  ;\n\n  _proto.warn = function warn(text, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin;\n      }\n    }\n\n    var warning = new _warning.default(text, opts);\n    this.messages.push(warning);\n    return warning;\n  }\n  /**\n     * Returns warnings from plugins. Filters {@link Warning} instances\n     * from {@link Result#messages}.\n     *\n     * @example\n     * result.warnings().forEach(warn => {\n     *   console.warn(warn.toString())\n     * })\n     *\n     * @return {Warning[]} Warnings from plugins.\n     */\n  ;\n\n  _proto.warnings = function warnings() {\n    return this.messages.filter(function (i) {\n      return i.type === 'warning';\n    });\n  }\n  /**\n   * An alias for the {@link Result#css} property.\n   * Use it with syntaxes that generate non-CSS output.\n   *\n   * @type {string}\n   *\n   * @example\n   * result.css === result.content\n   */\n  ;\n\n  _createClass(Result, [{\n    key: \"content\",\n    get: function get() {\n      return this.css;\n    }\n  }]);\n\n  return Result;\n}();\n\nvar _default = Result;\n/**\n * @typedef  {object} Message\n * @property {string} type   Message type.\n * @property {string} plugin Source PostCSS plugin name.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = tokenizer;\nvar SINGLE_QUOTE = '\\''.charCodeAt(0);\nvar DOUBLE_QUOTE = '\"'.charCodeAt(0);\nvar BACKSLASH = '\\\\'.charCodeAt(0);\nvar SLASH = '/'.charCodeAt(0);\nvar NEWLINE = '\\n'.charCodeAt(0);\nvar SPACE = ' '.charCodeAt(0);\nvar FEED = '\\f'.charCodeAt(0);\nvar TAB = '\\t'.charCodeAt(0);\nvar CR = '\\r'.charCodeAt(0);\nvar OPEN_SQUARE = '['.charCodeAt(0);\nvar CLOSE_SQUARE = ']'.charCodeAt(0);\nvar OPEN_PARENTHESES = '('.charCodeAt(0);\nvar CLOSE_PARENTHESES = ')'.charCodeAt(0);\nvar OPEN_CURLY = '{'.charCodeAt(0);\nvar CLOSE_CURLY = '}'.charCodeAt(0);\nvar SEMICOLON = ';'.charCodeAt(0);\nvar ASTERISK = '*'.charCodeAt(0);\nvar COLON = ':'.charCodeAt(0);\nvar AT = '@'.charCodeAt(0);\nvar RE_AT_END = /[ \\n\\t\\r\\f{}()'\"\\\\;/[\\]#]/g;\nvar RE_WORD_END = /[ \\n\\t\\r\\f(){}:;@!'\"\\\\\\][#]|\\/(?=\\*)/g;\nvar RE_BAD_BRACKET = /.[\\\\/(\"'\\n]/;\nvar RE_HEX_ESCAPE = /[a-f0-9]/i;\n\nfunction tokenizer(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var css = input.css.valueOf();\n  var ignore = options.ignoreErrors;\n  var code, next, quote, lines, last, content, escape;\n  var nextLine, nextOffset, escaped, escapePos, prev, n, currentToken;\n  var length = css.length;\n  var offset = -1;\n  var line = 1;\n  var pos = 0;\n  var buffer = [];\n  var returned = [];\n\n  function position() {\n    return pos;\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, line, pos - offset);\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length;\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop();\n    if (pos >= length) return;\n    var ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n    code = css.charCodeAt(pos);\n\n    if (code === NEWLINE || code === FEED || code === CR && css.charCodeAt(pos + 1) !== NEWLINE) {\n      offset = pos;\n      line += 1;\n    }\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED:\n        next = pos;\n\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n\n          if (code === NEWLINE) {\n            offset = next;\n            line += 1;\n          }\n        } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);\n\n        currentToken = ['space', css.slice(pos, next)];\n        pos = next - 1;\n        break;\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES:\n        var controlChar = String.fromCharCode(code);\n        currentToken = [controlChar, controlChar, line, pos - offset];\n        break;\n\n      case OPEN_PARENTHESES:\n        prev = buffer.length ? buffer.pop()[1] : '';\n        n = css.charCodeAt(pos + 1);\n\n        if (prev === 'url' && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {\n          next = pos;\n\n          do {\n            escaped = false;\n            next = css.indexOf(')', next + 1);\n\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos;\n                break;\n              } else {\n                unclosed('bracket');\n              }\n            }\n\n            escapePos = next;\n\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1;\n              escaped = !escaped;\n            }\n          } while (escaped);\n\n          currentToken = ['brackets', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n          pos = next;\n        } else {\n          next = css.indexOf(')', pos + 1);\n          content = css.slice(pos, next + 1);\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', line, pos - offset];\n          } else {\n            currentToken = ['brackets', content, line, pos - offset, line, next - offset];\n            pos = next;\n          }\n        }\n\n        break;\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE:\n        quote = code === SINGLE_QUOTE ? '\\'' : '\"';\n        next = pos;\n\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1;\n              break;\n            } else {\n              unclosed('string');\n            }\n          }\n\n          escapePos = next;\n\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n\n        content = css.slice(pos, next + 1);\n        lines = content.split('\\n');\n        last = lines.length - 1;\n\n        if (last > 0) {\n          nextLine = line + last;\n          nextOffset = next - lines[last].length;\n        } else {\n          nextLine = line;\n          nextOffset = offset;\n        }\n\n        currentToken = ['string', css.slice(pos, next + 1), line, pos - offset, nextLine, next - nextOffset];\n        offset = nextOffset;\n        line = nextLine;\n        pos = next;\n        break;\n\n      case AT:\n        RE_AT_END.lastIndex = pos + 1;\n        RE_AT_END.test(css);\n\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1;\n        } else {\n          next = RE_AT_END.lastIndex - 2;\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n        pos = next;\n        break;\n\n      case BACKSLASH:\n        next = pos;\n        escape = true;\n\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1;\n          escape = !escape;\n        }\n\n        code = css.charCodeAt(next + 1);\n\n        if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {\n          next += 1;\n\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1;\n            }\n\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1;\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n        pos = next;\n        break;\n\n      default:\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1;\n\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length;\n            } else {\n              unclosed('comment');\n            }\n          }\n\n          content = css.slice(pos, next + 1);\n          lines = content.split('\\n');\n          last = lines.length - 1;\n\n          if (last > 0) {\n            nextLine = line + last;\n            nextOffset = next - lines[last].length;\n          } else {\n            nextLine = line;\n            nextOffset = offset;\n          }\n\n          currentToken = ['comment', content, line, pos - offset, nextLine, next - nextOffset];\n          offset = nextOffset;\n          line = nextLine;\n          pos = next;\n        } else {\n          RE_WORD_END.lastIndex = pos + 1;\n          RE_WORD_END.test(css);\n\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1;\n          } else {\n            next = RE_WORD_END.lastIndex - 2;\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n          buffer.push(currentToken);\n          pos = next;\n        }\n\n        break;\n    }\n\n    pos++;\n    return currentToken;\n  }\n\n  function back(token) {\n    returned.push(token);\n  }\n\n  return {\n    back: back,\n    nextToken: nextToken,\n    endOfFile: endOfFile,\n    position: position\n  };\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents a comment between declarations or statements (rule and at-rules).\n *\n * Comments inside selectors, at-rule parameters, or declaration values\n * will be stored in the `raws` properties explained above.\n *\n * @extends Node\n */\nvar Comment = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Comment, _Node);\n\n  function Comment(defaults) {\n    var _this;\n\n    _this = _Node.call(this, defaults) || this;\n    _this.type = 'comment';\n    return _this;\n  }\n  /**\n   * @memberof Comment#\n   * @member {string} text The comment’s text.\n   */\n\n  /**\n   * @memberof Comment#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node.\n   * * `left`: the space symbols between `/*` and the comment’s text.\n   * * `right`: the space symbols between the comment’s text.\n   */\n\n\n  return Comment;\n}(_node.default);\n\nvar _default = Comment;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQuZXM2Il0sIm5hbWVzIjpbIkNvbW1lbnQiLCJkZWZhdWx0cyIsInR5cGUiLCJOb2RlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFFQTs7Ozs7Ozs7SUFRTUEsTzs7O0FBQ0osbUJBQWFDLFFBQWIsRUFBdUI7QUFBQTs7QUFDckIsNkJBQU1BLFFBQU47QUFDQSxVQUFLQyxJQUFMLEdBQVksU0FBWjtBQUZxQjtBQUd0QjtBQUVEOzs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7RUFYb0JDLGE7O2VBeUJQSCxPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5vZGUgZnJvbSAnLi9ub2RlJ1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBjb21tZW50IGJldHdlZW4gZGVjbGFyYXRpb25zIG9yIHN0YXRlbWVudHMgKHJ1bGUgYW5kIGF0LXJ1bGVzKS5cbiAqXG4gKiBDb21tZW50cyBpbnNpZGUgc2VsZWN0b3JzLCBhdC1ydWxlIHBhcmFtZXRlcnMsIG9yIGRlY2xhcmF0aW9uIHZhbHVlc1xuICogd2lsbCBiZSBzdG9yZWQgaW4gdGhlIGByYXdzYCBwcm9wZXJ0aWVzIGV4cGxhaW5lZCBhYm92ZS5cbiAqXG4gKiBAZXh0ZW5kcyBOb2RlXG4gKi9cbmNsYXNzIENvbW1lbnQgZXh0ZW5kcyBOb2RlIHtcbiAgY29uc3RydWN0b3IgKGRlZmF1bHRzKSB7XG4gICAgc3VwZXIoZGVmYXVsdHMpXG4gICAgdGhpcy50eXBlID0gJ2NvbW1lbnQnXG4gIH1cblxuICAvKipcbiAgICogQG1lbWJlcm9mIENvbW1lbnQjXG4gICAqIEBtZW1iZXIge3N0cmluZ30gdGV4dCBUaGUgY29tbWVudOKAmXMgdGV4dC5cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBDb21tZW50I1xuICAgKiBAbWVtYmVyIHtvYmplY3R9IHJhd3MgSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICBub2RlIHN0cmluZyBhcyBpdCB3YXMgaW4gdGhlIG9yaWdpbiBpbnB1dC5cbiAgICpcbiAgICogRXZlcnkgcGFyc2VyIHNhdmVzIGl0cyBvd24gcHJvcGVydGllcyxcbiAgICogYnV0IHRoZSBkZWZhdWx0IENTUyBwYXJzZXIgdXNlczpcbiAgICpcbiAgICogKiBgYmVmb3JlYDogdGhlIHNwYWNlIHN5bWJvbHMgYmVmb3JlIHRoZSBub2RlLlxuICAgKiAqIGBsZWZ0YDogdGhlIHNwYWNlIHN5bWJvbHMgYmV0d2VlbiBgLypgIGFuZCB0aGUgY29tbWVudOKAmXMgdGV4dC5cbiAgICogKiBgcmlnaHRgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZXR3ZWVuIHRoZSBjb21tZW504oCZcyB0ZXh0LlxuICAgKi9cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29tbWVudFxuIl0sImZpbGUiOiJjb21tZW50LmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Contains helpers for safely splitting lists of CSS values,\n * preserving parentheses and quotes.\n *\n * @example\n * const list = postcss.list\n *\n * @namespace list\n */\nvar list = {\n  split: function split(string, separators, last) {\n    var array = [];\n    var current = '';\n    var split = false;\n    var func = 0;\n    var quote = false;\n    var escape = false;\n\n    for (var i = 0; i < string.length; i++) {\n      var letter = string[i];\n\n      if (quote) {\n        if (escape) {\n          escape = false;\n        } else if (letter === '\\\\') {\n          escape = true;\n        } else if (letter === quote) {\n          quote = false;\n        }\n      } else if (letter === '\"' || letter === '\\'') {\n        quote = letter;\n      } else if (letter === '(') {\n        func += 1;\n      } else if (letter === ')') {\n        if (func > 0) func -= 1;\n      } else if (func === 0) {\n        if (separators.indexOf(letter) !== -1) split = true;\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim());\n        current = '';\n        split = false;\n      } else {\n        current += letter;\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim());\n    return array;\n  },\n\n  /**\n   * Safely splits space-separated values (such as those for `background`,\n   * `border-radius`, and other shorthand properties).\n   *\n   * @param {string} string Space-separated values.\n   *\n   * @return {string[]} Split values.\n   *\n   * @example\n   * postcss.list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)']\n   */\n  space: function space(string) {\n    var spaces = [' ', '\\n', '\\t'];\n    return list.split(string, spaces);\n  },\n\n  /**\n   * Safely splits comma-separated values (such as those for `transition-*`\n   * and `background` properties).\n   *\n   * @param {string} string Comma-separated values.\n   *\n   * @return {string[]} Split values.\n   *\n   * @example\n   * postcss.list.comma('black, linear-gradient(white, black)')\n   * //=> ['black', 'linear-gradient(white, black)']\n   */\n  comma: function comma(string) {\n    return list.split(string, [','], true);\n  }\n};\nvar _default = list;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3QuZXM2Il0sIm5hbWVzIjpbImxpc3QiLCJzcGxpdCIsInN0cmluZyIsInNlcGFyYXRvcnMiLCJsYXN0IiwiYXJyYXkiLCJjdXJyZW50IiwiZnVuYyIsInF1b3RlIiwiZXNjYXBlIiwiaSIsImxlbmd0aCIsImxldHRlciIsImluZGV4T2YiLCJwdXNoIiwidHJpbSIsInNwYWNlIiwic3BhY2VzIiwiY29tbWEiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7OztBQVNBLElBQUlBLElBQUksR0FBRztBQUVUQyxFQUFBQSxLQUZTLGlCQUVGQyxNQUZFLEVBRU1DLFVBRk4sRUFFa0JDLElBRmxCLEVBRXdCO0FBQy9CLFFBQUlDLEtBQUssR0FBRyxFQUFaO0FBQ0EsUUFBSUMsT0FBTyxHQUFHLEVBQWQ7QUFDQSxRQUFJTCxLQUFLLEdBQUcsS0FBWjtBQUVBLFFBQUlNLElBQUksR0FBRyxDQUFYO0FBQ0EsUUFBSUMsS0FBSyxHQUFHLEtBQVo7QUFDQSxRQUFJQyxNQUFNLEdBQUcsS0FBYjs7QUFFQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdSLE1BQU0sQ0FBQ1MsTUFBM0IsRUFBbUNELENBQUMsRUFBcEMsRUFBd0M7QUFDdEMsVUFBSUUsTUFBTSxHQUFHVixNQUFNLENBQUNRLENBQUQsQ0FBbkI7O0FBRUEsVUFBSUYsS0FBSixFQUFXO0FBQ1QsWUFBSUMsTUFBSixFQUFZO0FBQ1ZBLFVBQUFBLE1BQU0sR0FBRyxLQUFUO0FBQ0QsU0FGRCxNQUVPLElBQUlHLE1BQU0sS0FBSyxJQUFmLEVBQXFCO0FBQzFCSCxVQUFBQSxNQUFNLEdBQUcsSUFBVDtBQUNELFNBRk0sTUFFQSxJQUFJRyxNQUFNLEtBQUtKLEtBQWYsRUFBc0I7QUFDM0JBLFVBQUFBLEtBQUssR0FBRyxLQUFSO0FBQ0Q7QUFDRixPQVJELE1BUU8sSUFBSUksTUFBTSxLQUFLLEdBQVgsSUFBa0JBLE1BQU0sS0FBSyxJQUFqQyxFQUF1QztBQUM1Q0osUUFBQUEsS0FBSyxHQUFHSSxNQUFSO0FBQ0QsT0FGTSxNQUVBLElBQUlBLE1BQU0sS0FBSyxHQUFmLEVBQW9CO0FBQ3pCTCxRQUFBQSxJQUFJLElBQUksQ0FBUjtBQUNELE9BRk0sTUFFQSxJQUFJSyxNQUFNLEtBQUssR0FBZixFQUFvQjtBQUN6QixZQUFJTCxJQUFJLEdBQUcsQ0FBWCxFQUFjQSxJQUFJLElBQUksQ0FBUjtBQUNmLE9BRk0sTUFFQSxJQUFJQSxJQUFJLEtBQUssQ0FBYixFQUFnQjtBQUNyQixZQUFJSixVQUFVLENBQUNVLE9BQVgsQ0FBbUJELE1BQW5CLE1BQStCLENBQUMsQ0FBcEMsRUFBdUNYLEtBQUssR0FBRyxJQUFSO0FBQ3hDOztBQUVELFVBQUlBLEtBQUosRUFBVztBQUNULFlBQUlLLE9BQU8sS0FBSyxFQUFoQixFQUFvQkQsS0FBSyxDQUFDUyxJQUFOLENBQVdSLE9BQU8sQ0FBQ1MsSUFBUixFQUFYO0FBQ3BCVCxRQUFBQSxPQUFPLEdBQUcsRUFBVjtBQUNBTCxRQUFBQSxLQUFLLEdBQUcsS0FBUjtBQUNELE9BSkQsTUFJTztBQUNMSyxRQUFBQSxPQUFPLElBQUlNLE1BQVg7QUFDRDtBQUNGOztBQUVELFFBQUlSLElBQUksSUFBSUUsT0FBTyxLQUFLLEVBQXhCLEVBQTRCRCxLQUFLLENBQUNTLElBQU4sQ0FBV1IsT0FBTyxDQUFDUyxJQUFSLEVBQVg7QUFDNUIsV0FBT1YsS0FBUDtBQUNELEdBM0NROztBQTZDVDs7Ozs7Ozs7Ozs7QUFXQVcsRUFBQUEsS0F4RFMsaUJBd0RGZCxNQXhERSxFQXdETTtBQUNiLFFBQUllLE1BQU0sR0FBRyxDQUFDLEdBQUQsRUFBTSxJQUFOLEVBQVksSUFBWixDQUFiO0FBQ0EsV0FBT2pCLElBQUksQ0FBQ0MsS0FBTCxDQUFXQyxNQUFYLEVBQW1CZSxNQUFuQixDQUFQO0FBQ0QsR0EzRFE7O0FBNkRUOzs7Ozs7Ozs7Ozs7QUFZQUMsRUFBQUEsS0F6RVMsaUJBeUVGaEIsTUF6RUUsRUF5RU07QUFDYixXQUFPRixJQUFJLENBQUNDLEtBQUwsQ0FBV0MsTUFBWCxFQUFtQixDQUFDLEdBQUQsQ0FBbkIsRUFBMEIsSUFBMUIsQ0FBUDtBQUNEO0FBM0VRLENBQVg7ZUErRWVGLEkiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnRhaW5zIGhlbHBlcnMgZm9yIHNhZmVseSBzcGxpdHRpbmcgbGlzdHMgb2YgQ1NTIHZhbHVlcyxcbiAqIHByZXNlcnZpbmcgcGFyZW50aGVzZXMgYW5kIHF1b3Rlcy5cbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3QgbGlzdCA9IHBvc3Rjc3MubGlzdFxuICpcbiAqIEBuYW1lc3BhY2UgbGlzdFxuICovXG5sZXQgbGlzdCA9IHtcblxuICBzcGxpdCAoc3RyaW5nLCBzZXBhcmF0b3JzLCBsYXN0KSB7XG4gICAgbGV0IGFycmF5ID0gW11cbiAgICBsZXQgY3VycmVudCA9ICcnXG4gICAgbGV0IHNwbGl0ID0gZmFsc2VcblxuICAgIGxldCBmdW5jID0gMFxuICAgIGxldCBxdW90ZSA9IGZhbHNlXG4gICAgbGV0IGVzY2FwZSA9IGZhbHNlXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IGxldHRlciA9IHN0cmluZ1tpXVxuXG4gICAgICBpZiAocXVvdGUpIHtcbiAgICAgICAgaWYgKGVzY2FwZSkge1xuICAgICAgICAgIGVzY2FwZSA9IGZhbHNlXG4gICAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnXFxcXCcpIHtcbiAgICAgICAgICBlc2NhcGUgPSB0cnVlXG4gICAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSBxdW90ZSkge1xuICAgICAgICAgIHF1b3RlID0gZmFsc2VcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChsZXR0ZXIgPT09ICdcIicgfHwgbGV0dGVyID09PSAnXFwnJykge1xuICAgICAgICBxdW90ZSA9IGxldHRlclxuICAgICAgfSBlbHNlIGlmIChsZXR0ZXIgPT09ICcoJykge1xuICAgICAgICBmdW5jICs9IDFcbiAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnKScpIHtcbiAgICAgICAgaWYgKGZ1bmMgPiAwKSBmdW5jIC09IDFcbiAgICAgIH0gZWxzZSBpZiAoZnVuYyA9PT0gMCkge1xuICAgICAgICBpZiAoc2VwYXJhdG9ycy5pbmRleE9mKGxldHRlcikgIT09IC0xKSBzcGxpdCA9IHRydWVcbiAgICAgIH1cblxuICAgICAgaWYgKHNwbGl0KSB7XG4gICAgICAgIGlmIChjdXJyZW50ICE9PSAnJykgYXJyYXkucHVzaChjdXJyZW50LnRyaW0oKSlcbiAgICAgICAgY3VycmVudCA9ICcnXG4gICAgICAgIHNwbGl0ID0gZmFsc2VcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnQgKz0gbGV0dGVyXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGxhc3QgfHwgY3VycmVudCAhPT0gJycpIGFycmF5LnB1c2goY3VycmVudC50cmltKCkpXG4gICAgcmV0dXJuIGFycmF5XG4gIH0sXG5cbiAgLyoqXG4gICAqIFNhZmVseSBzcGxpdHMgc3BhY2Utc2VwYXJhdGVkIHZhbHVlcyAoc3VjaCBhcyB0aG9zZSBmb3IgYGJhY2tncm91bmRgLFxuICAgKiBgYm9yZGVyLXJhZGl1c2AsIGFuZCBvdGhlciBzaG9ydGhhbmQgcHJvcGVydGllcykuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgU3BhY2Utc2VwYXJhdGVkIHZhbHVlcy5cbiAgICpcbiAgICogQHJldHVybiB7c3RyaW5nW119IFNwbGl0IHZhbHVlcy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogcG9zdGNzcy5saXN0LnNwYWNlKCcxcHggY2FsYygxMCUgKyAxcHgpJykgLy89PiBbJzFweCcsICdjYWxjKDEwJSArIDFweCknXVxuICAgKi9cbiAgc3BhY2UgKHN0cmluZykge1xuICAgIGxldCBzcGFjZXMgPSBbJyAnLCAnXFxuJywgJ1xcdCddXG4gICAgcmV0dXJuIGxpc3Quc3BsaXQoc3RyaW5nLCBzcGFjZXMpXG4gIH0sXG5cbiAgLyoqXG4gICAqIFNhZmVseSBzcGxpdHMgY29tbWEtc2VwYXJhdGVkIHZhbHVlcyAoc3VjaCBhcyB0aG9zZSBmb3IgYHRyYW5zaXRpb24tKmBcbiAgICogYW5kIGBiYWNrZ3JvdW5kYCBwcm9wZXJ0aWVzKS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZyBDb21tYS1zZXBhcmF0ZWQgdmFsdWVzLlxuICAgKlxuICAgKiBAcmV0dXJuIHtzdHJpbmdbXX0gU3BsaXQgdmFsdWVzLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBwb3N0Y3NzLmxpc3QuY29tbWEoJ2JsYWNrLCBsaW5lYXItZ3JhZGllbnQod2hpdGUsIGJsYWNrKScpXG4gICAqIC8vPT4gWydibGFjaycsICdsaW5lYXItZ3JhZGllbnQod2hpdGUsIGJsYWNrKSddXG4gICAqL1xuICBjb21tYSAoc3RyaW5nKSB7XG4gICAgcmV0dXJuIGxpc3Quc3BsaXQoc3RyaW5nLCBbJywnXSwgdHJ1ZSlcbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGxpc3RcbiJdLCJmaWxlIjoibGlzdC5qcyJ9\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _container = _interopRequireDefault(require(\"./container\"));\n\nvar _list = _interopRequireDefault(require(\"./list\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents a CSS rule: a selector followed by a declaration block.\n *\n * @extends Container\n *\n * @example\n * const root = postcss.parse('a{}')\n * const rule = root.first\n * rule.type       //=> 'rule'\n * rule.toString() //=> 'a{}'\n */\nvar Rule = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Rule, _Container);\n\n  function Rule(defaults) {\n    var _this;\n\n    _this = _Container.call(this, defaults) || this;\n    _this.type = 'rule';\n    if (!_this.nodes) _this.nodes = [];\n    return _this;\n  }\n  /**\n   * An array containing the rule’s individual selectors.\n   * Groups of selectors are split at commas.\n   *\n   * @type {string[]}\n   *\n   * @example\n   * const root = postcss.parse('a, b { }')\n   * const rule = root.first\n   *\n   * rule.selector  //=> 'a, b'\n   * rule.selectors //=> ['a', 'b']\n   *\n   * rule.selectors = ['a', 'strong']\n   * rule.selector //=> 'a, strong'\n   */\n\n\n  _createClass(Rule, [{\n    key: \"selectors\",\n    get: function get() {\n      return _list.default.comma(this.selector);\n    },\n    set: function set(values) {\n      var match = this.selector ? this.selector.match(/,\\s*/) : null;\n      var sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\n      this.selector = values.join(sep);\n    }\n    /**\n     * @memberof Rule#\n     * @member {string} selector The rule’s full selector represented\n     *                           as a string.\n     *\n     * @example\n     * const root = postcss.parse('a, b { }')\n     * const rule = root.first\n     * rule.selector //=> 'a, b'\n     */\n\n    /**\n     * @memberof Rule#\n     * @member {object} raws Information to generate byte-to-byte equal\n     *                       node string as it was in the origin input.\n     *\n     * Every parser saves its own properties,\n     * but the default CSS parser uses:\n     *\n     * * `before`: the space symbols before the node. It also stores `*`\n     *   and `_` symbols before the declaration (IE hack).\n     * * `after`: the space symbols after the last child of the node\n     *   to the end of the node.\n     * * `between`: the symbols between the property and value\n     *   for declarations, selector and `{` for rules, or last parameter\n     *   and `{` for at-rules.\n     * * `semicolon`: contains `true` if the last child has\n     *   an (optional) semicolon.\n     * * `ownSemicolon`: contains `true` if there is semicolon after rule.\n     *\n     * PostCSS cleans selectors from comments and extra spaces,\n     * but it stores origin content in raws properties.\n     * As such, if you don’t change a declaration’s value,\n     * PostCSS will use the raw value with comments.\n     *\n     * @example\n     * const root = postcss.parse('a {\\n  color:black\\n}')\n     * root.first.first.raws //=> { before: '', between: ' ', after: '\\n' }\n     */\n\n  }]);\n\n  return Rule;\n}(_container.default);\n\nvar _default = Rule;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGUuZXM2Il0sIm5hbWVzIjpbIlJ1bGUiLCJkZWZhdWx0cyIsInR5cGUiLCJub2RlcyIsImxpc3QiLCJjb21tYSIsInNlbGVjdG9yIiwidmFsdWVzIiwibWF0Y2giLCJzZXAiLCJyYXciLCJqb2luIiwiQ29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBRUE7Ozs7Ozs7Ozs7O0lBV01BLEk7OztBQUNKLGdCQUFhQyxRQUFiLEVBQXVCO0FBQUE7O0FBQ3JCLGtDQUFNQSxRQUFOO0FBQ0EsVUFBS0MsSUFBTCxHQUFZLE1BQVo7QUFDQSxRQUFJLENBQUMsTUFBS0MsS0FBVixFQUFpQixNQUFLQSxLQUFMLEdBQWEsRUFBYjtBQUhJO0FBSXRCO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQWdCaUI7QUFDZixhQUFPQyxjQUFLQyxLQUFMLENBQVcsS0FBS0MsUUFBaEIsQ0FBUDtBQUNELEs7c0JBRWNDLE0sRUFBUTtBQUNyQixVQUFJQyxLQUFLLEdBQUcsS0FBS0YsUUFBTCxHQUFnQixLQUFLQSxRQUFMLENBQWNFLEtBQWQsQ0FBb0IsTUFBcEIsQ0FBaEIsR0FBOEMsSUFBMUQ7QUFDQSxVQUFJQyxHQUFHLEdBQUdELEtBQUssR0FBR0EsS0FBSyxDQUFDLENBQUQsQ0FBUixHQUFjLE1BQU0sS0FBS0UsR0FBTCxDQUFTLFNBQVQsRUFBb0IsWUFBcEIsQ0FBbkM7QUFDQSxXQUFLSixRQUFMLEdBQWdCQyxNQUFNLENBQUNJLElBQVAsQ0FBWUYsR0FBWixDQUFoQjtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7O0FBV0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBNUNpQkcsa0I7O2VBMEVKWixJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL2NvbnRhaW5lcidcbmltcG9ydCBsaXN0IGZyb20gJy4vbGlzdCdcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgQ1NTIHJ1bGU6IGEgc2VsZWN0b3IgZm9sbG93ZWQgYnkgYSBkZWNsYXJhdGlvbiBibG9jay5cbiAqXG4gKiBAZXh0ZW5kcyBDb250YWluZXJcbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2F7fScpXG4gKiBjb25zdCBydWxlID0gcm9vdC5maXJzdFxuICogcnVsZS50eXBlICAgICAgIC8vPT4gJ3J1bGUnXG4gKiBydWxlLnRvU3RyaW5nKCkgLy89PiAnYXt9J1xuICovXG5jbGFzcyBSdWxlIGV4dGVuZHMgQ29udGFpbmVyIHtcbiAgY29uc3RydWN0b3IgKGRlZmF1bHRzKSB7XG4gICAgc3VwZXIoZGVmYXVsdHMpXG4gICAgdGhpcy50eXBlID0gJ3J1bGUnXG4gICAgaWYgKCF0aGlzLm5vZGVzKSB0aGlzLm5vZGVzID0gW11cbiAgfVxuXG4gIC8qKlxuICAgKiBBbiBhcnJheSBjb250YWluaW5nIHRoZSBydWxl4oCZcyBpbmRpdmlkdWFsIHNlbGVjdG9ycy5cbiAgICogR3JvdXBzIG9mIHNlbGVjdG9ycyBhcmUgc3BsaXQgYXQgY29tbWFzLlxuICAgKlxuICAgKiBAdHlwZSB7c3RyaW5nW119XG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhLCBiIHsgfScpXG4gICAqIGNvbnN0IHJ1bGUgPSByb290LmZpcnN0XG4gICAqXG4gICAqIHJ1bGUuc2VsZWN0b3IgIC8vPT4gJ2EsIGInXG4gICAqIHJ1bGUuc2VsZWN0b3JzIC8vPT4gWydhJywgJ2InXVxuICAgKlxuICAgKiBydWxlLnNlbGVjdG9ycyA9IFsnYScsICdzdHJvbmcnXVxuICAgKiBydWxlLnNlbGVjdG9yIC8vPT4gJ2EsIHN0cm9uZydcbiAgICovXG4gIGdldCBzZWxlY3RvcnMgKCkge1xuICAgIHJldHVybiBsaXN0LmNvbW1hKHRoaXMuc2VsZWN0b3IpXG4gIH1cblxuICBzZXQgc2VsZWN0b3JzICh2YWx1ZXMpIHtcbiAgICBsZXQgbWF0Y2ggPSB0aGlzLnNlbGVjdG9yID8gdGhpcy5zZWxlY3Rvci5tYXRjaCgvLFxccyovKSA6IG51bGxcbiAgICBsZXQgc2VwID0gbWF0Y2ggPyBtYXRjaFswXSA6ICcsJyArIHRoaXMucmF3KCdiZXR3ZWVuJywgJ2JlZm9yZU9wZW4nKVxuICAgIHRoaXMuc2VsZWN0b3IgPSB2YWx1ZXMuam9pbihzZXApXG4gIH1cblxuICAvKipcbiAgICogQG1lbWJlcm9mIFJ1bGUjXG4gICAqIEBtZW1iZXIge3N0cmluZ30gc2VsZWN0b3IgVGhlIHJ1bGXigJlzIGZ1bGwgc2VsZWN0b3IgcmVwcmVzZW50ZWRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICBhcyBhIHN0cmluZy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EsIGIgeyB9JylcbiAgICogY29uc3QgcnVsZSA9IHJvb3QuZmlyc3RcbiAgICogcnVsZS5zZWxlY3RvciAvLz0+ICdhLCBiJ1xuICAgKi9cblxuICAvKipcbiAgICogQG1lbWJlcm9mIFJ1bGUjXG4gICAqIEBtZW1iZXIge29iamVjdH0gcmF3cyBJbmZvcm1hdGlvbiB0byBnZW5lcmF0ZSBieXRlLXRvLWJ5dGUgZXF1YWxcbiAgICogICAgICAgICAgICAgICAgICAgICAgIG5vZGUgc3RyaW5nIGFzIGl0IHdhcyBpbiB0aGUgb3JpZ2luIGlucHV0LlxuICAgKlxuICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgKiBidXQgdGhlIGRlZmF1bHQgQ1NTIHBhcnNlciB1c2VzOlxuICAgKlxuICAgKiAqIGBiZWZvcmVgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZWZvcmUgdGhlIG5vZGUuIEl0IGFsc28gc3RvcmVzIGAqYFxuICAgKiAgIGFuZCBgX2Agc3ltYm9scyBiZWZvcmUgdGhlIGRlY2xhcmF0aW9uIChJRSBoYWNrKS5cbiAgICogKiBgYWZ0ZXJgOiB0aGUgc3BhY2Ugc3ltYm9scyBhZnRlciB0aGUgbGFzdCBjaGlsZCBvZiB0aGUgbm9kZVxuICAgKiAgIHRvIHRoZSBlbmQgb2YgdGhlIG5vZGUuXG4gICAqICogYGJldHdlZW5gOiB0aGUgc3ltYm9scyBiZXR3ZWVuIHRoZSBwcm9wZXJ0eSBhbmQgdmFsdWVcbiAgICogICBmb3IgZGVjbGFyYXRpb25zLCBzZWxlY3RvciBhbmQgYHtgIGZvciBydWxlcywgb3IgbGFzdCBwYXJhbWV0ZXJcbiAgICogICBhbmQgYHtgIGZvciBhdC1ydWxlcy5cbiAgICogKiBgc2VtaWNvbG9uYDogY29udGFpbnMgYHRydWVgIGlmIHRoZSBsYXN0IGNoaWxkIGhhc1xuICAgKiAgIGFuIChvcHRpb25hbCkgc2VtaWNvbG9uLlxuICAgKiAqIGBvd25TZW1pY29sb25gOiBjb250YWlucyBgdHJ1ZWAgaWYgdGhlcmUgaXMgc2VtaWNvbG9uIGFmdGVyIHJ1bGUuXG4gICAqXG4gICAqIFBvc3RDU1MgY2xlYW5zIHNlbGVjdG9ycyBmcm9tIGNvbW1lbnRzIGFuZCBleHRyYSBzcGFjZXMsXG4gICAqIGJ1dCBpdCBzdG9yZXMgb3JpZ2luIGNvbnRlbnQgaW4gcmF3cyBwcm9wZXJ0aWVzLlxuICAgKiBBcyBzdWNoLCBpZiB5b3UgZG9u4oCZdCBjaGFuZ2UgYSBkZWNsYXJhdGlvbuKAmXMgdmFsdWUsXG4gICAqIFBvc3RDU1Mgd2lsbCB1c2UgdGhlIHJhdyB2YWx1ZSB3aXRoIGNvbW1lbnRzLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7XFxuICBjb2xvcjpibGFja1xcbn0nKVxuICAgKiByb290LmZpcnN0LmZpcnN0LnJhd3MgLy89PiB7IGJlZm9yZTogJycsIGJldHdlZW46ICcgJywgYWZ0ZXI6ICdcXG4nIH1cbiAgICovXG59XG5cbmV4cG9ydCBkZWZhdWx0IFJ1bGVcbiJdLCJmaWxlIjoicnVsZS5qcyJ9\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _declaration = _interopRequireDefault(require(\"./declaration\"));\n\nvar _comment = _interopRequireDefault(require(\"./comment\"));\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction cleanSource(nodes) {\n  return nodes.map(function (i) {\n    if (i.nodes) i.nodes = cleanSource(i.nodes);\n    delete i.source;\n    return i;\n  });\n}\n/**\n * The {@link Root}, {@link AtRule}, and {@link Rule} container nodes\n * inherit some common methods to help work with their children.\n *\n * Note that all containers can store any content. If you write a rule inside\n * a rule, PostCSS will parse it.\n *\n * @extends Node\n * @abstract\n */\n\n\nvar Container = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Container, _Node);\n\n  function Container() {\n    return _Node.apply(this, arguments) || this;\n  }\n\n  var _proto = Container.prototype;\n\n  _proto.push = function push(child) {\n    child.parent = this;\n    this.nodes.push(child);\n    return this;\n  }\n  /**\n   * Iterates through the container’s immediate children,\n   * calling `callback` for each child.\n   *\n   * Returning `false` in the callback will break iteration.\n   *\n   * This method only iterates through the container’s immediate children.\n   * If you need to recursively iterate through all the container’s descendant\n   * nodes, use {@link Container#walk}.\n   *\n   * Unlike the for `{}`-cycle or `Array#forEach` this iterator is safe\n   * if you are mutating the array of child nodes during iteration.\n   * PostCSS will adjust the current index to match the mutations.\n   *\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black; z-index: 1 }')\n   * const rule = root.first\n   *\n   * for (const decl of rule.nodes) {\n   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })\n   *   // Cycle will be infinite, because cloneBefore moves the current node\n   *   // to the next index\n   * }\n   *\n   * rule.each(decl => {\n   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })\n   *   // Will be executed only for color and z-index\n   * })\n   */\n  ;\n\n  _proto.each = function each(callback) {\n    if (!this.lastEach) this.lastEach = 0;\n    if (!this.indexes) this.indexes = {};\n    this.lastEach += 1;\n    var id = this.lastEach;\n    this.indexes[id] = 0;\n    if (!this.nodes) return undefined;\n    var index, result;\n\n    while (this.indexes[id] < this.nodes.length) {\n      index = this.indexes[id];\n      result = callback(this.nodes[index], index);\n      if (result === false) break;\n      this.indexes[id] += 1;\n    }\n\n    delete this.indexes[id];\n    return result;\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each node.\n   *\n   * Like container.each(), this method is safe to use\n   * if you are mutating arrays during iteration.\n   *\n   * If you only need to iterate through the container’s immediate children,\n   * use {@link Container#each}.\n   *\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walk(node => {\n   *   // Traverses all descendant nodes.\n   * })\n   */\n  ;\n\n  _proto.walk = function walk(callback) {\n    return this.each(function (child, i) {\n      var result;\n\n      try {\n        result = callback(child, i);\n      } catch (e) {\n        e.postcssNode = child;\n\n        if (e.stack && child.source && /\\n\\s{4}at /.test(e.stack)) {\n          var s = child.source;\n          e.stack = e.stack.replace(/\\n\\s{4}at /, \"$&\" + s.input.from + \":\" + s.start.line + \":\" + s.start.column + \"$&\");\n        }\n\n        throw e;\n      }\n\n      if (result !== false && child.walk) {\n        result = child.walk(callback);\n      }\n\n      return result;\n    });\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each declaration node.\n   *\n   * If you pass a filter, iteration will only happen over declarations\n   * with matching properties.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {string|RegExp} [prop]   String or regular expression\n   *                                 to filter declarations by property name.\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walkDecls(decl => {\n   *   checkPropertySupport(decl.prop)\n   * })\n   *\n   * root.walkDecls('border-radius', decl => {\n   *   decl.remove()\n   * })\n   *\n   * root.walkDecls(/^background/, decl => {\n   *   decl.value = takeFirstColorFromGradient(decl.value)\n   * })\n   */\n  ;\n\n  _proto.walkDecls = function walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop;\n      return this.walk(function (child, i) {\n        if (child.type === 'decl') {\n          return callback(child, i);\n        }\n      });\n    }\n\n    if (prop instanceof RegExp) {\n      return this.walk(function (child, i) {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i);\n        }\n      });\n    }\n\n    return this.walk(function (child, i) {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i);\n      }\n    });\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each rule node.\n   *\n   * If you pass a filter, iteration will only happen over rules\n   * with matching selectors.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {string|RegExp} [selector] String or regular expression\n   *                                   to filter rules by selector.\n   * @param {childIterator} callback   Iterator receives each node and index.\n   *\n   * @return {false|undefined} returns `false` if iteration was broke.\n   *\n   * @example\n   * const selectors = []\n   * root.walkRules(rule => {\n   *   selectors.push(rule.selector)\n   * })\n   * console.log(`Your CSS uses ${ selectors.length } selectors`)\n   */\n  ;\n\n  _proto.walkRules = function walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector;\n      return this.walk(function (child, i) {\n        if (child.type === 'rule') {\n          return callback(child, i);\n        }\n      });\n    }\n\n    if (selector instanceof RegExp) {\n      return this.walk(function (child, i) {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i);\n        }\n      });\n    }\n\n    return this.walk(function (child, i) {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i);\n      }\n    });\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each at-rule node.\n   *\n   * If you pass a filter, iteration will only happen over at-rules\n   * that have matching names.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {string|RegExp} [name]   String or regular expression\n   *                                 to filter at-rules by name.\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walkAtRules(rule => {\n   *   if (isOld(rule.name)) rule.remove()\n   * })\n   *\n   * let first = false\n   * root.walkAtRules('charset', rule => {\n   *   if (!first) {\n   *     first = true\n   *   } else {\n   *     rule.remove()\n   *   }\n   * })\n   */\n  ;\n\n  _proto.walkAtRules = function walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name;\n      return this.walk(function (child, i) {\n        if (child.type === 'atrule') {\n          return callback(child, i);\n        }\n      });\n    }\n\n    if (name instanceof RegExp) {\n      return this.walk(function (child, i) {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i);\n        }\n      });\n    }\n\n    return this.walk(function (child, i) {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i);\n      }\n    });\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each comment node.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walkComments(comment => {\n   *   comment.remove()\n   * })\n   */\n  ;\n\n  _proto.walkComments = function walkComments(callback) {\n    return this.walk(function (child, i) {\n      if (child.type === 'comment') {\n        return callback(child, i);\n      }\n    });\n  }\n  /**\n   * Inserts new nodes to the end of the container.\n   *\n   * @param {...(Node|object|string|Node[])} children New nodes.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })\n   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })\n   * rule.append(decl1, decl2)\n   *\n   * root.append({ name: 'charset', params: '\"UTF-8\"' })  // at-rule\n   * root.append({ selector: 'a' })                       // rule\n   * rule.append({ prop: 'color', value: 'black' })       // declaration\n   * rule.append({ text: 'Comment' })                     // comment\n   *\n   * root.append('a {}')\n   * root.first.append('color: black; z-index: 1')\n   */\n  ;\n\n  _proto.append = function append() {\n    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n      children[_key] = arguments[_key];\n    }\n\n    for (var _i = 0, _children = children; _i < _children.length; _i++) {\n      var child = _children[_i];\n      var nodes = this.normalize(child, this.last);\n\n      for (var _iterator = _createForOfIteratorHelperLoose(nodes), _step; !(_step = _iterator()).done;) {\n        var node = _step.value;\n        this.nodes.push(node);\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Inserts new nodes to the start of the container.\n   *\n   * @param {...(Node|object|string|Node[])} children New nodes.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })\n   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })\n   * rule.prepend(decl1, decl2)\n   *\n   * root.append({ name: 'charset', params: '\"UTF-8\"' })  // at-rule\n   * root.append({ selector: 'a' })                       // rule\n   * rule.append({ prop: 'color', value: 'black' })       // declaration\n   * rule.append({ text: 'Comment' })                     // comment\n   *\n   * root.append('a {}')\n   * root.first.append('color: black; z-index: 1')\n   */\n  ;\n\n  _proto.prepend = function prepend() {\n    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      children[_key2] = arguments[_key2];\n    }\n\n    children = children.reverse();\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(children), _step2; !(_step2 = _iterator2()).done;) {\n      var child = _step2.value;\n      var nodes = this.normalize(child, this.first, 'prepend').reverse();\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(nodes), _step3; !(_step3 = _iterator3()).done;) {\n        var node = _step3.value;\n        this.nodes.unshift(node);\n      }\n\n      for (var id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length;\n      }\n    }\n\n    return this;\n  };\n\n  _proto.cleanRaws = function cleanRaws(keepBetween) {\n    _Node.prototype.cleanRaws.call(this, keepBetween);\n\n    if (this.nodes) {\n      for (var _iterator4 = _createForOfIteratorHelperLoose(this.nodes), _step4; !(_step4 = _iterator4()).done;) {\n        var node = _step4.value;\n        node.cleanRaws(keepBetween);\n      }\n    }\n  }\n  /**\n   * Insert new node before old node within the container.\n   *\n   * @param {Node|number} exist             Child or child’s index.\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * rule.insertBefore(decl, decl.clone({ prop: '-webkit-' + decl.prop }))\n   */\n  ;\n\n  _proto.insertBefore = function insertBefore(exist, add) {\n    exist = this.index(exist);\n    var type = exist === 0 ? 'prepend' : false;\n    var nodes = this.normalize(add, this.nodes[exist], type).reverse();\n\n    for (var _iterator5 = _createForOfIteratorHelperLoose(nodes), _step5; !(_step5 = _iterator5()).done;) {\n      var node = _step5.value;\n      this.nodes.splice(exist, 0, node);\n    }\n\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (exist <= index) {\n        this.indexes[id] = index + nodes.length;\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Insert new node after old node within the container.\n   *\n   * @param {Node|number} exist             Child or child’s index.\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   */\n  ;\n\n  _proto.insertAfter = function insertAfter(exist, add) {\n    exist = this.index(exist);\n    var nodes = this.normalize(add, this.nodes[exist]).reverse();\n\n    for (var _iterator6 = _createForOfIteratorHelperLoose(nodes), _step6; !(_step6 = _iterator6()).done;) {\n      var node = _step6.value;\n      this.nodes.splice(exist + 1, 0, node);\n    }\n\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (exist < index) {\n        this.indexes[id] = index + nodes.length;\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Removes node from the container and cleans the parent properties\n   * from the node and its children.\n   *\n   * @param {Node|number} child Child or child’s index.\n   *\n   * @return {Node} This node for methods chain\n   *\n   * @example\n   * rule.nodes.length  //=> 5\n   * rule.removeChild(decl)\n   * rule.nodes.length  //=> 4\n   * decl.parent        //=> undefined\n   */\n  ;\n\n  _proto.removeChild = function removeChild(child) {\n    child = this.index(child);\n    this.nodes[child].parent = undefined;\n    this.nodes.splice(child, 1);\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (index >= child) {\n        this.indexes[id] = index - 1;\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Removes all children from the container\n   * and cleans their parent properties.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * rule.removeAll()\n   * rule.nodes.length //=> 0\n   */\n  ;\n\n  _proto.removeAll = function removeAll() {\n    for (var _iterator7 = _createForOfIteratorHelperLoose(this.nodes), _step7; !(_step7 = _iterator7()).done;) {\n      var node = _step7.value;\n      node.parent = undefined;\n    }\n\n    this.nodes = [];\n    return this;\n  }\n  /**\n   * Passes all declaration values within the container that match pattern\n   * through callback, replacing those values with the returned result\n   * of callback.\n   *\n   * This method is useful if you are using a custom unit or function\n   * and need to iterate through all values.\n   *\n   * @param {string|RegExp} pattern      Replace pattern.\n   * @param {object} opts                Options to speed up the search.\n   * @param {string|string[]} opts.props An array of property names.\n   * @param {string} opts.fast           String that’s used to narrow down\n   *                                     values and speed up the regexp search.\n   * @param {function|string} callback   String to replace pattern or callback\n   *                                     that returns a new value. The callback\n   *                                     will receive the same arguments\n   *                                     as those passed to a function parameter\n   *                                     of `String#replace`.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * root.replaceValues(/\\d+rem/, { fast: 'rem' }, string => {\n   *   return 15 * parseInt(string) + 'px'\n   * })\n   */\n  ;\n\n  _proto.replaceValues = function replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts;\n      opts = {};\n    }\n\n    this.walkDecls(function (decl) {\n      if (opts.props && opts.props.indexOf(decl.prop) === -1) return;\n      if (opts.fast && decl.value.indexOf(opts.fast) === -1) return;\n      decl.value = decl.value.replace(pattern, callback);\n    });\n    return this;\n  }\n  /**\n   * Returns `true` if callback returns `true`\n   * for all of the container’s children.\n   *\n   * @param {childCondition} condition Iterator returns true or false.\n   *\n   * @return {boolean} Is every child pass condition.\n   *\n   * @example\n   * const noPrefixes = rule.every(i => i.prop[0] !== '-')\n   */\n  ;\n\n  _proto.every = function every(condition) {\n    return this.nodes.every(condition);\n  }\n  /**\n   * Returns `true` if callback returns `true` for (at least) one\n   * of the container’s children.\n   *\n   * @param {childCondition} condition Iterator returns true or false.\n   *\n   * @return {boolean} Is some child pass condition.\n   *\n   * @example\n   * const hasPrefix = rule.some(i => i.prop[0] === '-')\n   */\n  ;\n\n  _proto.some = function some(condition) {\n    return this.nodes.some(condition);\n  }\n  /**\n   * Returns a `child`’s index within the {@link Container#nodes} array.\n   *\n   * @param {Node} child Child of the current container.\n   *\n   * @return {number} Child index.\n   *\n   * @example\n   * rule.index( rule.nodes[2] ) //=> 2\n   */\n  ;\n\n  _proto.index = function index(child) {\n    if (typeof child === 'number') {\n      return child;\n    }\n\n    return this.nodes.indexOf(child);\n  }\n  /**\n   * The container’s first child.\n   *\n   * @type {Node}\n   *\n   * @example\n   * rule.first === rules.nodes[0]\n   */\n  ;\n\n  _proto.normalize = function normalize(nodes, sample) {\n    var _this = this;\n\n    if (typeof nodes === 'string') {\n      var parse = require('./parse');\n\n      nodes = cleanSource(parse(nodes).nodes);\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0);\n\n      for (var _iterator8 = _createForOfIteratorHelperLoose(nodes), _step8; !(_step8 = _iterator8()).done;) {\n        var i = _step8.value;\n        if (i.parent) i.parent.removeChild(i, 'ignore');\n      }\n    } else if (nodes.type === 'root') {\n      nodes = nodes.nodes.slice(0);\n\n      for (var _iterator9 = _createForOfIteratorHelperLoose(nodes), _step9; !(_step9 = _iterator9()).done;) {\n        var _i2 = _step9.value;\n        if (_i2.parent) _i2.parent.removeChild(_i2, 'ignore');\n      }\n    } else if (nodes.type) {\n      nodes = [nodes];\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation');\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value);\n      }\n\n      nodes = [new _declaration.default(nodes)];\n    } else if (nodes.selector) {\n      var Rule = require('./rule');\n\n      nodes = [new Rule(nodes)];\n    } else if (nodes.name) {\n      var AtRule = require('./at-rule');\n\n      nodes = [new AtRule(nodes)];\n    } else if (nodes.text) {\n      nodes = [new _comment.default(nodes)];\n    } else {\n      throw new Error('Unknown node type in node creation');\n    }\n\n    var processed = nodes.map(function (i) {\n      if (i.parent) i.parent.removeChild(i);\n\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/[^\\s]/g, '');\n        }\n      }\n\n      i.parent = _this;\n      return i;\n    });\n    return processed;\n  }\n  /**\n   * @memberof Container#\n   * @member {Node[]} nodes An array containing the container’s children.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * root.nodes.length           //=> 1\n   * root.nodes[0].selector      //=> 'a'\n   * root.nodes[0].nodes[0].prop //=> 'color'\n   */\n  ;\n\n  _createClass(Container, [{\n    key: \"first\",\n    get: function get() {\n      if (!this.nodes) return undefined;\n      return this.nodes[0];\n    }\n    /**\n     * The container’s last child.\n     *\n     * @type {Node}\n     *\n     * @example\n     * rule.last === rule.nodes[rule.nodes.length - 1]\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      if (!this.nodes) return undefined;\n      return this.nodes[this.nodes.length - 1];\n    }\n  }]);\n\n  return Container;\n}(_node.default);\n\nvar _default = Container;\n/**\n * @callback childCondition\n * @param {Node} node    Container child.\n * @param {number} index Child index.\n * @param {Node[]} nodes All container children.\n * @return {boolean}\n */\n\n/**\n * @callback childIterator\n * @param {Node} node    Container child.\n * @param {number} index Child index.\n * @return {false|undefined} Returning `false` will break iteration.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _container = _interopRequireDefault(require(\"./container\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents an at-rule.\n *\n * If it’s followed in the CSS by a {} block, this node will have\n * a nodes property representing its children.\n *\n * @extends Container\n *\n * @example\n * const root = postcss.parse('@charset \"UTF-8\"; @media print {}')\n *\n * const charset = root.first\n * charset.type  //=> 'atrule'\n * charset.nodes //=> undefined\n *\n * const media = root.last\n * media.nodes   //=> []\n */\nvar AtRule = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(AtRule, _Container);\n\n  function AtRule(defaults) {\n    var _this;\n\n    _this = _Container.call(this, defaults) || this;\n    _this.type = 'atrule';\n    return _this;\n  }\n\n  var _proto = AtRule.prototype;\n\n  _proto.append = function append() {\n    var _Container$prototype$;\n\n    if (!this.nodes) this.nodes = [];\n\n    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n      children[_key] = arguments[_key];\n    }\n\n    return (_Container$prototype$ = _Container.prototype.append).call.apply(_Container$prototype$, [this].concat(children));\n  };\n\n  _proto.prepend = function prepend() {\n    var _Container$prototype$2;\n\n    if (!this.nodes) this.nodes = [];\n\n    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      children[_key2] = arguments[_key2];\n    }\n\n    return (_Container$prototype$2 = _Container.prototype.prepend).call.apply(_Container$prototype$2, [this].concat(children));\n  }\n  /**\n   * @memberof AtRule#\n   * @member {string} name The at-rule’s name immediately follows the `@`.\n   *\n   * @example\n   * const root  = postcss.parse('@media print {}')\n   * media.name //=> 'media'\n   * const media = root.first\n   */\n\n  /**\n   * @memberof AtRule#\n   * @member {string} params The at-rule’s parameters, the values\n   *                         that follow the at-rule’s name but precede\n   *                         any {} block.\n   *\n   * @example\n   * const root  = postcss.parse('@media print, screen {}')\n   * const media = root.first\n   * media.params //=> 'print, screen'\n   */\n\n  /**\n   * @memberof AtRule#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                        node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `after`: the space symbols after the last child of the node\n   *   to the end of the node.\n   * * `between`: the symbols between the property and value\n   *   for declarations, selector and `{` for rules, or last parameter\n   *   and `{` for at-rules.\n   * * `semicolon`: contains true if the last child has\n   *   an (optional) semicolon.\n   * * `afterName`: the space between the at-rule name and its parameters.\n   *\n   * PostCSS cleans at-rule parameters from comments and extra spaces,\n   * but it stores origin content in raws properties.\n   * As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('  @media\\nprint {\\n}')\n   * root.first.first.raws //=> { before: '  ',\n   *                       //     between: ' ',\n   *                       //     afterName: '\\n',\n   *                       //     after: '\\n' }\n   */\n  ;\n\n  return AtRule;\n}(_container.default);\n\nvar _default = AtRule;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0LXJ1bGUuZXM2Il0sIm5hbWVzIjpbIkF0UnVsZSIsImRlZmF1bHRzIiwidHlwZSIsImFwcGVuZCIsIm5vZGVzIiwiY2hpbGRyZW4iLCJwcmVwZW5kIiwiQ29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBa0JNQSxNOzs7QUFDSixrQkFBYUMsUUFBYixFQUF1QjtBQUFBOztBQUNyQixrQ0FBTUEsUUFBTjtBQUNBLFVBQUtDLElBQUwsR0FBWSxRQUFaO0FBRnFCO0FBR3RCOzs7O1NBRURDLE0sR0FBQSxrQkFBcUI7QUFBQTs7QUFDbkIsUUFBSSxDQUFDLEtBQUtDLEtBQVYsRUFBaUIsS0FBS0EsS0FBTCxHQUFhLEVBQWI7O0FBREUsc0NBQVZDLFFBQVU7QUFBVkEsTUFBQUEsUUFBVTtBQUFBOztBQUVuQix5REFBYUYsTUFBYixrREFBdUJFLFFBQXZCO0FBQ0QsRzs7U0FFREMsTyxHQUFBLG1CQUFzQjtBQUFBOztBQUNwQixRQUFJLENBQUMsS0FBS0YsS0FBVixFQUFpQixLQUFLQSxLQUFMLEdBQWEsRUFBYjs7QUFERyx1Q0FBVkMsUUFBVTtBQUFWQSxNQUFBQSxRQUFVO0FBQUE7O0FBRXBCLDBEQUFhQyxPQUFiLG1EQUF3QkQsUUFBeEI7QUFDRDtBQUVEOzs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7OztBQVlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBdENtQkUsa0I7O2VBdUVOUCxNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL2NvbnRhaW5lcidcblxuLyoqXG4gKiBSZXByZXNlbnRzIGFuIGF0LXJ1bGUuXG4gKlxuICogSWYgaXTigJlzIGZvbGxvd2VkIGluIHRoZSBDU1MgYnkgYSB7fSBibG9jaywgdGhpcyBub2RlIHdpbGwgaGF2ZVxuICogYSBub2RlcyBwcm9wZXJ0eSByZXByZXNlbnRpbmcgaXRzIGNoaWxkcmVuLlxuICpcbiAqIEBleHRlbmRzIENvbnRhaW5lclxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnQGNoYXJzZXQgXCJVVEYtOFwiOyBAbWVkaWEgcHJpbnQge30nKVxuICpcbiAqIGNvbnN0IGNoYXJzZXQgPSByb290LmZpcnN0XG4gKiBjaGFyc2V0LnR5cGUgIC8vPT4gJ2F0cnVsZSdcbiAqIGNoYXJzZXQubm9kZXMgLy89PiB1bmRlZmluZWRcbiAqXG4gKiBjb25zdCBtZWRpYSA9IHJvb3QubGFzdFxuICogbWVkaWEubm9kZXMgICAvLz0+IFtdXG4gKi9cbmNsYXNzIEF0UnVsZSBleHRlbmRzIENvbnRhaW5lciB7XG4gIGNvbnN0cnVjdG9yIChkZWZhdWx0cykge1xuICAgIHN1cGVyKGRlZmF1bHRzKVxuICAgIHRoaXMudHlwZSA9ICdhdHJ1bGUnXG4gIH1cblxuICBhcHBlbmQgKC4uLmNoaWxkcmVuKSB7XG4gICAgaWYgKCF0aGlzLm5vZGVzKSB0aGlzLm5vZGVzID0gW11cbiAgICByZXR1cm4gc3VwZXIuYXBwZW5kKC4uLmNoaWxkcmVuKVxuICB9XG5cbiAgcHJlcGVuZCAoLi4uY2hpbGRyZW4pIHtcbiAgICBpZiAoIXRoaXMubm9kZXMpIHRoaXMubm9kZXMgPSBbXVxuICAgIHJldHVybiBzdXBlci5wcmVwZW5kKC4uLmNoaWxkcmVuKVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBBdFJ1bGUjXG4gICAqIEBtZW1iZXIge3N0cmluZ30gbmFtZSBUaGUgYXQtcnVsZeKAmXMgbmFtZSBpbW1lZGlhdGVseSBmb2xsb3dzIHRoZSBgQGAuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgID0gcG9zdGNzcy5wYXJzZSgnQG1lZGlhIHByaW50IHt9JylcbiAgICogbWVkaWEubmFtZSAvLz0+ICdtZWRpYSdcbiAgICogY29uc3QgbWVkaWEgPSByb290LmZpcnN0XG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgQXRSdWxlI1xuICAgKiBAbWVtYmVyIHtzdHJpbmd9IHBhcmFtcyBUaGUgYXQtcnVsZeKAmXMgcGFyYW1ldGVycywgdGhlIHZhbHVlc1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICB0aGF0IGZvbGxvdyB0aGUgYXQtcnVsZeKAmXMgbmFtZSBidXQgcHJlY2VkZVxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICBhbnkge30gYmxvY2suXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgID0gcG9zdGNzcy5wYXJzZSgnQG1lZGlhIHByaW50LCBzY3JlZW4ge30nKVxuICAgKiBjb25zdCBtZWRpYSA9IHJvb3QuZmlyc3RcbiAgICogbWVkaWEucGFyYW1zIC8vPT4gJ3ByaW50LCBzY3JlZW4nXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgQXRSdWxlI1xuICAgKiBAbWVtYmVyIHtvYmplY3R9IHJhd3MgSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSBzdHJpbmcgYXMgaXQgd2FzIGluIHRoZSBvcmlnaW4gaW5wdXQuXG4gICAqXG4gICAqIEV2ZXJ5IHBhcnNlciBzYXZlcyBpdHMgb3duIHByb3BlcnRpZXMsXG4gICAqIGJ1dCB0aGUgZGVmYXVsdCBDU1MgcGFyc2VyIHVzZXM6XG4gICAqXG4gICAqICogYGJlZm9yZWA6IHRoZSBzcGFjZSBzeW1ib2xzIGJlZm9yZSB0aGUgbm9kZS4gSXQgYWxzbyBzdG9yZXMgYCpgXG4gICAqICAgYW5kIGBfYCBzeW1ib2xzIGJlZm9yZSB0aGUgZGVjbGFyYXRpb24gKElFIGhhY2spLlxuICAgKiAqIGBhZnRlcmA6IHRoZSBzcGFjZSBzeW1ib2xzIGFmdGVyIHRoZSBsYXN0IGNoaWxkIG9mIHRoZSBub2RlXG4gICAqICAgdG8gdGhlIGVuZCBvZiB0aGUgbm9kZS5cbiAgICogKiBgYmV0d2VlbmA6IHRoZSBzeW1ib2xzIGJldHdlZW4gdGhlIHByb3BlcnR5IGFuZCB2YWx1ZVxuICAgKiAgIGZvciBkZWNsYXJhdGlvbnMsIHNlbGVjdG9yIGFuZCBge2AgZm9yIHJ1bGVzLCBvciBsYXN0IHBhcmFtZXRlclxuICAgKiAgIGFuZCBge2AgZm9yIGF0LXJ1bGVzLlxuICAgKiAqIGBzZW1pY29sb25gOiBjb250YWlucyB0cnVlIGlmIHRoZSBsYXN0IGNoaWxkIGhhc1xuICAgKiAgIGFuIChvcHRpb25hbCkgc2VtaWNvbG9uLlxuICAgKiAqIGBhZnRlck5hbWVgOiB0aGUgc3BhY2UgYmV0d2VlbiB0aGUgYXQtcnVsZSBuYW1lIGFuZCBpdHMgcGFyYW1ldGVycy5cbiAgICpcbiAgICogUG9zdENTUyBjbGVhbnMgYXQtcnVsZSBwYXJhbWV0ZXJzIGZyb20gY29tbWVudHMgYW5kIGV4dHJhIHNwYWNlcyxcbiAgICogYnV0IGl0IHN0b3JlcyBvcmlnaW4gY29udGVudCBpbiByYXdzIHByb3BlcnRpZXMuXG4gICAqIEFzIHN1Y2gsIGlmIHlvdSBkb27igJl0IGNoYW5nZSBhIGRlY2xhcmF0aW9u4oCZcyB2YWx1ZSxcbiAgICogUG9zdENTUyB3aWxsIHVzZSB0aGUgcmF3IHZhbHVlIHdpdGggY29tbWVudHMuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCcgIEBtZWRpYVxcbnByaW50IHtcXG59JylcbiAgICogcm9vdC5maXJzdC5maXJzdC5yYXdzIC8vPT4geyBiZWZvcmU6ICcgICcsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgYmV0d2VlbjogJyAnLFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIGFmdGVyTmFtZTogJ1xcbicsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgYWZ0ZXI6ICdcXG4nIH1cbiAgICovXG59XG5cbmV4cG9ydCBkZWZhdWx0IEF0UnVsZVxuIl0sImZpbGUiOiJhdC1ydWxlLmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _container = _interopRequireDefault(require(\"./container\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents a CSS file and contains all its parsed nodes.\n *\n * @extends Container\n *\n * @example\n * const root = postcss.parse('a{color:black} b{z-index:2}')\n * root.type         //=> 'root'\n * root.nodes.length //=> 2\n */\nvar Root = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Root, _Container);\n\n  function Root(defaults) {\n    var _this;\n\n    _this = _Container.call(this, defaults) || this;\n    _this.type = 'root';\n    if (!_this.nodes) _this.nodes = [];\n    return _this;\n  }\n\n  var _proto = Root.prototype;\n\n  _proto.removeChild = function removeChild(child, ignore) {\n    var index = this.index(child);\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before;\n    }\n\n    return _Container.prototype.removeChild.call(this, child);\n  };\n\n  _proto.normalize = function normalize(child, sample, type) {\n    var nodes = _Container.prototype.normalize.call(this, child);\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before;\n        } else {\n          delete sample.raws.before;\n        }\n      } else if (this.first !== sample) {\n        for (var _iterator = _createForOfIteratorHelperLoose(nodes), _step; !(_step = _iterator()).done;) {\n          var node = _step.value;\n          node.raws.before = sample.raws.before;\n        }\n      }\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a {@link Result} instance representing the root’s CSS.\n   *\n   * @param {processOptions} [opts] Options with only `to` and `map` keys.\n   *\n   * @return {Result} Result with current root’s CSS.\n   *\n   * @example\n   * const root1 = postcss.parse(css1, { from: 'a.css' })\n   * const root2 = postcss.parse(css2, { from: 'b.css' })\n   * root1.append(root2)\n   * const result = root1.toResult({ to: 'all.css', map: true })\n   */\n  ;\n\n  _proto.toResult = function toResult(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var LazyResult = require('./lazy-result');\n\n    var Processor = require('./processor');\n\n    var lazy = new LazyResult(new Processor(), this, opts);\n    return lazy.stringify();\n  }\n  /**\n   * @memberof Root#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `after`: the space symbols after the last child to the end of file.\n   * * `semicolon`: is the last child has an (optional) semicolon.\n   *\n   * @example\n   * postcss.parse('a {}\\n').raws //=> { after: '\\n' }\n   * postcss.parse('a {}').raws   //=> { after: '' }\n   */\n  ;\n\n  return Root;\n}(_container.default);\n\nvar _default = Root;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvb3QuZXM2Il0sIm5hbWVzIjpbIlJvb3QiLCJkZWZhdWx0cyIsInR5cGUiLCJub2RlcyIsInJlbW92ZUNoaWxkIiwiY2hpbGQiLCJpZ25vcmUiLCJpbmRleCIsImxlbmd0aCIsInJhd3MiLCJiZWZvcmUiLCJub3JtYWxpemUiLCJzYW1wbGUiLCJmaXJzdCIsIm5vZGUiLCJ0b1Jlc3VsdCIsIm9wdHMiLCJMYXp5UmVzdWx0IiwicmVxdWlyZSIsIlByb2Nlc3NvciIsImxhenkiLCJzdHJpbmdpZnkiLCJDb250YWluZXIiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Ozs7OztBQUVBOzs7Ozs7Ozs7O0lBVU1BLEk7OztBQUNKLGdCQUFhQyxRQUFiLEVBQXVCO0FBQUE7O0FBQ3JCLGtDQUFNQSxRQUFOO0FBQ0EsVUFBS0MsSUFBTCxHQUFZLE1BQVo7QUFDQSxRQUFJLENBQUMsTUFBS0MsS0FBVixFQUFpQixNQUFLQSxLQUFMLEdBQWEsRUFBYjtBQUhJO0FBSXRCOzs7O1NBRURDLFcsR0FBQSxxQkFBYUMsS0FBYixFQUFvQkMsTUFBcEIsRUFBNEI7QUFDMUIsUUFBSUMsS0FBSyxHQUFHLEtBQUtBLEtBQUwsQ0FBV0YsS0FBWCxDQUFaOztBQUVBLFFBQUksQ0FBQ0MsTUFBRCxJQUFXQyxLQUFLLEtBQUssQ0FBckIsSUFBMEIsS0FBS0osS0FBTCxDQUFXSyxNQUFYLEdBQW9CLENBQWxELEVBQXFEO0FBQ25ELFdBQUtMLEtBQUwsQ0FBVyxDQUFYLEVBQWNNLElBQWQsQ0FBbUJDLE1BQW5CLEdBQTRCLEtBQUtQLEtBQUwsQ0FBV0ksS0FBWCxFQUFrQkUsSUFBbEIsQ0FBdUJDLE1BQW5EO0FBQ0Q7O0FBRUQsZ0NBQWFOLFdBQWIsWUFBeUJDLEtBQXpCO0FBQ0QsRzs7U0FFRE0sUyxHQUFBLG1CQUFXTixLQUFYLEVBQWtCTyxNQUFsQixFQUEwQlYsSUFBMUIsRUFBZ0M7QUFDOUIsUUFBSUMsS0FBSyx3QkFBU1EsU0FBVCxZQUFtQk4sS0FBbkIsQ0FBVDs7QUFFQSxRQUFJTyxNQUFKLEVBQVk7QUFDVixVQUFJVixJQUFJLEtBQUssU0FBYixFQUF3QjtBQUN0QixZQUFJLEtBQUtDLEtBQUwsQ0FBV0ssTUFBWCxHQUFvQixDQUF4QixFQUEyQjtBQUN6QkksVUFBQUEsTUFBTSxDQUFDSCxJQUFQLENBQVlDLE1BQVosR0FBcUIsS0FBS1AsS0FBTCxDQUFXLENBQVgsRUFBY00sSUFBZCxDQUFtQkMsTUFBeEM7QUFDRCxTQUZELE1BRU87QUFDTCxpQkFBT0UsTUFBTSxDQUFDSCxJQUFQLENBQVlDLE1BQW5CO0FBQ0Q7QUFDRixPQU5ELE1BTU8sSUFBSSxLQUFLRyxLQUFMLEtBQWVELE1BQW5CLEVBQTJCO0FBQ2hDLDZEQUFpQlQsS0FBakIsd0NBQXdCO0FBQUEsY0FBZlcsSUFBZTtBQUN0QkEsVUFBQUEsSUFBSSxDQUFDTCxJQUFMLENBQVVDLE1BQVYsR0FBbUJFLE1BQU0sQ0FBQ0gsSUFBUCxDQUFZQyxNQUEvQjtBQUNEO0FBQ0Y7QUFDRjs7QUFFRCxXQUFPUCxLQUFQO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7Ozs7O1NBYUFZLFEsR0FBQSxrQkFBVUMsSUFBVixFQUFzQjtBQUFBLFFBQVpBLElBQVk7QUFBWkEsTUFBQUEsSUFBWSxHQUFMLEVBQUs7QUFBQTs7QUFDcEIsUUFBSUMsVUFBVSxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUF4Qjs7QUFDQSxRQUFJQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQXZCOztBQUVBLFFBQUlFLElBQUksR0FBRyxJQUFJSCxVQUFKLENBQWUsSUFBSUUsU0FBSixFQUFmLEVBQWdDLElBQWhDLEVBQXNDSCxJQUF0QyxDQUFYO0FBQ0EsV0FBT0ksSUFBSSxDQUFDQyxTQUFMLEVBQVA7QUFDRDtBQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7RUExRGlCQyxrQjs7ZUEyRUp0QixJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL2NvbnRhaW5lcidcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgQ1NTIGZpbGUgYW5kIGNvbnRhaW5zIGFsbCBpdHMgcGFyc2VkIG5vZGVzLlxuICpcbiAqIEBleHRlbmRzIENvbnRhaW5lclxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYXtjb2xvcjpibGFja30gYnt6LWluZGV4OjJ9JylcbiAqIHJvb3QudHlwZSAgICAgICAgIC8vPT4gJ3Jvb3QnXG4gKiByb290Lm5vZGVzLmxlbmd0aCAvLz0+IDJcbiAqL1xuY2xhc3MgUm9vdCBleHRlbmRzIENvbnRhaW5lciB7XG4gIGNvbnN0cnVjdG9yIChkZWZhdWx0cykge1xuICAgIHN1cGVyKGRlZmF1bHRzKVxuICAgIHRoaXMudHlwZSA9ICdyb290J1xuICAgIGlmICghdGhpcy5ub2RlcykgdGhpcy5ub2RlcyA9IFtdXG4gIH1cblxuICByZW1vdmVDaGlsZCAoY2hpbGQsIGlnbm9yZSkge1xuICAgIGxldCBpbmRleCA9IHRoaXMuaW5kZXgoY2hpbGQpXG5cbiAgICBpZiAoIWlnbm9yZSAmJiBpbmRleCA9PT0gMCAmJiB0aGlzLm5vZGVzLmxlbmd0aCA+IDEpIHtcbiAgICAgIHRoaXMubm9kZXNbMV0ucmF3cy5iZWZvcmUgPSB0aGlzLm5vZGVzW2luZGV4XS5yYXdzLmJlZm9yZVxuICAgIH1cblxuICAgIHJldHVybiBzdXBlci5yZW1vdmVDaGlsZChjaGlsZClcbiAgfVxuXG4gIG5vcm1hbGl6ZSAoY2hpbGQsIHNhbXBsZSwgdHlwZSkge1xuICAgIGxldCBub2RlcyA9IHN1cGVyLm5vcm1hbGl6ZShjaGlsZClcblxuICAgIGlmIChzYW1wbGUpIHtcbiAgICAgIGlmICh0eXBlID09PSAncHJlcGVuZCcpIHtcbiAgICAgICAgaWYgKHRoaXMubm9kZXMubGVuZ3RoID4gMSkge1xuICAgICAgICAgIHNhbXBsZS5yYXdzLmJlZm9yZSA9IHRoaXMubm9kZXNbMV0ucmF3cy5iZWZvcmVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWxldGUgc2FtcGxlLnJhd3MuYmVmb3JlXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5maXJzdCAhPT0gc2FtcGxlKSB7XG4gICAgICAgIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcbiAgICAgICAgICBub2RlLnJhd3MuYmVmb3JlID0gc2FtcGxlLnJhd3MuYmVmb3JlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbm9kZXNcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEge0BsaW5rIFJlc3VsdH0gaW5zdGFuY2UgcmVwcmVzZW50aW5nIHRoZSByb2904oCZcyBDU1MuXG4gICAqXG4gICAqIEBwYXJhbSB7cHJvY2Vzc09wdGlvbnN9IFtvcHRzXSBPcHRpb25zIHdpdGggb25seSBgdG9gIGFuZCBgbWFwYCBrZXlzLlxuICAgKlxuICAgKiBAcmV0dXJuIHtSZXN1bHR9IFJlc3VsdCB3aXRoIGN1cnJlbnQgcm9vdOKAmXMgQ1NTLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290MSA9IHBvc3Rjc3MucGFyc2UoY3NzMSwgeyBmcm9tOiAnYS5jc3MnIH0pXG4gICAqIGNvbnN0IHJvb3QyID0gcG9zdGNzcy5wYXJzZShjc3MyLCB7IGZyb206ICdiLmNzcycgfSlcbiAgICogcm9vdDEuYXBwZW5kKHJvb3QyKVxuICAgKiBjb25zdCByZXN1bHQgPSByb290MS50b1Jlc3VsdCh7IHRvOiAnYWxsLmNzcycsIG1hcDogdHJ1ZSB9KVxuICAgKi9cbiAgdG9SZXN1bHQgKG9wdHMgPSB7IH0pIHtcbiAgICBsZXQgTGF6eVJlc3VsdCA9IHJlcXVpcmUoJy4vbGF6eS1yZXN1bHQnKVxuICAgIGxldCBQcm9jZXNzb3IgPSByZXF1aXJlKCcuL3Byb2Nlc3NvcicpXG5cbiAgICBsZXQgbGF6eSA9IG5ldyBMYXp5UmVzdWx0KG5ldyBQcm9jZXNzb3IoKSwgdGhpcywgb3B0cylcbiAgICByZXR1cm4gbGF6eS5zdHJpbmdpZnkoKVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBSb290I1xuICAgKiBAbWVtYmVyIHtvYmplY3R9IHJhd3MgSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICBub2RlIHN0cmluZyBhcyBpdCB3YXMgaW4gdGhlIG9yaWdpbiBpbnB1dC5cbiAgICpcbiAgICogRXZlcnkgcGFyc2VyIHNhdmVzIGl0cyBvd24gcHJvcGVydGllcyxcbiAgICogYnV0IHRoZSBkZWZhdWx0IENTUyBwYXJzZXIgdXNlczpcbiAgICpcbiAgICogKiBgYWZ0ZXJgOiB0aGUgc3BhY2Ugc3ltYm9scyBhZnRlciB0aGUgbGFzdCBjaGlsZCB0byB0aGUgZW5kIG9mIGZpbGUuXG4gICAqICogYHNlbWljb2xvbmA6IGlzIHRoZSBsYXN0IGNoaWxkIGhhcyBhbiAob3B0aW9uYWwpIHNlbWljb2xvbi5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogcG9zdGNzcy5wYXJzZSgnYSB7fVxcbicpLnJhd3MgLy89PiB7IGFmdGVyOiAnXFxuJyB9XG4gICAqIHBvc3Rjc3MucGFyc2UoJ2Ege30nKS5yYXdzICAgLy89PiB7IGFmdGVyOiAnJyB9XG4gICAqL1xufVxuXG5leHBvcnQgZGVmYXVsdCBSb290XG4iXSwiZmlsZSI6InJvb3QuanMifQ==\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _declaration = _interopRequireDefault(require(\"./declaration\"));\n\nvar _tokenize = _interopRequireDefault(require(\"./tokenize\"));\n\nvar _comment = _interopRequireDefault(require(\"./comment\"));\n\nvar _atRule = _interopRequireDefault(require(\"./at-rule\"));\n\nvar _root = _interopRequireDefault(require(\"./root\"));\n\nvar _rule = _interopRequireDefault(require(\"./rule\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(input) {\n    this.input = input;\n    this.root = new _root.default();\n    this.current = this.root;\n    this.spaces = '';\n    this.semicolon = false;\n    this.createTokenizer();\n    this.root.source = {\n      input: input,\n      start: {\n        line: 1,\n        column: 1\n      }\n    };\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.createTokenizer = function createTokenizer() {\n    this.tokenizer = (0, _tokenize.default)(this.input);\n  };\n\n  _proto.parse = function parse() {\n    var token;\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1];\n          break;\n\n        case ';':\n          this.freeSemicolon(token);\n          break;\n\n        case '}':\n          this.end(token);\n          break;\n\n        case 'comment':\n          this.comment(token);\n          break;\n\n        case 'at-word':\n          this.atrule(token);\n          break;\n\n        case '{':\n          this.emptyRule(token);\n          break;\n\n        default:\n          this.other(token);\n          break;\n      }\n    }\n\n    this.endFile();\n  };\n\n  _proto.comment = function comment(token) {\n    var node = new _comment.default();\n    this.init(node, token[2], token[3]);\n    node.source.end = {\n      line: token[4],\n      column: token[5]\n    };\n    var text = token[1].slice(2, -2);\n\n    if (/^\\s*$/.test(text)) {\n      node.text = '';\n      node.raws.left = text;\n      node.raws.right = '';\n    } else {\n      var match = text.match(/^(\\s*)([^]*[^\\s])(\\s*)$/);\n      node.text = match[2];\n      node.raws.left = match[1];\n      node.raws.right = match[3];\n    }\n  };\n\n  _proto.emptyRule = function emptyRule(token) {\n    var node = new _rule.default();\n    this.init(node, token[2], token[3]);\n    node.selector = '';\n    node.raws.between = '';\n    this.current = node;\n  };\n\n  _proto.other = function other(start) {\n    var end = false;\n    var type = null;\n    var colon = false;\n    var bracket = null;\n    var brackets = [];\n    var tokens = [];\n    var token = start;\n\n    while (token) {\n      type = token[0];\n      tokens.push(token);\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token;\n        brackets.push(type === '(' ? ')' : ']');\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens);\n            return;\n          } else {\n            break;\n          }\n        } else if (type === '{') {\n          this.rule(tokens);\n          return;\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop());\n          end = true;\n          break;\n        } else if (type === ':') {\n          colon = true;\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n        if (brackets.length === 0) bracket = null;\n      }\n\n      token = this.tokenizer.nextToken();\n    }\n\n    if (this.tokenizer.endOfFile()) end = true;\n    if (brackets.length > 0) this.unclosedBracket(bracket);\n\n    if (end && colon) {\n      while (tokens.length) {\n        token = tokens[tokens.length - 1][0];\n        if (token !== 'space' && token !== 'comment') break;\n        this.tokenizer.back(tokens.pop());\n      }\n\n      this.decl(tokens);\n    } else {\n      this.unknownWord(tokens);\n    }\n  };\n\n  _proto.rule = function rule(tokens) {\n    tokens.pop();\n    var node = new _rule.default();\n    this.init(node, tokens[0][2], tokens[0][3]);\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens);\n    this.raw(node, 'selector', tokens);\n    this.current = node;\n  };\n\n  _proto.decl = function decl(tokens) {\n    var node = new _declaration.default();\n    this.init(node);\n    var last = tokens[tokens.length - 1];\n\n    if (last[0] === ';') {\n      this.semicolon = true;\n      tokens.pop();\n    }\n\n    if (last[4]) {\n      node.source.end = {\n        line: last[4],\n        column: last[5]\n      };\n    } else {\n      node.source.end = {\n        line: last[2],\n        column: last[3]\n      };\n    }\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens);\n      node.raws.before += tokens.shift()[1];\n    }\n\n    node.source.start = {\n      line: tokens[0][2],\n      column: tokens[0][3]\n    };\n    node.prop = '';\n\n    while (tokens.length) {\n      var type = tokens[0][0];\n\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break;\n      }\n\n      node.prop += tokens.shift()[1];\n    }\n\n    node.raws.between = '';\n    var token;\n\n    while (tokens.length) {\n      token = tokens.shift();\n\n      if (token[0] === ':') {\n        node.raws.between += token[1];\n        break;\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token]);\n        }\n\n        node.raws.between += token[1];\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0];\n      node.prop = node.prop.slice(1);\n    }\n\n    node.raws.between += this.spacesAndCommentsFromStart(tokens);\n    this.precheckMissedSemicolon(tokens);\n\n    for (var i = tokens.length - 1; i > 0; i--) {\n      token = tokens[i];\n\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true;\n        var string = this.stringFrom(tokens, i);\n        string = this.spacesFromEnd(tokens) + string;\n        if (string !== ' !important') node.raws.important = string;\n        break;\n      } else if (token[1].toLowerCase() === 'important') {\n        var cache = tokens.slice(0);\n        var str = '';\n\n        for (var j = i; j > 0; j--) {\n          var _type = cache[j][0];\n\n          if (str.trim().indexOf('!') === 0 && _type !== 'space') {\n            break;\n          }\n\n          str = cache.pop()[1] + str;\n        }\n\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true;\n          node.raws.important = str;\n          tokens = cache;\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break;\n      }\n    }\n\n    this.raw(node, 'value', tokens);\n    if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens);\n  };\n\n  _proto.atrule = function atrule(token) {\n    var node = new _atRule.default();\n    node.name = token[1].slice(1);\n\n    if (node.name === '') {\n      this.unnamedAtrule(node, token);\n    }\n\n    this.init(node, token[2], token[3]);\n    var prev;\n    var shift;\n    var last = false;\n    var open = false;\n    var params = [];\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n\n      if (token[0] === ';') {\n        node.source.end = {\n          line: token[2],\n          column: token[3]\n        };\n        this.semicolon = true;\n        break;\n      } else if (token[0] === '{') {\n        open = true;\n        break;\n      } else if (token[0] === '}') {\n        if (params.length > 0) {\n          shift = params.length - 1;\n          prev = params[shift];\n\n          while (prev && prev[0] === 'space') {\n            prev = params[--shift];\n          }\n\n          if (prev) {\n            node.source.end = {\n              line: prev[4],\n              column: prev[5]\n            };\n          }\n        }\n\n        this.end(token);\n        break;\n      } else {\n        params.push(token);\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true;\n        break;\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params);\n\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params);\n      this.raw(node, 'params', params);\n\n      if (last) {\n        token = params[params.length - 1];\n        node.source.end = {\n          line: token[4],\n          column: token[5]\n        };\n        this.spaces = node.raws.between;\n        node.raws.between = '';\n      }\n    } else {\n      node.raws.afterName = '';\n      node.params = '';\n    }\n\n    if (open) {\n      node.nodes = [];\n      this.current = node;\n    }\n  };\n\n  _proto.end = function end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n\n    this.semicolon = false;\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n    this.spaces = '';\n\n    if (this.current.parent) {\n      this.current.source.end = {\n        line: token[2],\n        column: token[3]\n      };\n      this.current = this.current.parent;\n    } else {\n      this.unexpectedClose(token);\n    }\n  };\n\n  _proto.endFile = function endFile() {\n    if (this.current.parent) this.unclosedBlock();\n\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n  };\n\n  _proto.freeSemicolon = function freeSemicolon(token) {\n    this.spaces += token[1];\n\n    if (this.current.nodes) {\n      var prev = this.current.nodes[this.current.nodes.length - 1];\n\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces;\n        this.spaces = '';\n      }\n    }\n  } // Helpers\n  ;\n\n  _proto.init = function init(node, line, column) {\n    this.current.push(node);\n    node.source = {\n      start: {\n        line: line,\n        column: column\n      },\n      input: this.input\n    };\n    node.raws.before = this.spaces;\n    this.spaces = '';\n    if (node.type !== 'comment') this.semicolon = false;\n  };\n\n  _proto.raw = function raw(node, prop, tokens) {\n    var token, type;\n    var length = tokens.length;\n    var value = '';\n    var clean = true;\n    var next, prev;\n    var pattern = /^([.|#])?([\\w])+/i;\n\n    for (var i = 0; i < length; i += 1) {\n      token = tokens[i];\n      type = token[0];\n\n      if (type === 'comment' && node.type === 'rule') {\n        prev = tokens[i - 1];\n        next = tokens[i + 1];\n\n        if (prev[0] !== 'space' && next[0] !== 'space' && pattern.test(prev[1]) && pattern.test(next[1])) {\n          value += token[1];\n        } else {\n          clean = false;\n        }\n\n        continue;\n      }\n\n      if (type === 'comment' || type === 'space' && i === length - 1) {\n        clean = false;\n      } else {\n        value += token[1];\n      }\n    }\n\n    if (!clean) {\n      var raw = tokens.reduce(function (all, i) {\n        return all + i[1];\n      }, '');\n      node.raws[prop] = {\n        value: value,\n        raw: raw\n      };\n    }\n\n    node[prop] = value;\n  };\n\n  _proto.spacesAndCommentsFromEnd = function spacesAndCommentsFromEnd(tokens) {\n    var lastTokenType;\n    var spaces = '';\n\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n\n    return spaces;\n  };\n\n  _proto.spacesAndCommentsFromStart = function spacesAndCommentsFromStart(tokens) {\n    var next;\n    var spaces = '';\n\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== 'space' && next !== 'comment') break;\n      spaces += tokens.shift()[1];\n    }\n\n    return spaces;\n  };\n\n  _proto.spacesFromEnd = function spacesFromEnd(tokens) {\n    var lastTokenType;\n    var spaces = '';\n\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== 'space') break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n\n    return spaces;\n  };\n\n  _proto.stringFrom = function stringFrom(tokens, from) {\n    var result = '';\n\n    for (var i = from; i < tokens.length; i++) {\n      result += tokens[i][1];\n    }\n\n    tokens.splice(from, tokens.length - from);\n    return result;\n  };\n\n  _proto.colon = function colon(tokens) {\n    var brackets = 0;\n    var token, type, prev;\n\n    for (var i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      type = token[0];\n\n      if (type === '(') {\n        brackets += 1;\n      }\n\n      if (type === ')') {\n        brackets -= 1;\n      }\n\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token);\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue;\n        } else {\n          return i;\n        }\n      }\n\n      prev = token;\n    }\n\n    return false;\n  } // Errors\n  ;\n\n  _proto.unclosedBracket = function unclosedBracket(bracket) {\n    throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);\n  };\n\n  _proto.unknownWord = function unknownWord(tokens) {\n    throw this.input.error('Unknown word', tokens[0][2], tokens[0][3]);\n  };\n\n  _proto.unexpectedClose = function unexpectedClose(token) {\n    throw this.input.error('Unexpected }', token[2], token[3]);\n  };\n\n  _proto.unclosedBlock = function unclosedBlock() {\n    var pos = this.current.source.start;\n    throw this.input.error('Unclosed block', pos.line, pos.column);\n  };\n\n  _proto.doubleColon = function doubleColon(token) {\n    throw this.input.error('Double colon', token[2], token[3]);\n  };\n\n  _proto.unnamedAtrule = function unnamedAtrule(node, token) {\n    throw this.input.error('At-rule without name', token[2], token[3]);\n  };\n\n  _proto.precheckMissedSemicolon = function precheckMissedSemicolon()\n  /* tokens */\n  {// Hook for Safe Parser\n  };\n\n  _proto.checkMissedSemicolon = function checkMissedSemicolon(tokens) {\n    var colon = this.colon(tokens);\n    if (colon === false) return;\n    var founded = 0;\n    var token;\n\n    for (var j = colon - 1; j >= 0; j--) {\n      token = tokens[j];\n\n      if (token[0] !== 'space') {\n        founded += 1;\n        if (founded === 2) break;\n      }\n    }\n\n    throw this.input.error('Missed semicolon', token[2], token[3]);\n  };\n\n  return Parser;\n}();\n\nexports.default = Parser;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString();\n  } else {\n    return window.atob(str);\n  }\n}\n/**\n * Source map information from input CSS.\n * For example, source map after Sass compiler.\n *\n * This class will automatically find source map in input CSS or in file system\n * near input file (according `from` option).\n *\n * @example\n * const root = postcss.parse(css, { from: 'a.sass.css' })\n * root.input.map //=> PreviousMap\n */\n\n\nvar PreviousMap = /*#__PURE__*/function () {\n  /**\n   * @param {string}         css    Input CSS source.\n   * @param {processOptions} [opts] {@link Processor#process} options.\n   */\n  function PreviousMap(css, opts) {\n    this.loadAnnotation(css);\n    /**\n     * Was source map inlined by data-uri to input CSS.\n     *\n     * @type {boolean}\n     */\n\n    this.inline = this.startWith(this.annotation, 'data:');\n    var prev = opts.map ? opts.map.prev : undefined;\n    var text = this.loadMap(opts.from, prev);\n    if (text) this.text = text;\n  }\n  /**\n   * Create a instance of `SourceMapGenerator` class\n   * from the `source-map` library to work with source map information.\n   *\n   * It is lazy method, so it will create object only on first call\n   * and then it will use cache.\n   *\n   * @return {SourceMapGenerator} Object with source map information.\n   */\n\n\n  var _proto = PreviousMap.prototype;\n\n  _proto.consumer = function consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new _sourceMap.default.SourceMapConsumer(this.text);\n    }\n\n    return this.consumerCache;\n  }\n  /**\n   * Does source map contains `sourcesContent` with input source text.\n   *\n   * @return {boolean} Is `sourcesContent` present.\n   */\n  ;\n\n  _proto.withContent = function withContent() {\n    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n  };\n\n  _proto.startWith = function startWith(string, start) {\n    if (!string) return false;\n    return string.substr(0, start.length) === start;\n  };\n\n  _proto.getAnnotationURL = function getAnnotationURL(sourceMapString) {\n    return sourceMapString.match(/\\/\\*\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\*\\//)[1].trim();\n  };\n\n  _proto.loadAnnotation = function loadAnnotation(css) {\n    var annotations = css.match(/\\/\\*\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\*\\//gm);\n\n    if (annotations && annotations.length > 0) {\n      // Locate the last sourceMappingURL to avoid picking up\n      // sourceMappingURLs from comments, strings, etc.\n      var lastAnnotation = annotations[annotations.length - 1];\n\n      if (lastAnnotation) {\n        this.annotation = this.getAnnotationURL(lastAnnotation);\n      }\n    }\n  };\n\n  _proto.decodeInline = function decodeInline(text) {\n    var baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    var baseUri = /^data:application\\/json;base64,/;\n    var uri = 'data:application/json,';\n\n    if (this.startWith(text, uri)) {\n      return decodeURIComponent(text.substr(uri.length));\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length));\n    }\n\n    var encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error('Unsupported source map encoding ' + encoding);\n  };\n\n  _proto.loadMap = function loadMap(file, prev) {\n    if (prev === false) return false;\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev;\n      } else if (typeof prev === 'function') {\n        var prevPath = prev(file);\n\n        if (prevPath && _fs.default.existsSync && _fs.default.existsSync(prevPath)) {\n          return _fs.default.readFileSync(prevPath, 'utf-8').toString().trim();\n        } else {\n          throw new Error('Unable to load previous source map: ' + prevPath.toString());\n        }\n      } else if (prev instanceof _sourceMap.default.SourceMapConsumer) {\n        return _sourceMap.default.SourceMapGenerator.fromSourceMap(prev).toString();\n      } else if (prev instanceof _sourceMap.default.SourceMapGenerator) {\n        return prev.toString();\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev);\n      } else {\n        throw new Error('Unsupported previous source map format: ' + prev.toString());\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation);\n    } else if (this.annotation) {\n      var map = this.annotation;\n      if (file) map = _path.default.join(_path.default.dirname(file), map);\n      this.root = _path.default.dirname(map);\n\n      if (_fs.default.existsSync && _fs.default.existsSync(map)) {\n        return _fs.default.readFileSync(map, 'utf-8').toString().trim();\n      } else {\n        return false;\n      }\n    }\n  };\n\n  _proto.isMap = function isMap(map) {\n    if (typeof map !== 'object') return false;\n    return typeof map.mappings === 'string' || typeof map._mappings === 'string';\n  };\n\n  return PreviousMap;\n}();\n\nvar _default = PreviousMap;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _cssSyntaxError = _interopRequireDefault(require(\"./css-syntax-error\"));\n\nvar _previousMap = _interopRequireDefault(require(\"./previous-map\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar sequence = 0;\n/**\n * Represents the source CSS.\n *\n * @example\n * const root  = postcss.parse(css, { from: file })\n * const input = root.source.input\n */\n\nvar Input = /*#__PURE__*/function () {\n  /**\n   * @param {string} css    Input CSS source.\n   * @param {object} [opts] {@link Processor#process} options.\n   */\n  function Input(css, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {\n      throw new Error(\"PostCSS received \" + css + \" instead of CSS string\");\n    }\n    /**\n     * Input CSS source\n     *\n     * @type {string}\n     *\n     * @example\n     * const input = postcss.parse('a{}', { from: file }).input\n     * input.css //=> \"a{}\"\n     */\n\n\n    this.css = css.toString();\n\n    if (this.css[0] === \"\\uFEFF\" || this.css[0] === \"\\uFFFE\") {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n\n    if (opts.from) {\n      if (/^\\w+:\\/\\//.test(opts.from) || _path.default.isAbsolute(opts.from)) {\n        /**\n         * The absolute path to the CSS source file defined\n         * with the `from` option.\n         *\n         * @type {string}\n         *\n         * @example\n         * const root = postcss.parse(css, { from: 'a.css' })\n         * root.source.input.file //=> '/home/ai/a.css'\n         */\n        this.file = opts.from;\n      } else {\n        this.file = _path.default.resolve(opts.from);\n      }\n    }\n\n    var map = new _previousMap.default(this.css, opts);\n\n    if (map.text) {\n      /**\n       * The input source map passed from a compilation step before PostCSS\n       * (for example, from Sass compiler).\n       *\n       * @type {PreviousMap}\n       *\n       * @example\n       * root.source.input.map.consumer().sources //=> ['a.sass']\n       */\n      this.map = map;\n      var file = map.consumer().file;\n      if (!this.file && file) this.file = this.mapResolve(file);\n    }\n\n    if (!this.file) {\n      sequence += 1;\n      /**\n       * The unique ID of the CSS source. It will be created if `from` option\n       * is not provided (because PostCSS does not know the file path).\n       *\n       * @type {string}\n       *\n       * @example\n       * const root = postcss.parse(css)\n       * root.source.input.file //=> undefined\n       * root.source.input.id   //=> \"<input css 1>\"\n       */\n\n      this.id = '<input css ' + sequence + '>';\n    }\n\n    if (this.map) this.map.file = this.from;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.error = function error(message, line, column, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var result;\n    var origin = this.origin(line, column);\n\n    if (origin) {\n      result = new _cssSyntaxError.default(message, origin.line, origin.column, origin.source, origin.file, opts.plugin);\n    } else {\n      result = new _cssSyntaxError.default(message, line, column, this.css, this.file, opts.plugin);\n    }\n\n    result.input = {\n      line: line,\n      column: column,\n      source: this.css\n    };\n    if (this.file) result.input.file = this.file;\n    return result;\n  }\n  /**\n   * Reads the input source map and returns a symbol position\n   * in the input source (e.g., in a Sass file that was compiled\n   * to CSS before being passed to PostCSS).\n   *\n   * @param {number} line   Line in input CSS.\n   * @param {number} column Column in input CSS.\n   *\n   * @return {filePosition} Position in input source.\n   *\n   * @example\n   * root.source.input.origin(1, 1) //=> { file: 'a.css', line: 3, column: 1 }\n   */\n  ;\n\n  _proto.origin = function origin(line, column) {\n    if (!this.map) return false;\n    var consumer = this.map.consumer();\n    var from = consumer.originalPositionFor({\n      line: line,\n      column: column\n    });\n    if (!from.source) return false;\n    var result = {\n      file: this.mapResolve(from.source),\n      line: from.line,\n      column: from.column\n    };\n    var source = consumer.sourceContentFor(from.source);\n    if (source) result.source = source;\n    return result;\n  };\n\n  _proto.mapResolve = function mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file;\n    }\n\n    return _path.default.resolve(this.map.consumer().sourceRoot || '.', file);\n  }\n  /**\n   * The CSS source identifier. Contains {@link Input#file} if the user\n   * set the `from` option, or {@link Input#id} if they did not.\n   *\n   * @type {string}\n   *\n   * @example\n   * const root = postcss.parse(css, { from: 'a.css' })\n   * root.source.input.from //=> \"/home/ai/a.css\"\n   *\n   * const root = postcss.parse(css)\n   * root.source.input.from //=> \"<input css 1>\"\n   */\n  ;\n\n  _createClass(Input, [{\n    key: \"from\",\n    get: function get() {\n      return this.file || this.id;\n    }\n  }]);\n\n  return Input;\n}();\n\nvar _default = Input;\n/**\n * @typedef  {object} filePosition\n * @property {string} file   Path to file.\n * @property {number} line   Source line in file.\n * @property {number} column Source column in file.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nvar _input = _interopRequireDefault(require(\"./input\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(css, opts) {\n  var input = new _input.default(css, opts);\n  var parser = new _parser.default(input);\n\n  try {\n    parser.parse();\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';\n        }\n      }\n    }\n\n    throw e;\n  }\n\n  return parser.root;\n}\n\nvar _default = parse;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlLmVzNiJdLCJuYW1lcyI6WyJwYXJzZSIsImNzcyIsIm9wdHMiLCJpbnB1dCIsIklucHV0IiwicGFyc2VyIiwiUGFyc2VyIiwiZSIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIm1lc3NhZ2UiLCJyb290Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUNBOzs7O0FBRUEsU0FBU0EsS0FBVCxDQUFnQkMsR0FBaEIsRUFBcUJDLElBQXJCLEVBQTJCO0FBQ3pCLE1BQUlDLEtBQUssR0FBRyxJQUFJQyxjQUFKLENBQVVILEdBQVYsRUFBZUMsSUFBZixDQUFaO0FBQ0EsTUFBSUcsTUFBTSxHQUFHLElBQUlDLGVBQUosQ0FBV0gsS0FBWCxDQUFiOztBQUNBLE1BQUk7QUFDRkUsSUFBQUEsTUFBTSxDQUFDTCxLQUFQO0FBQ0QsR0FGRCxDQUVFLE9BQU9PLENBQVAsRUFBVTtBQUNWLFFBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDLFVBQUlILENBQUMsQ0FBQ0ksSUFBRixLQUFXLGdCQUFYLElBQStCVCxJQUEvQixJQUF1Q0EsSUFBSSxDQUFDVSxJQUFoRCxFQUFzRDtBQUNwRCxZQUFJLFdBQVdDLElBQVgsQ0FBZ0JYLElBQUksQ0FBQ1UsSUFBckIsQ0FBSixFQUFnQztBQUM5QkwsVUFBQUEsQ0FBQyxDQUFDTyxPQUFGLElBQWEsb0NBQ0EsMkJBREEsR0FFQSx3Q0FGYjtBQUdELFNBSkQsTUFJTyxJQUFJLFVBQVVELElBQVYsQ0FBZVgsSUFBSSxDQUFDVSxJQUFwQixDQUFKLEVBQStCO0FBQ3BDTCxVQUFBQSxDQUFDLENBQUNPLE9BQUYsSUFBYSxvQ0FDQSwyQkFEQSxHQUVBLHdDQUZiO0FBR0QsU0FKTSxNQUlBLElBQUksV0FBV0QsSUFBWCxDQUFnQlgsSUFBSSxDQUFDVSxJQUFyQixDQUFKLEVBQWdDO0FBQ3JDTCxVQUFBQSxDQUFDLENBQUNPLE9BQUYsSUFBYSxvQ0FDQSwyQkFEQSxHQUVBLHdDQUZiO0FBR0Q7QUFDRjtBQUNGOztBQUNELFVBQU1QLENBQU47QUFDRDs7QUFFRCxTQUFPRixNQUFNLENBQUNVLElBQWQ7QUFDRDs7ZUFFY2YsSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXJzZXIgZnJvbSAnLi9wYXJzZXInXG5pbXBvcnQgSW5wdXQgZnJvbSAnLi9pbnB1dCdcblxuZnVuY3Rpb24gcGFyc2UgKGNzcywgb3B0cykge1xuICBsZXQgaW5wdXQgPSBuZXcgSW5wdXQoY3NzLCBvcHRzKVxuICBsZXQgcGFyc2VyID0gbmV3IFBhcnNlcihpbnB1dClcbiAgdHJ5IHtcbiAgICBwYXJzZXIucGFyc2UoKVxuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChlLm5hbWUgPT09ICdDc3NTeW50YXhFcnJvcicgJiYgb3B0cyAmJiBvcHRzLmZyb20pIHtcbiAgICAgICAgaWYgKC9cXC5zY3NzJC9pLnRlc3Qob3B0cy5mcm9tKSkge1xuICAgICAgICAgIGUubWVzc2FnZSArPSAnXFxuWW91IHRyaWVkIHRvIHBhcnNlIFNDU1Mgd2l0aCAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgJ3RoZSBzdGFuZGFyZCBDU1MgcGFyc2VyOyAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgJ3RyeSBhZ2FpbiB3aXRoIHRoZSBwb3N0Y3NzLXNjc3MgcGFyc2VyJ1xuICAgICAgICB9IGVsc2UgaWYgKC9cXC5zYXNzL2kudGVzdChvcHRzLmZyb20pKSB7XG4gICAgICAgICAgZS5tZXNzYWdlICs9ICdcXG5Zb3UgdHJpZWQgdG8gcGFyc2UgU2FzcyB3aXRoICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndGhlIHN0YW5kYXJkIENTUyBwYXJzZXI7ICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndHJ5IGFnYWluIHdpdGggdGhlIHBvc3Rjc3Mtc2FzcyBwYXJzZXInXG4gICAgICAgIH0gZWxzZSBpZiAoL1xcLmxlc3MkL2kudGVzdChvcHRzLmZyb20pKSB7XG4gICAgICAgICAgZS5tZXNzYWdlICs9ICdcXG5Zb3UgdHJpZWQgdG8gcGFyc2UgTGVzcyB3aXRoICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndGhlIHN0YW5kYXJkIENTUyBwYXJzZXI7ICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndHJ5IGFnYWluIHdpdGggdGhlIHBvc3Rjc3MtbGVzcyBwYXJzZXInXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgZVxuICB9XG5cbiAgcmV0dXJuIHBhcnNlci5yb290XG59XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlXG4iXSwiZmlsZSI6InBhcnNlLmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _mapGenerator = _interopRequireDefault(require(\"./map-generator\"));\n\nvar _stringify2 = _interopRequireDefault(require(\"./stringify\"));\n\nvar _warnOnce = _interopRequireDefault(require(\"./warn-once\"));\n\nvar _result = _interopRequireDefault(require(\"./result\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function';\n}\n/**\n * A Promise proxy for the result of PostCSS transformations.\n *\n * A `LazyResult` instance is returned by {@link Processor#process}.\n *\n * @example\n * const lazy = postcss([autoprefixer]).process(css)\n */\n\n\nvar LazyResult = /*#__PURE__*/function () {\n  function LazyResult(processor, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n    var root;\n\n    if (typeof css === 'object' && css !== null && css.type === 'root') {\n      root = css;\n    } else if (css instanceof LazyResult || css instanceof _result.default) {\n      root = css.root;\n\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      var parser = _parse.default;\n      if (opts.syntax) parser = opts.syntax.parse;\n      if (opts.parser) parser = opts.parser;\n      if (parser.parse) parser = parser.parse;\n\n      try {\n        root = parser(css, opts);\n      } catch (error) {\n        this.error = error;\n      }\n    }\n\n    this.result = new _result.default(processor, root, opts);\n  }\n  /**\n   * Returns a {@link Processor} instance, which will be used\n   * for CSS transformations.\n   *\n   * @type {Processor}\n   */\n\n\n  var _proto = LazyResult.prototype;\n\n  /**\n   * Processes input CSS through synchronous plugins\n   * and calls {@link Result#warnings()}.\n   *\n   * @return {Warning[]} Warnings from plugins.\n   */\n  _proto.warnings = function warnings() {\n    return this.sync().warnings();\n  }\n  /**\n   * Alias for the {@link LazyResult#css} property.\n   *\n   * @example\n   * lazy + '' === lazy.css\n   *\n   * @return {string} Output CSS.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return this.css;\n  }\n  /**\n   * Processes input CSS through synchronous and asynchronous plugins\n   * and calls `onFulfilled` with a Result instance. If a plugin throws\n   * an error, the `onRejected` callback will be executed.\n   *\n   * It implements standard Promise API.\n   *\n   * @param {onFulfilled} onFulfilled Callback will be executed\n   *                                  when all plugins will finish work.\n   * @param {onRejected}  onRejected  Callback will be executed on any error.\n   *\n   * @return {Promise} Promise API to make queue.\n   *\n   * @example\n   * postcss([autoprefixer]).process(css, { from: cssPath }).then(result => {\n   *   console.log(result.css)\n   * })\n   */\n  ;\n\n  _proto.then = function then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        (0, _warnOnce.default)('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected);\n  }\n  /**\n   * Processes input CSS through synchronous and asynchronous plugins\n   * and calls onRejected for each error thrown in any plugin.\n   *\n   * It implements standard Promise API.\n   *\n   * @param {onRejected} onRejected Callback will be executed on any error.\n   *\n   * @return {Promise} Promise API to make queue.\n   *\n   * @example\n   * postcss([autoprefixer]).process(css).then(result => {\n   *   console.log(result.css)\n   * }).catch(error => {\n   *   console.error(error)\n   * })\n   */\n  ;\n\n  _proto.catch = function _catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  /**\n   * Processes input CSS through synchronous and asynchronous plugins\n   * and calls onFinally on any error or when all plugins will finish work.\n   *\n   * It implements standard Promise API.\n   *\n   * @param {onFinally} onFinally Callback will be executed on any error or\n   *                              when all plugins will finish work.\n   *\n   * @return {Promise} Promise API to make queue.\n   *\n   * @example\n   * postcss([autoprefixer]).process(css).finally(() => {\n   *   console.log('processing ended')\n   * })\n   */\n  ;\n\n  _proto.finally = function _finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  };\n\n  _proto.handleError = function handleError(error, plugin) {\n    try {\n      this.error = error;\n\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin;\n        error.setMessage();\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          var pluginName = plugin.postcssPlugin;\n          var pluginVer = plugin.postcssVersion;\n          var runtimeVer = this.result.processor.version;\n          var a = pluginVer.split('.');\n          var b = runtimeVer.split('.');\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');\n          }\n        }\n      }\n    } catch (err) {\n      if (console && console.error) console.error(err);\n    }\n  };\n\n  _proto.asyncTick = function asyncTick(resolve, reject) {\n    var _this = this;\n\n    if (this.plugin >= this.processor.plugins.length) {\n      this.processed = true;\n      return resolve();\n    }\n\n    try {\n      var plugin = this.processor.plugins[this.plugin];\n      var promise = this.run(plugin);\n      this.plugin += 1;\n\n      if (isPromise(promise)) {\n        promise.then(function () {\n          _this.asyncTick(resolve, reject);\n        }).catch(function (error) {\n          _this.handleError(error, plugin);\n\n          _this.processed = true;\n          reject(error);\n        });\n      } else {\n        this.asyncTick(resolve, reject);\n      }\n    } catch (error) {\n      this.processed = true;\n      reject(error);\n    }\n  };\n\n  _proto.async = function async() {\n    var _this2 = this;\n\n    if (this.processed) {\n      return new Promise(function (resolve, reject) {\n        if (_this2.error) {\n          reject(_this2.error);\n        } else {\n          resolve(_this2.stringify());\n        }\n      });\n    }\n\n    if (this.processing) {\n      return this.processing;\n    }\n\n    this.processing = new Promise(function (resolve, reject) {\n      if (_this2.error) return reject(_this2.error);\n      _this2.plugin = 0;\n\n      _this2.asyncTick(resolve, reject);\n    }).then(function () {\n      _this2.processed = true;\n      return _this2.stringify();\n    });\n    return this.processing;\n  };\n\n  _proto.sync = function sync() {\n    if (this.processed) return this.result;\n    this.processed = true;\n\n    if (this.processing) {\n      throw new Error('Use process(css).then(cb) to work with async plugins');\n    }\n\n    if (this.error) throw this.error;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(this.result.processor.plugins), _step; !(_step = _iterator()).done;) {\n      var plugin = _step.value;\n      var promise = this.run(plugin);\n\n      if (isPromise(promise)) {\n        throw new Error('Use process(css).then(cb) to work with async plugins');\n      }\n    }\n\n    return this.result;\n  };\n\n  _proto.run = function run(plugin) {\n    this.result.lastPlugin = plugin;\n\n    try {\n      return plugin(this.result.root, this.result);\n    } catch (error) {\n      this.handleError(error, plugin);\n      throw error;\n    }\n  };\n\n  _proto.stringify = function stringify() {\n    if (this.stringified) return this.result;\n    this.stringified = true;\n    this.sync();\n    var opts = this.result.opts;\n    var str = _stringify2.default;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n    var map = new _mapGenerator.default(str, this.result.root, this.result.opts);\n    var data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n    return this.result;\n  };\n\n  _createClass(LazyResult, [{\n    key: \"processor\",\n    get: function get() {\n      return this.result.processor;\n    }\n    /**\n     * Options from the {@link Processor#process} call.\n     *\n     * @type {processOptions}\n     */\n\n  }, {\n    key: \"opts\",\n    get: function get() {\n      return this.result.opts;\n    }\n    /**\n     * Processes input CSS through synchronous plugins, converts `Root`\n     * to a CSS string and returns {@link Result#css}.\n     *\n     * This property will only work with synchronous plugins.\n     * If the processor contains any asynchronous plugins\n     * it will throw an error. This is why this method is only\n     * for debug purpose, you should always use {@link LazyResult#then}.\n     *\n     * @type {string}\n     * @see Result#css\n     */\n\n  }, {\n    key: \"css\",\n    get: function get() {\n      return this.stringify().css;\n    }\n    /**\n     * An alias for the `css` property. Use it with syntaxes\n     * that generate non-CSS output.\n     *\n     * This property will only work with synchronous plugins.\n     * If the processor contains any asynchronous plugins\n     * it will throw an error. This is why this method is only\n     * for debug purpose, you should always use {@link LazyResult#then}.\n     *\n     * @type {string}\n     * @see Result#content\n     */\n\n  }, {\n    key: \"content\",\n    get: function get() {\n      return this.stringify().content;\n    }\n    /**\n     * Processes input CSS through synchronous plugins\n     * and returns {@link Result#map}.\n     *\n     * This property will only work with synchronous plugins.\n     * If the processor contains any asynchronous plugins\n     * it will throw an error. This is why this method is only\n     * for debug purpose, you should always use {@link LazyResult#then}.\n     *\n     * @type {SourceMapGenerator}\n     * @see Result#map\n     */\n\n  }, {\n    key: \"map\",\n    get: function get() {\n      return this.stringify().map;\n    }\n    /**\n     * Processes input CSS through synchronous plugins\n     * and returns {@link Result#root}.\n     *\n     * This property will only work with synchronous plugins. If the processor\n     * contains any asynchronous plugins it will throw an error.\n     *\n     * This is why this method is only for debug purpose,\n     * you should always use {@link LazyResult#then}.\n     *\n     * @type {Root}\n     * @see Result#root\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.sync().root;\n    }\n    /**\n     * Processes input CSS through synchronous plugins\n     * and returns {@link Result#messages}.\n     *\n     * This property will only work with synchronous plugins. If the processor\n     * contains any asynchronous plugins it will throw an error.\n     *\n     * This is why this method is only for debug purpose,\n     * you should always use {@link LazyResult#then}.\n     *\n     * @type {Message[]}\n     * @see Result#messages\n     */\n\n  }, {\n    key: \"messages\",\n    get: function get() {\n      return this.sync().messages;\n    }\n  }]);\n\n  return LazyResult;\n}();\n\nvar _default = LazyResult;\n/**\n * @callback onFulfilled\n * @param {Result} result\n */\n\n/**\n * @callback onRejected\n * @param {Error} error\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _lazyResult = _interopRequireDefault(require(\"./lazy-result\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Contains plugins to process CSS. Create one `Processor` instance,\n * initialize its plugins, and then use that instance on numerous CSS files.\n *\n * @example\n * const processor = postcss([autoprefixer, precss])\n * processor.process(css1).then(result => console.log(result.css))\n * processor.process(css2).then(result => console.log(result.css))\n */\nvar Processor = /*#__PURE__*/function () {\n  /**\n   * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n   *        See {@link Processor#use} for plugin format.\n   */\n  function Processor(plugins) {\n    if (plugins === void 0) {\n      plugins = [];\n    }\n\n    /**\n     * Current PostCSS version.\n     *\n     * @type {string}\n     *\n     * @example\n     * if (result.processor.version.split('.')[0] !== '6') {\n     *   throw new Error('This plugin works only with PostCSS 6')\n     * }\n     */\n    this.version = '7.0.39';\n    /**\n     * Plugins added to this processor.\n     *\n     * @type {pluginFunction[]}\n     *\n     * @example\n     * const processor = postcss([autoprefixer, precss])\n     * processor.plugins.length //=> 2\n     */\n\n    this.plugins = this.normalize(plugins);\n  }\n  /**\n   * Adds a plugin to be used as a CSS processor.\n   *\n   * PostCSS plugin can be in 4 formats:\n   * * A plugin created by {@link postcss.plugin} method.\n   * * A function. PostCSS will pass the function a @{link Root}\n   *   as the first argument and current {@link Result} instance\n   *   as the second.\n   * * An object with a `postcss` method. PostCSS will use that method\n   *   as described in #2.\n   * * Another {@link Processor} instance. PostCSS will copy plugins\n   *   from that instance into this one.\n   *\n   * Plugins can also be added by passing them as arguments when creating\n   * a `postcss` instance (see [`postcss(plugins)`]).\n   *\n   * Asynchronous plugins should return a `Promise` instance.\n   *\n   * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin\n   *                                                 or {@link Processor}\n   *                                                 with plugins.\n   *\n   * @example\n   * const processor = postcss()\n   *   .use(autoprefixer)\n   *   .use(precss)\n   *\n   * @return {Processes} Current processor to make methods chain.\n   */\n\n\n  var _proto = Processor.prototype;\n\n  _proto.use = function use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]));\n    return this;\n  }\n  /**\n   * Parses source CSS and returns a {@link LazyResult} Promise proxy.\n   * Because some plugins can be asynchronous it doesn’t make\n   * any transformations. Transformations will be applied\n   * in the {@link LazyResult} methods.\n   *\n   * @param {string|toString|Result} css String with input CSS or any object\n   *                                     with a `toString()` method,\n   *                                     like a Buffer. Optionally, send\n   *                                     a {@link Result} instance\n   *                                     and the processor will take\n   *                                     the {@link Root} from it.\n   * @param {processOptions} [opts]      Options.\n   *\n   * @return {LazyResult} Promise proxy.\n   *\n   * @example\n   * processor.process(css, { from: 'a.css', to: 'a.out.css' })\n   *   .then(result => {\n   *      console.log(result.css)\n   *   })\n   */\n  ;\n\n  _proto.process = function (_process) {\n    function process(_x) {\n      return _process.apply(this, arguments);\n    }\n\n    process.toString = function () {\n      return _process.toString();\n    };\n\n    return process;\n  }(function (css, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (this.plugins.length === 0 && opts.parser === opts.stringifier) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn('You did not set any plugins, parser, or stringifier. ' + 'Right now, PostCSS does nothing. Pick plugins for your case ' + 'on https://www.postcss.parts/ and use them in postcss.config.js.');\n        }\n      }\n    }\n\n    return new _lazyResult.default(this, css, opts);\n  });\n\n  _proto.normalize = function normalize(plugins) {\n    var normalized = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(plugins), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n\n      if (i.postcss === true) {\n        var plugin = i();\n        throw new Error('PostCSS plugin ' + plugin.postcssPlugin + ' requires PostCSS 8.\\n' + 'Migration guide for end-users:\\n' + 'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users');\n      }\n\n      if (i.postcss) i = i.postcss;\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === 'function') {\n        normalized.push(i);\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');\n        }\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        throw new Error('PostCSS plugin ' + i.postcssPlugin + ' requires PostCSS 8.\\n' + 'Migration guide for end-users:\\n' + 'https://github.com/postcss/postcss/wiki/PostCSS-8-for-end-users');\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin');\n      }\n    }\n\n    return normalized;\n  };\n\n  return Processor;\n}();\n\nvar _default = Processor;\n/**\n * @callback builder\n * @param {string} part          Part of generated CSS connected to this node.\n * @param {Node}   node          AST node.\n * @param {\"start\"|\"end\"} [type] Node’s part type.\n */\n\n/**\n * @callback parser\n *\n * @param {string|toString} css   String with input CSS or any object\n *                                with toString() method, like a Buffer.\n * @param {processOptions} [opts] Options with only `from` and `map` keys.\n *\n * @return {Root} PostCSS AST\n */\n\n/**\n * @callback stringifier\n *\n * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n * @param {builder} builder Function to concatenate CSS from node’s parts\n *                          or generate string and source map.\n *\n * @return {void}\n */\n\n/**\n * @typedef {object} syntax\n * @property {parser} parse          Function to generate AST by string.\n * @property {stringifier} stringify Function to generate string by AST.\n */\n\n/**\n * @typedef {object} toString\n * @property {function} toString\n */\n\n/**\n * @callback pluginFunction\n * @param {Root} root     Parsed input CSS.\n * @param {Result} result Result to set warnings or check other plugins.\n */\n\n/**\n * @typedef {object} Plugin\n * @property {function} postcss PostCSS plugin function.\n */\n\n/**\n * @typedef {object} processOptions\n * @property {string} from             The path of the CSS source file.\n *                                     You should always set `from`,\n *                                     because it is used in source map\n *                                     generation and syntax error messages.\n * @property {string} to               The path where you’ll put the output\n *                                     CSS file. You should always set `to`\n *                                     to generate correct source maps.\n * @property {parser} parser           Function to generate AST by string.\n * @property {stringifier} stringifier Class to generate string by AST.\n * @property {syntax} syntax           Object with `parse` and `stringify`.\n * @property {object} map              Source map options.\n * @property {boolean} map.inline                    Does source map should\n *                                                   be embedded in the output\n *                                                   CSS as a base64-encoded\n *                                                   comment.\n * @property {string|object|false|function} map.prev Source map content\n *                                                   from a previous\n *                                                   processing step\n *                                                   (for example, Sass).\n *                                                   PostCSS will try to find\n *                                                   previous map automatically,\n *                                                   so you could disable it by\n *                                                   `false` value.\n * @property {boolean} map.sourcesContent            Does PostCSS should set\n *                                                   the origin content to map.\n * @property {string|false} map.annotation           Does PostCSS should set\n *                                                   annotation comment to map.\n * @property {string} map.from                       Override `from` in map’s\n *                                                   sources`.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Contains helpers for working with vendor prefixes.\n *\n * @example\n * const vendor = postcss.vendor\n *\n * @namespace vendor\n */\nvar vendor = {\n  /**\n   * Returns the vendor prefix extracted from an input string.\n   *\n   * @param {string} prop String with or without vendor prefix.\n   *\n   * @return {string} vendor prefix or empty string\n   *\n   * @example\n   * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\n   * postcss.vendor.prefix('tab-size')      //=> ''\n   */\n  prefix: function prefix(prop) {\n    var match = prop.match(/^(-\\w+-)/);\n\n    if (match) {\n      return match[0];\n    }\n\n    return '';\n  },\n\n  /**\n     * Returns the input string stripped of its vendor prefix.\n     *\n     * @param {string} prop String with or without vendor prefix.\n     *\n     * @return {string} String name without vendor prefixes.\n     *\n     * @example\n     * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n     */\n  unprefixed: function unprefixed(prop) {\n    return prop.replace(/^-\\w+-/, '');\n  }\n};\nvar _default = vendor;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci5lczYiXSwibmFtZXMiOlsidmVuZG9yIiwicHJlZml4IiwicHJvcCIsIm1hdGNoIiwidW5wcmVmaXhlZCIsInJlcGxhY2UiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7O0FBUUEsSUFBSUEsTUFBTSxHQUFHO0FBRVg7Ozs7Ozs7Ozs7O0FBV0FDLEVBQUFBLE1BYlcsa0JBYUhDLElBYkcsRUFhRztBQUNaLFFBQUlDLEtBQUssR0FBR0QsSUFBSSxDQUFDQyxLQUFMLENBQVcsVUFBWCxDQUFaOztBQUNBLFFBQUlBLEtBQUosRUFBVztBQUNULGFBQU9BLEtBQUssQ0FBQyxDQUFELENBQVo7QUFDRDs7QUFFRCxXQUFPLEVBQVA7QUFDRCxHQXBCVTs7QUFzQlg7Ozs7Ozs7Ozs7QUFVQUMsRUFBQUEsVUFoQ1csc0JBZ0NDRixJQWhDRCxFQWdDTztBQUNoQixXQUFPQSxJQUFJLENBQUNHLE9BQUwsQ0FBYSxRQUFiLEVBQXVCLEVBQXZCLENBQVA7QUFDRDtBQWxDVSxDQUFiO2VBc0NlTCxNIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb250YWlucyBoZWxwZXJzIGZvciB3b3JraW5nIHdpdGggdmVuZG9yIHByZWZpeGVzLlxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCB2ZW5kb3IgPSBwb3N0Y3NzLnZlbmRvclxuICpcbiAqIEBuYW1lc3BhY2UgdmVuZG9yXG4gKi9cbmxldCB2ZW5kb3IgPSB7XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHZlbmRvciBwcmVmaXggZXh0cmFjdGVkIGZyb20gYW4gaW5wdXQgc3RyaW5nLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvcCBTdHJpbmcgd2l0aCBvciB3aXRob3V0IHZlbmRvciBwcmVmaXguXG4gICAqXG4gICAqIEByZXR1cm4ge3N0cmluZ30gdmVuZG9yIHByZWZpeCBvciBlbXB0eSBzdHJpbmdcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogcG9zdGNzcy52ZW5kb3IucHJlZml4KCctbW96LXRhYi1zaXplJykgLy89PiAnLW1vei0nXG4gICAqIHBvc3Rjc3MudmVuZG9yLnByZWZpeCgndGFiLXNpemUnKSAgICAgIC8vPT4gJydcbiAgICovXG4gIHByZWZpeCAocHJvcCkge1xuICAgIGxldCBtYXRjaCA9IHByb3AubWF0Y2goL14oLVxcdystKS8pXG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICByZXR1cm4gbWF0Y2hbMF1cbiAgICB9XG5cbiAgICByZXR1cm4gJydcbiAgfSxcblxuICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBpbnB1dCBzdHJpbmcgc3RyaXBwZWQgb2YgaXRzIHZlbmRvciBwcmVmaXguXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvcCBTdHJpbmcgd2l0aCBvciB3aXRob3V0IHZlbmRvciBwcmVmaXguXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IFN0cmluZyBuYW1lIHdpdGhvdXQgdmVuZG9yIHByZWZpeGVzLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBwb3N0Y3NzLnZlbmRvci51bnByZWZpeGVkKCctbW96LXRhYi1zaXplJykgLy89PiAndGFiLXNpemUnXG4gICAgICovXG4gIHVucHJlZml4ZWQgKHByb3ApIHtcbiAgICByZXR1cm4gcHJvcC5yZXBsYWNlKC9eLVxcdystLywgJycpXG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCB2ZW5kb3JcbiJdLCJmaWxlIjoidmVuZG9yLmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _declaration = _interopRequireDefault(require(\"./declaration\"));\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify\"));\n\nvar _comment = _interopRequireDefault(require(\"./comment\"));\n\nvar _atRule = _interopRequireDefault(require(\"./at-rule\"));\n\nvar _vendor = _interopRequireDefault(require(\"./vendor\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _list = _interopRequireDefault(require(\"./list\"));\n\nvar _rule = _interopRequireDefault(require(\"./rule\"));\n\nvar _root = _interopRequireDefault(require(\"./root\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Create a new {@link Processor} instance that will apply `plugins`\n * as CSS processors.\n *\n * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n *        See {@link Processor#use} for plugin format.\n *\n * @return {Processor} Processor to process multiple CSS.\n *\n * @example\n * import postcss from 'postcss'\n *\n * postcss(plugins).process(css, { from, to }).then(result => {\n *   console.log(result.css)\n * })\n *\n * @namespace postcss\n */\nfunction postcss() {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0];\n  }\n\n  return new _processor.default(plugins);\n}\n/**\n * Creates a PostCSS plugin with a standard API.\n *\n * The newly-wrapped function will provide both the name and PostCSS\n * version of the plugin.\n *\n * ```js\n * const processor = postcss([replace])\n * processor.plugins[0].postcssPlugin  //=> 'postcss-replace'\n * processor.plugins[0].postcssVersion //=> '6.0.0'\n * ```\n *\n * The plugin function receives 2 arguments: {@link Root}\n * and {@link Result} instance. The function should mutate the provided\n * `Root` node. Alternatively, you can create a new `Root` node\n * and override the `result.root` property.\n *\n * ```js\n * const cleaner = postcss.plugin('postcss-cleaner', () => {\n *   return (root, result) => {\n *     result.root = postcss.root()\n *   }\n * })\n * ```\n *\n * As a convenience, plugins also expose a `process` method so that you can use\n * them as standalone tools.\n *\n * ```js\n * cleaner.process(css, processOpts, pluginOpts)\n * // This is equivalent to:\n * postcss([ cleaner(pluginOpts) ]).process(css, processOpts)\n * ```\n *\n * Asynchronous plugins should return a `Promise` instance.\n *\n * ```js\n * postcss.plugin('postcss-import', () => {\n *   return (root, result) => {\n *     return new Promise( (resolve, reject) => {\n *       fs.readFile('base.css', (base) => {\n *         root.prepend(base)\n *         resolve()\n *       })\n *     })\n *   }\n * })\n * ```\n *\n * Add warnings using the {@link Node#warn} method.\n * Send data to other plugins using the {@link Result#messages} array.\n *\n * ```js\n * postcss.plugin('postcss-caniuse-test', () => {\n *   return (root, result) => {\n *     root.walkDecls(decl => {\n *       if (!caniuse.support(decl.prop)) {\n *         decl.warn(result, 'Some browsers do not support ' + decl.prop)\n *       }\n *     })\n *   }\n * })\n * ```\n *\n * @param {string} name          PostCSS plugin name. Same as in `name`\n *                               property in `package.json`. It will be saved\n *                               in `plugin.postcssPlugin` property.\n * @param {function} initializer Will receive plugin options\n *                               and should return {@link pluginFunction}\n *\n * @return {Plugin} PostCSS plugin.\n */\n\n\npostcss.plugin = function plugin(name, initializer) {\n  function creator() {\n    var transformer = initializer.apply(void 0, arguments);\n    transformer.postcssPlugin = name;\n    transformer.postcssVersion = new _processor.default().version;\n    return transformer;\n  }\n\n  var cache;\n  Object.defineProperty(creator, 'postcss', {\n    get: function get() {\n      if (!cache) cache = creator();\n      return cache;\n    }\n  });\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts);\n  };\n\n  return creator;\n};\n/**\n * Default function to convert a node tree into a CSS string.\n *\n * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n * @param {builder} builder Function to concatenate CSS from node’s parts\n *                          or generate string and source map.\n *\n * @return {void}\n *\n * @function\n */\n\n\npostcss.stringify = _stringify.default;\n/**\n * Parses source css and returns a new {@link Root} node,\n * which contains the source CSS nodes.\n *\n * @param {string|toString} css   String with input CSS or any object\n *                                with toString() method, like a Buffer\n * @param {processOptions} [opts] Options with only `from` and `map` keys.\n *\n * @return {Root} PostCSS AST.\n *\n * @example\n * // Simple CSS concatenation with source map support\n * const root1 = postcss.parse(css1, { from: file1 })\n * const root2 = postcss.parse(css2, { from: file2 })\n * root1.append(root2).toResult().css\n *\n * @function\n */\n\npostcss.parse = _parse.default;\n/**\n * Contains the {@link vendor} module.\n *\n * @type {vendor}\n *\n * @example\n * postcss.vendor.unprefixed('-moz-tab') //=> ['tab']\n */\n\npostcss.vendor = _vendor.default;\n/**\n * Contains the {@link list} module.\n *\n * @member {list}\n *\n * @example\n * postcss.list.space('5px calc(10% + 5px)') //=> ['5px', 'calc(10% + 5px)']\n */\n\npostcss.list = _list.default;\n/**\n * Creates a new {@link Comment} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Comment} New comment node\n *\n * @example\n * postcss.comment({ text: 'test' })\n */\n\npostcss.comment = function (defaults) {\n  return new _comment.default(defaults);\n};\n/**\n * Creates a new {@link AtRule} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {AtRule} new at-rule node\n *\n * @example\n * postcss.atRule({ name: 'charset' }).toString() //=> \"@charset\"\n */\n\n\npostcss.atRule = function (defaults) {\n  return new _atRule.default(defaults);\n};\n/**\n * Creates a new {@link Declaration} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Declaration} new declaration node\n *\n * @example\n * postcss.decl({ prop: 'color', value: 'red' }).toString() //=> \"color: red\"\n */\n\n\npostcss.decl = function (defaults) {\n  return new _declaration.default(defaults);\n};\n/**\n * Creates a new {@link Rule} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Rule} new rule node\n *\n * @example\n * postcss.rule({ selector: 'a' }).toString() //=> \"a {\\n}\"\n */\n\n\npostcss.rule = function (defaults) {\n  return new _rule.default(defaults);\n};\n/**\n * Creates a new {@link Root} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Root} new root node.\n *\n * @example\n * postcss.root({ after: '\\n' }).toString() //=> \"\\n\"\n */\n\n\npostcss.root = function (defaults) {\n  return new _root.default(defaults);\n};\n\nvar _default = postcss;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import \"./adminSidebar.scss\";\nimport { $ } from \"@src/common.js\";\nimport { ael, qs } from \"../../../constants.js\";\nimport { document } from \"postcss\";\n\nexport default class AdminSidebar {\n  constructor(sidebar) {\n    if (!sidebar) return false;\n\n    this.sidebar = sidebar;\n    this.sidebar[ael](\"click\", this.handleClick.bind(this));\n\n    this.burger = $(\".burger\").first();\n    this.burger[ael](\"click\", this.handleClick.bind(this));\n  }\n\n  handleClick({ target }) {\n    if (target === this.burger) {\n      this.sidebar.classList.toggle(\"show\");\n    } else {\n      this.openUl(target);\n    }\n  }\n\n  openUl(target) {\n    const li = target.closest(\"li\");\n    if (!li) return;\n    if (!li?.classList?.contains(\"open\")) {\n      this.closeUls();\n    }\n    li.classList.toggle(\"open\");\n    this.rotateArrow(li);\n  }\n\n  closeUls() {\n    const opened = $(this.sidebar).find(\".open\");\n    if (opened) {\n      const arrow = opened[qs](\".rotate\");\n      arrow.classList.toggle(\"rotate\");\n      opened.classList.toggle(\"open\");\n    }\n  }\n\n  rotateArrow(li) {\n    const arrow = $(li).find(\".arrow\");\n    if (!arrow) return;\n    arrow.classList.toggle(\"rotate\");\n  }\n}\n","import { $ } from \"../common.js\";\nimport { qs } from \"../constants\";\nimport \"../components/footer/footer.scss\";\nimport \"../components/popup.scss\";\nimport \"./admin.scss\";\n\nimport \"./cache/Cache.js\";\nimport \"../components/accordion/accordion.js\";\nimport \"../components/date/date.js\";\n\nimport \"./sync1c/sync1c.js\";\nimport \"./Planning/planning.js\";\nimport \"./Settings/settings.js\";\nimport \"./Videoinstructions/videoinstructions.js\";\nimport \"./Category/Category.js\";\n\nimport AdminHeader from \"../components/header/header-adm.js\";\nimport Search from \"../components/search/search.js\";\n// import '../components/table/Table.js'\nimport adminScroll from \"@components/scroll/adminScroll.js\";\nimport Navigation from \"./components/Navigation.js\";\n\nimport Pages from \"@src/Admin/Pages/pages.js\";\nimport Users from \"@src/Admin/User/users.js\";\nimport User from \"@src/Admin/User/user.js\";\nimport AdminSidebar from \"@src/Admin/components/AdminSidebar/AdminSidebar.js\";\nimport Cache from \"./cache/Cache.js\";\n// import Promotion from \"@src/Promotions/Promotion.js\";\n\n$(document).ready(async function () {\n  document.body.classList.remove(\"preload\");\n\n  const admin = window.location.pathname.includes(\"adminsc\");\n  if (!admin) return false;\n\n  const table = $(\"[custom-table]\").first();\n  if (table) {\n    const { default: Tables } = await import(\"../components/table/Tables.js\");\n    new Tables();\n  }\n  new Cache();\n  new Search(true);\n  new Navigation();\n  new AdminHeader();\n  adminScroll();\n  const adminSidebar = $(\".sidebar\").first();\n  new AdminSidebar(adminSidebar);\n\n  if (window.location.pathname === \"/adminsc/pages\") {\n    new Pages();\n  } else if (window.location.pathname === \"/adminsc/user\") {\n    // new Users\n  } else if (window.location.pathname.startsWith(\"/adminsc/user/edit\")) {\n    // new User\n  } else if (window.location.href.includes(\"/test\")) {\n    const { default: Test } = await import(\"./Test/index.js\");\n  } else if (window.location.pathname === \"/adminsc\") {\n    const { default: MyChart } = await import(\"./chartjs/chartjs.js\");\n  } else if (window.location.pathname === \"/adminsc/report/filter\") {\n    const { default: ProductFilter } = await import(\n      \"./ProductFilter/ProductFilter.js\"\n    );\n    new ProductFilter($(\".products-filter\").first());\n  }\n  // else if (window.location.pathname.startsWith('/adminsc/test/do')){\n  //    new TestDo($('.test-do').first())\n  // }\n  const promotion = $(\".promotion-edit\").first();\n  if (promotion) {\n    const { default: Promotion } = await import(\"@src/Promotions/Promotion.js\");\n    new Promotion();\n  }\n\n  if (document[qs](\".modal\")) {\n    const { default: Modal } = await import(\"../components/Modal/modal.js\");\n    new Modal();\n  }\n\n  const cardPanel = document[qs](`.card-panel`);\n  if (cardPanel) {\n    const { default: Card_panel } = await import(\n      \"@components/card_panel/card_panel\"\n    );\n    new Card_panel();\n  }\n\n  const product = document[qs](`.item-wrap[data-model='product']`);\n  if (product) {\n    const { default: Product } = await import(\"./Product/Product.js\");\n    new Product();\n  }\n\n  if (document[qs](\".order-edit\")) {\n    const { default: Order } = await import(\"./Order/order.js\");\n    new Order();\n  }\n  const catalogItem = document[qs](\".item-wrap\");\n  if (catalogItem) {\n    const { default: CatalogItem } = await import(\n      \"./components/catalog-item/catalog-item.js\"\n    );\n    new CatalogItem(catalogItem);\n  }\n  const category = document[qs](`.item-wrap[data-model='category']`);\n  if (category) {\n    const { default: Category } = await import(\"./Category/Category.js\");\n    new Category(category);\n  }\n});\n"],"file":"assets/admin-Bc-VRHrQ.js"}