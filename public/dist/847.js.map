{"version":3,"file":"847.js","mappings":"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","sources":["webpack://my-webpack-project/./public/src/Admin/Product/units.js","webpack://my-webpack-project/./public/src/Admin/Product/UnitTable.js","webpack://my-webpack-project/./public/src/Admin/Product/Values.js","webpack://my-webpack-project/./public/src/Admin/Product/Fields.js","webpack://my-webpack-project/./public/src/Admin/Product/product.js"],"sourcesContent":["import './units.scss'\r\nimport {$} from '../../common'\r\nimport UnitTable from './UnitTable'\r\n\r\n  let $units = $('.units').first();\r\n  if ($units) {\r\n    // $(`[data-tab='3']`).first().classList.toggle('show');\r\n    // $(`[data-tab='1']`).first().classList.toggle('show');\r\n\r\n    new UnitTable('.units')\r\n\r\n}\r\n","import {$, createElement, post} from '../../common'\r\nimport WDSSelect from \"../../components/select/WDSSelect\";\r\nimport SelectNew from \"../../components/select/SelectNew\";\r\nimport {it, qa, qs} from '../../constants'\r\n\r\n\r\nexport default class UnitTable {\r\n    constructor(tableClass) {\r\n        this.$table = $(tableClass).first();\r\n        if (!this.$table) return;\r\n\r\n        this.product1sId = $(`[data-field='1s_id']`).first().innerText;\r\n\r\n        this.$baseUnit = $(`[data-field='base_unit']`).first();\r\n        // this.baseUnitId = this.$baseUnit.options[this.$baseUnit.selectedIndex].value;\r\n\r\n        this.$addUnit = $('.add-unit').first();\r\n        this.$rows = $('.rows').first();\r\n        // this.$selector = $(this.$rows).find('[select-new]');\r\n        this.$emtyRow = $(this.$rows).find('.none');\r\n\r\n        this.$addUnit.onclick = this.createRow.bind(this);\r\n        this.$rows.onchange = this.handleChange.bind(this);\r\n        this.$rows.onkeyup = this.handleKeyUp.bind(this);\r\n        this.$rows.onclick = this.clickRow.bind(this);\r\n        this.$rows.addEventListener('customSelect.changed', this.unitChanged.bind(this));\r\n\r\n        this.initSelects();\r\n        setTimeout(this.deleteSelected.bind(this), 800)\r\n    }\r\n\r\n    initSelects() {\r\n        this.$rows.querySelectorAll('[select-new]').forEach((s) => {new SelectNew(s)})\r\n    }\r\n\r\n    deleteSelected() {\r\n        let selected = this.$rows.querySelectorAll('.selected');\r\n        selected = Array.from(selected).map((s) => {\r\n            if (+s.dataset.value) return s.dataset.value;\r\n        });\r\n        this.$table.querySelectorAll('[custom-select]').forEach(\r\n            function (select) {\r\n                select.querySelectorAll('li').forEach(function (o) {\r\n                    if (selected.includes(o.dataset.value)) {\r\n                        o.remove()\r\n                    }\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    createSelect(el) {\r\n        const select = (new createElement()).tag('select').attr('new-select').className('name').get()\r\n\r\n        const lis = [...el[qa]('li')].map((li) => {\r\n            const op = (new createElement()).tag('option').attr('value', li.dataset.value).text(li[it]).get()\r\n            select.append(op)\r\n        })\r\n        return select\r\n    }\r\n\r\n    createRow() {\r\n        let baseUnitText = this.$baseUnit.selectedOptions[0].innerText;\r\n\r\n        let row = (new createElement()).tag('div').attr('class', 'row').get();\r\n        const select = this.createSelect(this.$emtyRow)\r\n\r\n        let multiplier = (new createElement()).attr('type', 'number').tag('input').attr('value', 10).className('multiplier').get();\r\n        let baseUnit = (new createElement()).tag('div').attr('class', 'base-unit').text(baseUnitText).get();\r\n        let minUnit = (new createElement()).tag('div').className('shippable').get();\r\n        let minUnitInput = (new createElement()).tag('input').attr('type', 'checkbox').get();\r\n        let del = (new createElement()).tag('div').attr('class', 'del').text('X').get();\r\n\r\n        row.append(select);\r\n        row.append(multiplier);\r\n        row.append(baseUnit);\r\n        minUnit.append(minUnitInput);\r\n        row.append(minUnit);\r\n        row.append(del);\r\n\r\n        new SelectNew(select);\r\n\r\n        this.$rows.append(row);\r\n        // this.deleteSelected()\r\n    }\r\n\r\n    async unitChanged(obj) {\r\n        let data = this.dto(obj.target.closest('.row'));\r\n        data.morphed.new_id = obj.detail.next.value;\r\n        data.morphed.old_id = obj.detail.prev.value;\r\n        if (obj.detail.next.value)\r\n            this.deleteSelectedUnitFromSelects(obj.detail.next.value);\r\n\r\n        if (obj.detail.prev.value)\r\n            this.addDeletedUnitToSelects(obj.detail.prev);\r\n\r\n        let res = await post('/adminsc/product/changeUnit', data)\r\n    }\r\n\r\n    deleteSelectedUnitFromSelects(value) {\r\n        this.$table.querySelectorAll('[custom-select]').forEach(\r\n            function (select) {\r\n                let options = select.querySelectorAll('li');\r\n                options.forEach(function (o) {\r\n                    if (o.dataset.value === value) {\r\n                        o.remove()\r\n                    }\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    addDeletedUnitToSelects() {\r\n        this.$table.querySelectorAll('[custom-select]').forEach(\r\n            function (select) {\r\n                let options = select.querySelectorAll('li');\r\n                options.forEach(function (o) {\r\n                    if (o.dataset.value === value) {\r\n                        o.remove()\r\n                    }\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    async clickRow({target}) {\r\n        if (target.classList.contains('del')) {\r\n            let row = target.closest('.row');\r\n            let data = this.dto(row);\r\n            let res = await post('/adminsc/product/deleteUnit', data);\r\n            if (res?.arr?.ok) {\r\n                row.remove()\r\n            }\r\n        }\r\n    }\r\n\r\n    handleKeyUp(e) {\r\n        let multiplier = +e.target.value;\r\n        if (!/\\d+/.test(multiplier)) {\r\n            return\r\n        }\r\n        this.update(e, this)\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.update(e, this)\r\n    }\r\n\r\n    async update(e, self) {\r\n        let row = e.target.closest('.row');\r\n        let chosenUnit = +$(row).find('[select-new]').dataset.value;\r\n        if (!chosenUnit) return false;\r\n        let data = self.dto(row);\r\n        data.morphed.new_id = data.morphed.old_id;\r\n\r\n        let res = await post('/adminsc/product/changeUnit', data);\r\n\r\n    }\r\n\r\n    dto(row) {\r\n        let pivot = {\r\n            'product_id': this.product1sId,\r\n            'multiplier': +$(row).find(`.multiplier`).value ?? 0,\r\n            'is_shippable': $(row).find(`.shippable input`).checked ? 1 : null,\r\n        };\r\n        let morphed = {\r\n            new_id: 0,\r\n            old_id: +this.getUnitId(row),\r\n            detach: 0\r\n        };\r\n        return {\r\n            baseUnitId: this.getBaseUnitId(),\r\n            pivot, morphed\r\n        }\r\n    }\r\n\r\n    getBaseUnitId() {\r\n        return +this.$baseUnit.options[this.$baseUnit.selectedIndex].value\r\n    }\r\n\r\n    getUnitId(row) {\r\n        let classSelected = row.querySelector('[select-new]');\r\n        return classSelected.dataset.value ?? 0\r\n    }\r\n\r\n}","import './values.scss'\r\nimport {$, post} from '../../common'\r\nimport SelectNew from \"../../components/select/SelectNew\";\r\n\r\nexport default class Values {\r\n  constructor($product) {\r\n    this.$product = $product;\r\n    this.$values = $($product).find('.values');\r\n    this.values = this.$values.querySelectorAll('.value');\r\n    // this.dto = this.dto();\r\n    this.$values.addEventListener('customSelect.changed', this.selectChanged.bind(this));\r\n    this.values.forEach((value) => {\r\n      new SelectNew(value)\r\n    })\r\n  }\r\n\r\n  dto() {\r\n    return {\r\n      product_id: this.$product.dataset.id,\r\n      morphed: {\r\n        old_id: 0,\r\n        new_id: 0\r\n      }\r\n    }\r\n  }\r\n\r\n  async selectChanged(obj) {\r\n    let data = this.dto();\r\n    data.morphed.old_id = obj.detail.prev.value;\r\n    data.morphed.new_id = obj.detail.next.value;\r\n    let res = await post(`/adminsc/product/changeVal`, data)\r\n  }\r\n}\r\n\r\n","import SelectNew from \"../../components/select/SelectNew\";\r\nimport {$, post} from \"../../common\";\r\n\r\nexport class Fields {\r\n  constructor($product) {\r\n    this.$product = $product;\r\n    this.$fields = $('.item_content').first();\r\n    this.$category_id = $(`[data-field=\"category_id\"]`).first();\r\n    this.$promotions = $(`[data-field=\"promotions\"]`).first();\r\n    this.$base_unit = $(`[data-field=\"base_unit\"]`).first();\r\n    this.$manufacturer_id = $(`[data-field=\"manufacturer_id\"]`).first();\r\n    this.$printName = $(`[data-field='print_name']`).first();\r\n    this.$printName.addEventListener('catalogItem.changed', this.changePrintName.bind(this))\r\n    this.$productUrl= $(`[data-field='slug']`).first();\r\n    this.setup()\r\n  }\r\n\r\n  setup() {\r\n    this.$fields.addEventListener('customSelect.changed', this.changeFields.bind(this));\r\n    new SelectNew(this.$category_id);\r\n    new SelectNew(this.$promotions);\r\n    new SelectNew(this.$base_unit);\r\n    new SelectNew(this.$manufacturer_id);\r\n  }\r\n\r\n  changePrintName(item) {\r\n    if (item.detail) {\r\n      let $url = this.$productUrl.querySelector('a')\r\n      let slug = item.detail?.res?.arr?.model.slug\r\n      $url.setAttribute('href',`/product/${slug}`)\r\n      $url.text = slug\r\n    }\r\n\r\n  }\r\n\r\n  async checkBoxChanged({target}) {\r\n    let data = this.dto(this);\r\n    data[target.dataset.field] = +target.checked;\r\n    let res = await post('/adminsc/product/updateOrCreate', data)\r\n  }\r\n\r\n  async changeFields(obj) {\r\n    let field = obj.detail.target.dataset.field;\r\n    if (!field) return;\r\n    let data = this.dto(obj);\r\n    data[field] = obj.detail.next.value;\r\n    let res = await post('/adminsc/product/updateOrCreate', data)\r\n  }\r\n\r\n  dto(obj) {\r\n    return {\r\n      id: this.$product.dataset.id,\r\n    }\r\n  }\r\n}","import './product.scss'\r\nimport './units'\r\nimport './Values'\r\nimport {$, objAndFiles2FormData, post} from '../../common'\r\nimport {d, qs, qa, ael} from '../../constants'\r\n// import shippableTable from \"../../share/shippable/shippableUnitsTable\";\r\n\r\n\r\nimport {Fields} from \"./Fields\";\r\n\r\nimport Values from \"./Values\";\r\n\r\nimport Dnd from \"../../components/dnd/dnd\";\r\n\r\nexport default function product() {\r\n  const product = document[qs](`.item-wrap[data-model='product']`)\r\n  if (!product) return false;\r\n\r\n  new Values(product);\r\n\r\n  new Fields(product);\r\n\r\n  new Dnd($('.add-file')[0], addMainImage);\r\n}\r\n\r\nasync function setEqual({target}) {\r\n  let data = {\r\n    ['1s_id']: target.closest('.item_content').querySelector(`[data-field=\"1s_id\"]`).innerText,\r\n    'equal': +target.checked\r\n  };\r\n  let res = await post('/adminsc/product/Setbaseequalmainunit', data)\r\n}\r\n\r\nasync function addMainImage(files, target) {\r\n\r\n  const obj = {productId: target.closest('.item-wrap').dataset.id,};\r\n  // debugger\r\n  let data = objAndFiles2FormData(obj, files[0]);\r\n\r\n  let res = await post('/adminsc/product/attachMainImage', data);\r\n  let src = res?.arr[0];\r\n  if (src) {\r\n    let mainImage = target.closest('.dnd-container').querySelector('img');\r\n    mainImage.removeAttribute(\"src\");\r\n    mainImage.setAttribute(\"src\", src)\r\n  }\r\n}\r\n\r\n\r\n"],"names":["$","first","constructor","tableClass","this","$table","product1sId","innerText","$baseUnit","$addUnit","$rows","$emtyRow","find","onclick","createRow","bind","onchange","handleChange","onkeyup","handleKeyUp","clickRow","addEventListener","unitChanged","initSelects","setTimeout","deleteSelected","querySelectorAll","forEach","s","SelectNew","selected","Array","from","map","dataset","value","select","o","includes","remove","createSelect","el","createElement","tag","attr","className","get","qa","li","op","text","it","append","baseUnitText","selectedOptions","row","multiplier","baseUnit","minUnit","minUnitInput","del","obj","data","dto","target","closest","morphed","new_id","detail","next","old_id","prev","deleteSelectedUnitFromSelects","addDeletedUnitToSelects","post","classList","contains","res","arr","ok","e","test","update","self","pivot","checked","getUnitId","detach","baseUnitId","getBaseUnitId","options","selectedIndex","querySelector","Values","$product","$values","values","selectChanged","product_id","id","Fields","$fields","$category_id","$promotions","$base_unit","$manufacturer_id","$printName","changePrintName","$productUrl","setup","changeFields","item","$url","slug","model","setAttribute","checkBoxChanged","field","product","document","qs","Dnd","addMainImage","async","files","productId","objAndFiles2FormData","src","mainImage","removeAttribute"],"sourceRoot":""}