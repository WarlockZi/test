{"version":3,"file":"847.js","mappings":"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","sources":["webpack://my-webpack-project/./public/src/Admin/Product/units.js","webpack://my-webpack-project/./public/src/Admin/Product/UnitTable.js","webpack://my-webpack-project/./public/src/Admin/Product/Values.js","webpack://my-webpack-project/./public/src/Admin/Product/Fields.js","webpack://my-webpack-project/./public/src/Admin/Product/product.js"],"sourcesContent":["import './units.scss'\r\nimport {$} from '../../common'\r\nimport UnitTable from './UnitTable'\r\n\r\n  let $units = $('.units').first();\r\n  if ($units) {\r\n    // $(`[data-tab='3']`).first().classList.toggle('show');\r\n    // $(`[data-tab='1']`).first().classList.toggle('show');\r\n\r\n    new UnitTable('.units')\r\n\r\n}\r\n","import {$, createElement, post} from '../../common'\r\nimport SelectNew from \"../../components/select/SelectNew\";\r\nimport {it, qa} from '../../constants'\r\n\r\n\r\nexport default class UnitTable {\r\n   constructor(tableClass) {\r\n      this.$table = $(tableClass).first();\r\n      if (!this.$table) return;\r\n\r\n      this.product1sId = $(`[data-field='1s_id']`).first().innerText;\r\n\r\n      this.$baseUnit = $(`[data-field='base_unit']`).first();\r\n      // this.baseUnitId = this.$baseUnit.options[this.$baseUnit.selectedIndex].value;\r\n\r\n      this.$addUnit = $('.add-unit').first();\r\n      this.$rows = $('.rows').first();\r\n      // this.$selector = $(this.$rows).find('[select-new]');\r\n      this.$emtyRow = $(this.$rows).find('.none');\r\n\r\n      this.$addUnit.onclick = this.createRow.bind(this);\r\n      this.$rows.onchange = this.handleChange.bind(this);\r\n      this.$rows.onkeyup = this.handleKeyUp.bind(this);\r\n      this.$rows.onclick = this.clickRow.bind(this);\r\n      this.$rows.addEventListener('customSelect.changed', this.unitChanged.bind(this));\r\n\r\n      this.initSelects();\r\n      setTimeout(this.deleteSelected.bind(this), 800)\r\n   }\r\n\r\n   initSelects() {\r\n      this.$rows.querySelectorAll('[select-new]').forEach((s) => {\r\n         new SelectNew(s)\r\n      })\r\n   }\r\n\r\n   deleteSelected() {\r\n      let selected = this.$rows.querySelectorAll('.selected');\r\n      selected = Array.from(selected).map((s) => {\r\n         if (+s.dataset.value) return s.dataset.value;\r\n      });\r\n      this.$table.querySelectorAll('[custom-select]').forEach(\r\n         function (select) {\r\n            select.querySelectorAll('li').forEach(function (o) {\r\n               if (selected.includes(o.dataset.value)) {\r\n                  o.remove()\r\n               }\r\n            })\r\n         }\r\n      )\r\n   }\r\n\r\n   createSelect(el) {\r\n      const select = (new createElement()).tag('select').attr('new-select').className('name').get()\r\n\r\n      const lis = [...el[qa]('li')].map((li) => {\r\n         const op = (new createElement()).tag('option').attr('value', li.dataset.value).text(li[it]).get()\r\n         select.append(op)\r\n      })\r\n      return select\r\n   }\r\n\r\n   createRow() {\r\n      let baseUnitText = this.$baseUnit.selectedOptions[0].innerText;\r\n\r\n      let row = (new createElement()).tag('div').attr('class', 'row').get();\r\n      const select = this.createSelect(this.$emtyRow)\r\n\r\n      let multiplier = (new createElement()).attr('type', 'number').tag('input').attr('value', 10).className('multiplier').get();\r\n      let baseUnit = (new createElement()).tag('div').attr('class', 'base-unit').text(baseUnitText).get();\r\n      let minUnit = (new createElement()).tag('div').className('shippable').get();\r\n      let minUnitInput = (new createElement()).tag('input').attr('type', 'checkbox').get();\r\n      let del = (new createElement()).tag('div').attr('class', 'del').text('X').get();\r\n\r\n      row.append(select);\r\n      row.append(multiplier);\r\n      row.append(baseUnit);\r\n      minUnit.append(minUnitInput);\r\n      row.append(minUnit);\r\n      row.append(del);\r\n\r\n      new SelectNew(select);\r\n\r\n      this.$rows.append(row);\r\n      // this.deleteSelected()\r\n   }\r\n\r\n   async unitChanged(obj) {\r\n      let data = this.dto(obj.target.closest('.row'));\r\n      data.morphed.new_id = obj.detail.next.value;\r\n      data.morphed.old_id = obj.detail.prev.value;\r\n      if (obj.detail.next.value)\r\n         this.deleteSelectedUnitFromSelects(obj.detail.next.value);\r\n\r\n      if (obj.detail.prev.value)\r\n         this.addDeletedUnitToSelects(obj.detail.prev);\r\n\r\n      let res = await post('/adminsc/product/changeUnit', data)\r\n   }\r\n\r\n   deleteSelectedUnitFromSelects(value) {\r\n      this.$table.querySelectorAll('[custom-select]').forEach(\r\n         function (select) {\r\n            let options = select.querySelectorAll('li');\r\n            options.forEach(function (o) {\r\n               if (o.dataset.value === value) {\r\n                  o.remove()\r\n               }\r\n            })\r\n         }\r\n      )\r\n   }\r\n\r\n   addDeletedUnitToSelects() {\r\n      this.$table.querySelectorAll('[custom-select]').forEach(\r\n         function (select) {\r\n            let options = select.querySelectorAll('li');\r\n            options.forEach(function (o) {\r\n               if (o.dataset.value === value) {\r\n                  o.remove()\r\n               }\r\n            })\r\n         }\r\n      )\r\n   }\r\n\r\n   async clickRow({target}) {\r\n      if (target.classList.contains('del')) {\r\n         let row = target.closest('.row');\r\n         let data = this.dto(row);\r\n         let res = await post('/adminsc/product/deleteUnit', data);\r\n         if (res?.arr?.ok) {\r\n            row.remove()\r\n         }\r\n      }\r\n   }\r\n\r\n   handleKeyUp(e) {\r\n      let multiplier = +e.target.value;\r\n      if (!/\\d+/.test(multiplier)) {\r\n         return\r\n      }\r\n      this.update(e, this)\r\n   }\r\n\r\n   async handleChange({target}) {\r\n      if (target.type === 'checkbox' && target.hasAttribute('data-isbase')) {\r\n         const base_is_shippable = +target.checked\r\n         const product_1s_id = this.product1sId\r\n         const data = {product_1s_id,base_is_shippable}\r\n         const res = await post('/adminsc/product/changeBaseIsShippable', data);\r\n      } else {\r\n         this.update(target, this)\r\n      }\r\n   }\r\n\r\n   async update(target, self) {\r\n      let row = target.closest('.row');\r\n      let chosenUnit = +$(row).find('[select-new]').dataset.value;\r\n      if (!chosenUnit) return false;\r\n      let data = self.dto(row);\r\n      data.morphed.new_id = data.morphed.old_id;\r\n\r\n      const res = await post('/adminsc/product/changeUnit', data);\r\n\r\n   }\r\n\r\n   dto(row) {\r\n      let pivot = {\r\n         'product_id': this.product1sId,\r\n         'multiplier': +$(row).find(`.multiplier`).value ?? 0,\r\n         'is_shippable': $(row).find(`.shippable input`).checked ? 1 : null,\r\n      };\r\n      let morphed = {\r\n         new_id: 0,\r\n         old_id: +this.getUnitId(row),\r\n         detach: 0\r\n      };\r\n      return {\r\n         baseUnitId: this.getBaseUnitId(),\r\n         pivot, morphed\r\n      }\r\n   }\r\n\r\n   getBaseUnitId() {\r\n      return +this.$baseUnit.options[this.$baseUnit.selectedIndex].value\r\n   }\r\n\r\n   getUnitId(row) {\r\n      let classSelected = row.querySelector('[select-new]');\r\n      return classSelected.dataset.value ?? 0\r\n   }\r\n\r\n}","import './values.scss'\r\nimport {$, post} from '../../common'\r\nimport SelectNew from \"../../components/select/SelectNew\";\r\n\r\nexport default class Values {\r\n  constructor($product) {\r\n    this.$product = $product;\r\n    this.$values = $($product).find('.values');\r\n    this.values = this.$values.querySelectorAll('.value');\r\n    // this.dto = this.dto();\r\n    this.$values.addEventListener('customSelect.changed', this.selectChanged.bind(this));\r\n    this.values.forEach((value) => {\r\n      new SelectNew(value)\r\n    })\r\n  }\r\n\r\n  dto() {\r\n    return {\r\n      product_id: this.$product.dataset.id,\r\n      morphed: {\r\n        old_id: 0,\r\n        new_id: 0\r\n      }\r\n    }\r\n  }\r\n\r\n  async selectChanged(obj) {\r\n    let data = this.dto();\r\n    data.morphed.old_id = obj.detail.prev.value;\r\n    data.morphed.new_id = obj.detail.next.value;\r\n    let res = await post(`/adminsc/product/changeVal`, data)\r\n  }\r\n}\r\n\r\n","import SelectNew from \"../../components/select/SelectNew\";\r\nimport {$, post} from \"../../common\";\r\n\r\nexport class Fields {\r\n  constructor($product) {\r\n    this.$product = $product;\r\n    this.$fields = $('.item_content').first();\r\n    this.$category_id = $(`[data-field=\"category_id\"]`).first();\r\n    this.$promotions = $(`[data-field=\"promotions\"]`).first();\r\n    this.$base_unit = $(`[data-field=\"base_unit\"]`).first();\r\n    this.$manufacturer_id = $(`[data-field=\"manufacturer_id\"]`).first();\r\n    this.$printName = $(`[data-field='print_name']`).first();\r\n    this.$printName.addEventListener('catalogItem.changed', this.changePrintName.bind(this))\r\n    this.$productUrl= $(`[data-field='slug']`).first();\r\n    this.setup()\r\n  }\r\n\r\n  setup() {\r\n    this.$fields.addEventListener('customSelect.changed', this.changeFields.bind(this));\r\n    new SelectNew(this.$category_id);\r\n    new SelectNew(this.$promotions);\r\n    new SelectNew(this.$base_unit);\r\n    new SelectNew(this.$manufacturer_id);\r\n  }\r\n\r\n  changePrintName(item) {\r\n    if (item.detail) {\r\n      let $url = this.$productUrl.querySelector('a')\r\n      let slug = item.detail?.res?.arr?.model.slug\r\n      $url.setAttribute('href',`/product/${slug}`)\r\n      $url.text = slug\r\n    }\r\n\r\n  }\r\n\r\n  async checkBoxChanged({target}) {\r\n    let data = this.dto(this);\r\n    data[target.dataset.field] = +target.checked;\r\n    let res = await post('/adminsc/product/updateOrCreate', data)\r\n  }\r\n\r\n  async changeFields(obj) {\r\n    let field = obj.detail.target.dataset.field;\r\n    if (!field) return;\r\n    let data = this.dto(obj);\r\n    data[field] = obj.detail.next.value;\r\n    let res = await post('/adminsc/product/updateOrCreate', data)\r\n  }\r\n\r\n  dto(obj) {\r\n    return {\r\n      id: this.$product.dataset.id,\r\n    }\r\n  }\r\n}","import './product.scss'\r\nimport './units'\r\nimport './Values'\r\nimport {$, objAndFiles2FormData, post} from '../../common'\r\nimport {d, qs, qa, ael} from '../../constants'\r\n// import shippableTable from \"../../share/shippable/shippableUnitsTable\";\r\n\r\n\r\nimport {Fields} from \"./Fields\";\r\n\r\nimport Values from \"./Values\";\r\n\r\nimport Dnd from \"../../components/dnd/dnd\";\r\n\r\nexport default async function product() {\r\n  const product = document[qs](`.item-wrap[data-model='product']`)\r\n  if (!product) return false;\r\n\r\n  new Values(product);\r\n\r\n  new Fields(product);\r\n  const dragNdrop = document[qs]('[dnd]')\r\n  if (dragNdrop){\r\n    const {default:Dnd} =  await import(\"../../components/dnd/dnd\")\r\n    new Dnd(dragNdrop,addMainImage)\r\n  }\r\n  setCardPanel()\r\n\r\n  // new Dnd(), addMainImage);\r\n}\r\n\r\nasync function setCardPanel(){\r\n  const cardPanel = document[qs](`.cardPanel`)\r\n  if (cardPanel){\r\n    const {default:cardPanel} = import(\"./../../share/card_panel/card_panel\")\r\n    new cardPanel()\r\n  }\r\n}\r\nasync function addMainImage(files, target) {\r\n\r\n  const obj = {productId: target.closest('.item-wrap').dataset.id,};\r\n  // debugger\r\n  let data = objAndFiles2FormData(obj, files[0]);\r\n\r\n  let res = await post('/adminsc/product/saveMainImage', data);\r\n  let src = res?.arr[0];\r\n  if (src) {\r\n    let mainImage = target.closest('.dnd-container').querySelector('img');\r\n    mainImage.removeAttribute(\"src\");\r\n    mainImage.setAttribute(\"src\", src)\r\n  }\r\n}\r\n\r\n\r\n"],"names":["$","first","constructor","tableClass","this","$table","product1sId","innerText","$baseUnit","$addUnit","$rows","$emtyRow","find","onclick","createRow","bind","onchange","handleChange","onkeyup","handleKeyUp","clickRow","addEventListener","unitChanged","initSelects","setTimeout","deleteSelected","querySelectorAll","forEach","s","SelectNew","selected","Array","from","map","dataset","value","select","o","includes","remove","createSelect","el","createElement","tag","attr","className","get","qa","li","op","text","it","append","baseUnitText","selectedOptions","row","multiplier","baseUnit","minUnit","minUnitInput","del","obj","data","dto","target","closest","morphed","new_id","detail","next","old_id","prev","deleteSelectedUnitFromSelects","addDeletedUnitToSelects","post","classList","contains","res","arr","ok","e","test","update","type","hasAttribute","base_is_shippable","checked","product_1s_id","self","pivot","getUnitId","detach","baseUnitId","getBaseUnitId","options","selectedIndex","querySelector","Values","$product","$values","values","selectChanged","product_id","id","Fields","$fields","$category_id","$promotions","$base_unit","$manufacturer_id","$printName","changePrintName","$productUrl","setup","changeFields","item","$url","slug","model","setAttribute","checkBoxChanged","field","async","product","document","qs","dragNdrop","default","Dnd","addMainImage","cardPanel","setCardPanel","files","productId","objAndFiles2FormData","src","mainImage","removeAttribute"],"sourceRoot":""}