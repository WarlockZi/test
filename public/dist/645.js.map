{"version":3,"file":"645.js","mappings":"0JAEe,MAAMA,EACjBC,WAAAA,GAEI,GADAC,KAAKC,WAAYC,EAAAA,EAAAA,GAAE,uBAAuBC,SACrCH,KAAKC,UAAW,OAAO,EAC5BD,KAAKC,UAAUG,iBAAiB,QAASJ,KAAKK,SAASC,KAAKN,OAC5DA,KAAKO,OAAQL,EAAAA,EAAAA,GAAE,uBAAuB,GACtCF,KAAKQ,MAAON,EAAAA,EAAAA,GAAE,yBAAyB,GACvCF,KAAKS,KAAMP,EAAAA,EAAAA,GAAE,YAAY,EAC7B,CAEA,cAAMG,EAAS,OAACK,IACZ,GAAIA,EAAOC,UAAUC,SAAS,kBAAmB,CAC7C,IAAIC,EAAO,CACP,MAASb,KAAKO,MAAMO,MACpB,SAAYd,KAAKQ,KAAKM,OAE1B,GAAId,KAAKe,eAAgB,CACrB,MAAMC,QAAYhB,KAAKiB,KAAKJ,SACtBb,KAAKkB,mBAAmBF,EAClC,CACJ,CACJ,CAGAD,YAAAA,GACI,IAAII,EAAQC,EAAAA,GAASb,MAAMP,KAAKO,MAAMO,OACtC,OAAIK,GACAnB,KAAKS,IAAIY,UAAY,GACrBrB,KAAKS,IAAIY,UAAYF,GACrBjB,EAAAA,EAAAA,GAAEF,KAAKS,KAAKa,SAAS,UACd,UAEKC,IACOvB,KAAKO,MAAMO,QAE9BK,EAAQC,EAAAA,GAASI,SAASxB,KAAKQ,KAAKM,OAChCK,KACAnB,KAAKS,IAAIY,UAAY,GACrBrB,KAAKS,IAAIY,UAAYF,GACrBjB,EAAAA,EAAAA,GAAEF,KAAKS,KAAKa,SAAS,SACd,GAInB,CAEA,UAAML,CAAKJ,GACP,aAAaY,EAAAA,EAAAA,IAAK,cAAeZ,EACrC,CAEA,wBAAMK,CAAmBF,GACrB,MAAMU,EAAKV,GAAKW,KAAKD,GACrBE,aAAaC,QAAQ,KAAMH,GACJ,aAAnBV,GAAKW,KAAKG,KACVC,OAAOC,SAAW,WACQ,SAAnBhB,GAAKW,KAAKG,OACjBC,OAAOC,SAAW,gBAI1B,E","sources":["webpack://my-webpack-project/./public/src/Auth/login.js"],"sourcesContent":["import {$, post, validate} from \"../common\";\r\n\r\nexport default class Login {\r\n    constructor() {\r\n        this.loginForm = $(\"[data-auth='login']\").first();\r\n        if (!this.loginForm) return false\r\n        this.loginForm.addEventListener('click', this.sendData.bind(this))\r\n        this.email = $('input[type = email]')[0];\r\n        this.pass = $('input[name= password]')[0];\r\n        this.msg = $('.message')[0];\r\n    }\r\n\r\n    async sendData({target}) {\r\n        if (target.classList.contains('submit__button')) {\r\n            let data = {\r\n                \"email\": this.email.value,\r\n                \"password\": this.pass.value,\r\n            };\r\n            if (this.validateData()) {\r\n                const res = await this.send(data)\r\n                await this.parseLoginResponse(res)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    validateData() {\r\n        let error = validate.email(this.email.value);\r\n        if (error) {\r\n            this.msg.innerText = '';\r\n            this.msg.innerText = error;\r\n            $(this.msg).addClass('error');\r\n            return false\r\n        }\r\n        const suemail = process.env.SU_EMAIL;\r\n        const su = suemail === this.email.value;\r\n        if (!su) {\r\n            error = validate.password(this.pass.value);\r\n            if (error) {\r\n                this.msg.innerText = '';\r\n                this.msg.innerText = error;\r\n                $(this.msg).addClass('error');\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    async send(data) {\r\n        return await post('/auth/login', data);\r\n    }\r\n\r\n    async parseLoginResponse(res) {\r\n        const id = res?.arr?.id\r\n        localStorage.setItem('id', id)\r\n        if (res?.arr?.role === 'employee') {\r\n            window.location = '/adminsc'\r\n        } else if (res?.arr?.role === 'user') {\r\n            window.location = '/auth/cabinet'\r\n        } else if (res?.error) {\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n"],"names":["Login","constructor","this","loginForm","$","first","addEventListener","sendData","bind","email","pass","msg","target","classList","contains","data","value","validateData","res","send","parseLoginResponse","error","validate","innerText","addClass","process","password","post","id","arr","localStorage","setItem","role","window","location"],"sourceRoot":""}