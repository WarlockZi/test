{"version":3,"file":"712.js","mappings":"kKAGe,MAAMA,EACjBC,WAAAA,GAEI,GADAC,KAAKC,SAAWC,SAASC,EAAAA,IAAI,cACxBH,KAAKC,SAAU,OAAO,EAC3BD,KAAKI,qBACLJ,KAAKC,SAASI,EAAAA,GAAK,QAASL,KAAKM,YAAYC,KAAKP,MACtD,CAEAM,WAAAA,EAAY,OAACE,IACLA,EAAOC,UAAUC,SAAS,iBACZF,EAAOG,QAAQ,oBACNR,EAAAA,IAAI,YAEnC,CAGAC,kBAAAA,GACI,IAAIJ,KAAKC,SAASW,EAAAA,IAAI,qBACjBC,SAASC,IACN,IAAIC,EAAAA,EAAeD,EAAM,GAErC,E,sDCnBW,MAAMC,EACjBhB,WAAAA,CAAYS,GACR,IAAKA,EAAQ,OAAO,EACpBR,KAAKQ,OAASA,EAEdR,KAAKc,MAAQN,EAAOG,QAAQ,qBAC5BX,KAAKc,MAAMT,EAAAA,GAAK,QAASL,KAAKM,YAAYC,KAAKP,OAE/CA,KAAKgB,WAAahB,KAAKc,MAAMX,EAAAA,IAAI,gBAEjCH,KAAKiB,gBAAkBjB,KAAKc,MAAMX,EAAAA,IAAI,wBAAyB,EAC/DH,KAAKkB,OAASlB,KAAKc,MAAMK,QAAQD,MACjClB,KAAKoB,IAAMpB,KAAKc,MAAMK,QAAQ,QAC9BnB,KAAKqB,MAAQrB,KAAKc,MAAMX,EAAAA,IAAI,gBAC5BH,KAAKsB,eACLtB,KAAKuB,cACLvB,KAAKwB,YACT,CAEAD,WAAAA,GACI,IAAKvB,KAAKgB,aAAehB,KAAKiB,gBAAiB,OAAO,EAClDjB,KAAKyB,iBACLzB,KAAKgB,WAAWU,MAAMC,QAAU,OAChC3B,KAAKiB,gBAAgBS,MAAMC,QAAU,SAErC3B,KAAKgB,WAAWU,MAAMC,QAAU,OAChC3B,KAAKiB,gBAAgBS,MAAMC,QAAU,OAE7C,CAEArB,WAAAA,EAAY,OAACE,IACT,MAAMoB,EAAOpB,GAAUR,KAAKQ,OAC5B,GAAIoB,EAAKnB,UAAUC,SAAS,eACxBV,KAAK6B,gBAAgBD,QAClB,GAAIA,EAAKnB,UAAUC,SAAS,gBAC/BoB,OAAOC,SAASC,KAAO,aACpB,GAAIJ,EAAKnB,UAAUC,SAAS,QAAS,CACxC,MAAMuB,EAAML,EAAKjB,QAAQ,aACzBX,KAAKkC,UAAUD,EACnB,MAAO,GAAIL,EAAKnB,UAAUC,SAAS,SAAU,CACzC,MAAMuB,EAAML,EAAKjB,QAAQ,aACzBX,KAAKmC,UAAUF,EACnB,MAAO,GAAIL,EAAKnB,UAAUC,SAAS,SAAU,CACzC,MAAMuB,EAAML,EAAKjB,QAAQ,aACzBX,KAAKoC,aAAaH,EACtB,CACA,OAAOjC,IACX,CAEAkC,SAAAA,CAAUD,GACNA,EAAI9B,EAAAA,IAAI,SAASkC,QACjBJ,EAAId,QAAQmB,OAAS,GAAKL,EAAI9B,EAAAA,IAAI,SAASkC,MAC3CrC,KAAKoC,aAAaH,EACtB,CAEAE,SAAAA,CAAUF,GACN,MAAMM,EAAQN,EAAI9B,EAAAA,IAAI,UACPoC,EAAMF,MACT,EACRE,EAAMF,MAAQ,IAEdE,EAAMF,QACNJ,EAAId,QAAQmB,OAASC,EAAMF,OAE/BrC,KAAKoC,aAAaH,EACtB,CAEAR,aAAAA,GACI,MAAO,IAAIzB,KAAKc,MAAMF,EAAAA,IAAI,UAAU4B,QAAO,CAACC,EAAKC,IACtCD,IAAQC,EAAGL,OACnB,EACP,CAEAD,YAAAA,CAAaH,GACT,MAAMU,EAAQ3C,KAAKyB,cAAcQ,GACjCjC,KAAKwB,aACS,IAAVmB,EACA3C,KAAK4C,iBAEL5C,KAAK6C,SAAS7C,KAAK8C,IAAIb,GAE/B,CAEAT,UAAAA,GACI,IAAIH,EAAQ,IAAIrB,KAAKc,MAAMF,EAAAA,IAAI,cAAc4B,QAAO,CAACC,EAAKR,EAAKc,KAC3D,MAAMC,EAAShD,KAAKgD,OAAOf,GAC3B,IAAIgB,GAAWjD,KAAKkB,OAAS8B,EAAOE,YAAcF,EAAOL,MAGzD,OAFIK,EAAOC,UACPD,EAAOC,QAAQE,UAAYnD,KAAKoD,UAAUC,OAAOJ,IAC9CR,EAAMQ,CAAO,GACrB,GAECjD,KAAKqB,QACLrB,KAAKqB,MAAM8B,UAAYnD,KAAKoD,UAAUC,OAAOhC,GAErD,CAEAuB,cAAAA,GACI,IAAK5C,KAAKgB,WAAY,OAAO,EACxBhB,KAAKyB,kBACNzB,KAAKiB,gBAAgBS,MAAMC,QAAU,OACrC3B,KAAKiB,gBAAgBd,EAAAA,IAAI,SAASkC,MAAQ,IAC1CrC,KAAKgB,WAAWU,MAAMC,QAAU,OAChC3B,KAAKsD,iBAAiBtD,KAAKuD,SAASvD,KAAKc,QAEjD,CAGAe,eAAAA,GACI,IAAK7B,KAAKiB,gBAAiB,OAAO,EAClCjB,KAAKiB,gBAAgBS,MAAMC,QAAU,OACrC,MAAMgB,GAAS3C,KAAKiB,gBAAgBd,EAAAA,IAAI,SAASkC,MACjDrC,KAAKiB,gBAAgBd,EAAAA,IAAI,SAASkC,MAAQM,GAAgB,EAC1D3C,KAAKgB,WAAWU,MAAMC,QAAU,OAChC3B,KAAK6C,SAAS7C,KAAK8C,IAAI9C,KAAKiB,gBAAgBd,EAAAA,IAAI,eACpD,CAEAqD,MAAAA,GACI,OAAIC,EAAAA,EAAAA,MACO,iBAEJ,oBACX,CAEAH,gBAAAA,CAAiBC,GACb,MAAMG,EAAM,GAAG1D,KAAKwD,mBACpBG,EAAAA,EAAAA,IAAKD,EAAKH,EACd,CAEA,cAAMV,CAASC,GACX,MAAMY,EAAM,GAAG1D,KAAKwD,gCACFG,EAAAA,EAAAA,IAAKD,EAAKZ,EAChC,CAEAxB,YAAAA,GACItB,KAAKoD,UAAY,IAAIQ,KAAKC,aAAa,KAAM,CACzCnC,MAAO,WACPoC,SAAU,MACVC,sBAAuB,GAE/B,CAGAf,MAAAA,CAAOf,GACH,MAAO,CACHU,MAAOV,EAAI9B,EAAAA,IAAI,SAASkC,MACxBa,WAAYjB,EAAId,QAAQ+B,WACxBD,QAAShB,EAAI9B,EAAAA,IAAI,YAEzB,CAEAoD,QAAAA,CAASzC,GACL,MAAO,CACHkD,SAAUhE,KAAKiE,QAAQnD,GACvBoD,WAAYlE,KAAKoB,IAEzB,CAEA6C,OAAAA,CAAQnD,GACJ,MAAO,IAAIA,EAAMF,EAAAA,IAAI,eAAeuD,KAAKC,GAC9BA,EAAQjD,QAAQkD,QAE/B,CAEAvB,GAAAA,CAAIb,GACA,MAAO,CACHU,MAAOV,EAAI9B,EAAAA,IAAI,SAASkC,MACxBiC,QAASrC,EAAId,QAAQkD,OACrBH,WAAYlE,KAAKoB,IAEzB,E","sources":["webpack://my-webpack-project/./public/src/Category/category.js","webpack://my-webpack-project/./public/src/share/shippable/shippableUnitsTable.js"],"sourcesContent":["import {ael, d, qa, qs} from '../constants';\r\nimport shippableTable from \"../share/shippable/shippableUnitsTable\";\r\n\r\nexport default class Category {\r\n    constructor() {\r\n        this.category = document[qs]('.category');\r\n        if (!this.category) return false;\r\n        this.mapShippableTables()\r\n        this.category[ael]('click', this.handleClick.bind(this))\r\n    }\r\n\r\n    handleClick({target}) {\r\n        if (target.classList.contains('.blue-button')){\r\n            const table = target.closest('[shipable-table]')\r\n            const firstRow = table[qs]('.unit-row')\r\n        }\r\n    }\r\n\r\n\r\n    mapShippableTables() {\r\n        [...this.category[qa]('.shippable-table')]\r\n            .forEach((table) => {\r\n                new shippableTable(table)\r\n            })\r\n    }\r\n\r\n}\r\n\r\n","import \"./shippableTable.scss\";\r\nimport {getToken, isAuthed, post} from \"../../common\";\r\nimport {ael, qs, qa} from '../../constants';\r\n\r\n\r\nexport default class shippableTable {\r\n    constructor(target) {\r\n        if (!target) return false\r\n        this.target = target\r\n\r\n        this.table = target.closest('[shippable-table]')\r\n        this.table[ael]('click', this.handleClick.bind(this))\r\n\r\n        this.blueButton = this.table[qs]('.blue-button')\r\n\r\n        this.greenButtonWrap = this.table[qs]('.green-button-wrap') ?? false\r\n        this.price = +this.table.dataset.price\r\n        this.sid = this.table.dataset['1sid']\r\n        this.total = this.table[qs]('[data-total]')\r\n        this.setFormatter()\r\n        this.showButtons()\r\n        this.renderSums()\r\n    }\r\n\r\n    showButtons() {\r\n        if (!this.blueButton || !this.greenButtonWrap) return false\r\n        if (this.getTotalCount()) {\r\n            this.blueButton.style.display = 'none'\r\n            this.greenButtonWrap.style.display = 'flex'\r\n        } else {\r\n            this.blueButton.style.display = 'flex'\r\n            this.greenButtonWrap.style.display = 'none'\r\n        }\r\n    }\r\n\r\n    handleClick({target}) {\r\n        const targ = target ?? this.target\r\n        if (targ.classList.contains('blue-button')) {\r\n            this.showGreenButton(targ)\r\n        } else if (targ.classList.contains('green-button')) {\r\n            window.location.href = '/cart'\r\n        } else if (targ.classList.contains('plus')) {\r\n            const row = targ.closest('.unit-row')\r\n            this.increment(row)\r\n        } else if (targ.classList.contains('minus')) {\r\n            const row = targ.closest('.unit-row')\r\n            this.decrement(row)\r\n        } else if (targ.classList.contains('input')) {\r\n            const row = targ.closest('.unit-row')\r\n            this.handleChange(row)\r\n        }\r\n        return this\r\n    }\r\n\r\n    increment(row) {\r\n        row[qs]('input').value++\r\n        row.dataset.rowSum = '' + row[qs]('input').value\r\n        this.handleChange(row)\r\n    }\r\n\r\n    decrement(row) {\r\n        const input = row[qs]('input')\r\n        const count = +input.value\r\n        if (count < 2) {\r\n            input.value = ''\r\n        } else {\r\n            input.value--\r\n            row.dataset.rowSum = input.value\r\n        }\r\n        this.handleChange(row)\r\n    }\r\n\r\n    getTotalCount() {\r\n        return [...this.table[qa]('input')].reduce((acc, el) => {\r\n            return acc + (+el.value)\r\n        }, 0)\r\n    }\r\n\r\n    handleChange(row) {\r\n        const count = this.getTotalCount(row)\r\n        this.renderSums()\r\n        if (count === 0) {\r\n            this.showBlueButton()\r\n        } else {\r\n            this.toServer(this.dto(row))\r\n        }\r\n    }\r\n\r\n    renderSums() {\r\n        let total = [...this.table[qa]('.unit-row')].reduce((acc, row, i) => {\r\n            const rowDto = this.rowDto(row)\r\n            let sub_sum = +this.price * +rowDto.multiplier * +rowDto.count\r\n            if (rowDto.sub_sum)\r\n                rowDto.sub_sum.innerText = this.formatter.format(sub_sum)\r\n            return acc + sub_sum\r\n        }, 0)\r\n\r\n        if (this.total) {\r\n            this.total.innerText = this.formatter.format(total)\r\n        }\r\n    }\r\n\r\n    showBlueButton() {\r\n        if (!this.blueButton) return false\r\n        if (!this.getTotalCount()) {\r\n            this.greenButtonWrap.style.display = 'none'\r\n            this.greenButtonWrap[qs]('input').value = '' + 0\r\n            this.blueButton.style.display = 'flex'\r\n            this.deleteOrderItems(this.tableDTO(this.table))\r\n        }\r\n    }\r\n\r\n\r\n    showGreenButton() {\r\n        if (!this.greenButtonWrap) return false\r\n        this.greenButtonWrap.style.display = 'flex'\r\n        const count = +this.greenButtonWrap[qs]('input').value\r\n        this.greenButtonWrap[qs]('input').value = count ? count : 1\r\n        this.blueButton.style.display = 'none'\r\n        this.toServer(this.dto(this.greenButtonWrap[qs]('[unit-row]')))\r\n    }\r\n\r\n    getUrl() {\r\n        if (isAuthed()) {\r\n            return '/adminsc/order'\r\n        }\r\n        return '/adminsc/orderitem'\r\n    }\r\n\r\n    deleteOrderItems(tableDTO) {\r\n        const url = `${this.getUrl()}/delete`\r\n        post(url, tableDTO)\r\n    }\r\n\r\n    async toServer(dto) {\r\n        const url = `${this.getUrl()}/updateOrCreate`\r\n        const res = await post(url, dto)\r\n    }\r\n\r\n    setFormatter() {\r\n        this.formatter = new Intl.NumberFormat(\"ru\", {\r\n            style: \"currency\",\r\n            currency: \"RUB\",\r\n            minimumFractionDigits: 2\r\n        });\r\n    }\r\n\r\n\r\n    rowDto(row) {\r\n        return {\r\n            count: row[qs]('input').value,\r\n            multiplier: row.dataset.multiplier,\r\n            sub_sum: row[qs]('.sub-sum'),\r\n        }\r\n    }\r\n\r\n    tableDTO(table) {\r\n        return {\r\n            unit_ids: this.unitIds(table),\r\n            product_id: this.sid,\r\n        }\r\n    }\r\n\r\n    unitIds(table) {\r\n        return [...table[qa]('[unit-row]')].map((unitRow) => {\r\n            return unitRow.dataset.unitid\r\n        })\r\n    }\r\n\r\n    dto(row) {\r\n        return {\r\n            count: row[qs]('input').value,\r\n            unit_id: row.dataset.unitid,\r\n            product_id: this.sid,\r\n        }\r\n    }\r\n\r\n}\r\n\r\n"],"names":["Category","constructor","this","category","document","qs","mapShippableTables","ael","handleClick","bind","target","classList","contains","closest","qa","forEach","table","shippableTable","blueButton","greenButtonWrap","price","dataset","sid","total","setFormatter","showButtons","renderSums","getTotalCount","style","display","targ","showGreenButton","window","location","href","row","increment","decrement","handleChange","value","rowSum","input","reduce","acc","el","count","showBlueButton","toServer","dto","i","rowDto","sub_sum","multiplier","innerText","formatter","format","deleteOrderItems","tableDTO","getUrl","isAuthed","url","post","Intl","NumberFormat","currency","minimumFractionDigits","unit_ids","unitIds","product_id","map","unitRow","unitid","unit_id"],"sourceRoot":""}